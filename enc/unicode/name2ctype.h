/* C code produced by gperf version 3.0.3 */
/* Command-line: gperf -7 -c -j1 -i1 -t -C -P -T -H uniname2ctype_hash -Q uniname2ctype_pool -N uniname2ctype_p  */
#ifndef USE_UNICODE_PROPERTIES
/* Computed positions: -k'1,3' */
#else /* USE_UNICODE_PROPERTIES */
/* Computed positions: -k'1-3,5-6,12,16,$' */
#endif /* USE_UNICODE_PROPERTIES */

#if !((' ' == 32) && ('!' == 33) && ('"' == 34) && ('#' == 35) \
      && ('%' == 37) && ('&' == 38) && ('\'' == 39) && ('(' == 40) \
      && (')' == 41) && ('*' == 42) && ('+' == 43) && (',' == 44) \
      && ('-' == 45) && ('.' == 46) && ('/' == 47) && ('0' == 48) \
      && ('1' == 49) && ('2' == 50) && ('3' == 51) && ('4' == 52) \
      && ('5' == 53) && ('6' == 54) && ('7' == 55) && ('8' == 56) \
      && ('9' == 57) && (':' == 58) && (';' == 59) && ('<' == 60) \
      && ('=' == 61) && ('>' == 62) && ('?' == 63) && ('A' == 65) \
      && ('B' == 66) && ('C' == 67) && ('D' == 68) && ('E' == 69) \
      && ('F' == 70) && ('G' == 71) && ('H' == 72) && ('I' == 73) \
      && ('J' == 74) && ('K' == 75) && ('L' == 76) && ('M' == 77) \
      && ('N' == 78) && ('O' == 79) && ('P' == 80) && ('Q' == 81) \
      && ('R' == 82) && ('S' == 83) && ('T' == 84) && ('U' == 85) \
      && ('V' == 86) && ('W' == 87) && ('X' == 88) && ('Y' == 89) \
      && ('Z' == 90) && ('[' == 91) && ('\\' == 92) && (']' == 93) \
      && ('^' == 94) && ('_' == 95) && ('a' == 97) && ('b' == 98) \
      && ('c' == 99) && ('d' == 100) && ('e' == 101) && ('f' == 102) \
      && ('g' == 103) && ('h' == 104) && ('i' == 105) && ('j' == 106) \
      && ('k' == 107) && ('l' == 108) && ('m' == 109) && ('n' == 110) \
      && ('o' == 111) && ('p' == 112) && ('q' == 113) && ('r' == 114) \
      && ('s' == 115) && ('t' == 116) && ('u' == 117) && ('v' == 118) \
      && ('w' == 119) && ('x' == 120) && ('y' == 121) && ('z' == 122) \
      && ('{' == 123) && ('|' == 124) && ('}' == 125) && ('~' == 126))
/* The character set is not based on ISO-646.  */
error "gperf generated tables don't work with this execution character set. Please report a bug to <bug-gnu-gperf@gnu.org>."
#endif


#define long size_t

/* 'NEWLINE': [[:NEWLINE:]] */
static const OnigCodePoint CR_NEWLINE[] = {
	1,
	0x000a, 0x000a,
}; /* CR_NEWLINE */

/* 'Alpha': [[:Alpha:]] */
static const OnigCodePoint CR_Alpha[] = {
	486,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0345, 0x0345,
	0x0370, 0x0374,
	0x0376, 0x0377,
	0x037a, 0x037d,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x048a, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x05b0, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0610, 0x061a,
	0x0620, 0x0657,
	0x0659, 0x065f,
	0x066e, 0x06d3,
	0x06d5, 0x06dc,
	0x06e1, 0x06e8,
	0x06ed, 0x06ef,
	0x06fa, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x073f,
	0x074d, 0x07b1,
	0x07ca, 0x07ea,
	0x07f4, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x0817,
	0x081a, 0x082c,
	0x0840, 0x0858,
	0x0900, 0x093b,
	0x093d, 0x094c,
	0x094e, 0x0950,
	0x0955, 0x0963,
	0x0971, 0x0977,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bd, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cc,
	0x09ce, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09f0, 0x09f1,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4c,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a70, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abd, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acc,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3d, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4c,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b71, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcc,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4c,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbd, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccc,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4c,
	0x0d4e, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d7a, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df3,
	0x0e01, 0x0e3a,
	0x0e40, 0x0e46,
	0x0e4d, 0x0e4d,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ecd, 0x0ecd,
	0x0edc, 0x0edd,
	0x0f00, 0x0f00,
	0x0f40, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f81,
	0x0f88, 0x0f97,
	0x0f99, 0x0fbc,
	0x1000, 0x1036,
	0x1038, 0x1038,
	0x103b, 0x103f,
	0x1050, 0x1062,
	0x1065, 0x1068,
	0x106e, 0x1086,
	0x108e, 0x108e,
	0x109c, 0x109d,
	0x10a0, 0x10c5,
	0x10d0, 0x10fa,
	0x10fc, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135f, 0x135f,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16ee, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1713,
	0x1720, 0x1733,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17b3,
	0x17b6, 0x17c8,
	0x17d7, 0x17d7,
	0x17dc, 0x17dc,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x1938,
	0x1950, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x1a00, 0x1a1b,
	0x1a20, 0x1a5e,
	0x1a61, 0x1a74,
	0x1aa7, 0x1aa7,
	0x1b00, 0x1b33,
	0x1b35, 0x1b43,
	0x1b45, 0x1b4b,
	0x1b80, 0x1ba9,
	0x1bae, 0x1baf,
	0x1bc0, 0x1be5,
	0x1be7, 0x1bf1,
	0x1c00, 0x1c35,
	0x1c4d, 0x1c4f,
	0x1c5a, 0x1c7d,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf2,
	0x1d00, 0x1dbf,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x212f, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x24b6, 0x24e9,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cee,
	0x2d00, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2dff,
	0x2e2f, 0x2e2f,
	0x3005, 0x3007,
	0x3021, 0x3029,
	0x3031, 0x3035,
	0x3038, 0x303c,
	0x3041, 0x3096,
	0x309d, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcb,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa61f,
	0xa62a, 0xa62b,
	0xa640, 0xa66e,
	0xa67f, 0xa697,
	0xa6a0, 0xa6ef,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa801,
	0xa803, 0xa805,
	0xa807, 0xa80a,
	0xa80c, 0xa827,
	0xa840, 0xa873,
	0xa880, 0xa8c3,
	0xa8f2, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa90a, 0xa92a,
	0xa930, 0xa952,
	0xa960, 0xa97c,
	0xa980, 0xa9b2,
	0xa9b4, 0xa9bf,
	0xa9cf, 0xa9cf,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa60, 0xaa76,
	0xaa7a, 0xaa7a,
	0xaa80, 0xaabe,
	0xaac0, 0xaac0,
	0xaac2, 0xaac2,
	0xaadb, 0xaadd,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabea,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0xff66, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10140, 0x10174,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x103d1, 0x103d5,
	0x10400, 0x1049d,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a60, 0x10a7c,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10c00, 0x10c48,
	0x11000, 0x11045,
	0x11082, 0x110b8,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_Alpha */

/* 'Blank': [[:Blank:]] */
static const OnigCodePoint CR_Blank[] = {
	9,
	0x0009, 0x0009,
	0x0020, 0x0020,
	0x00a0, 0x00a0,
	0x1680, 0x1680,
	0x180e, 0x180e,
	0x2000, 0x200a,
	0x202f, 0x202f,
	0x205f, 0x205f,
	0x3000, 0x3000,
}; /* CR_Blank */

/* 'Cntrl': [[:Cntrl:]] */
static const OnigCodePoint CR_Cntrl[] = {
	2,
	0x0000, 0x001f,
	0x007f, 0x009f,
}; /* CR_Cntrl */

/* 'Digit': [[:Digit:]] */
static const OnigCodePoint CR_Digit[] = {
	38,
	0x0030, 0x0039,
	0x0660, 0x0669,
	0x06f0, 0x06f9,
	0x07c0, 0x07c9,
	0x0966, 0x096f,
	0x09e6, 0x09ef,
	0x0a66, 0x0a6f,
	0x0ae6, 0x0aef,
	0x0b66, 0x0b6f,
	0x0be6, 0x0bef,
	0x0c66, 0x0c6f,
	0x0ce6, 0x0cef,
	0x0d66, 0x0d6f,
	0x0e50, 0x0e59,
	0x0ed0, 0x0ed9,
	0x0f20, 0x0f29,
	0x1040, 0x1049,
	0x1090, 0x1099,
	0x17e0, 0x17e9,
	0x1810, 0x1819,
	0x1946, 0x194f,
	0x19d0, 0x19d9,
	0x1a80, 0x1a89,
	0x1a90, 0x1a99,
	0x1b50, 0x1b59,
	0x1bb0, 0x1bb9,
	0x1c40, 0x1c49,
	0x1c50, 0x1c59,
	0xa620, 0xa629,
	0xa8d0, 0xa8d9,
	0xa900, 0xa909,
	0xa9d0, 0xa9d9,
	0xaa50, 0xaa59,
	0xabf0, 0xabf9,
	0xff10, 0xff19,
	0x104a0, 0x104a9,
	0x11066, 0x1106f,
	0x1d7ce, 0x1d7ff,
}; /* CR_Digit */

/* 'Graph': [[:Graph:]] */
static const OnigCodePoint CR_Graph[] = {
	506,
	0x0021, 0x007e,
	0x00a1, 0x0377,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x0606, 0x061b,
	0x061e, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0800, 0x082d,
	0x0830, 0x083e,
	0x0840, 0x085b,
	0x085e, 0x085e,
	0x0900, 0x0977,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b77,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fda,
	0x1000, 0x10c5,
	0x10d0, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x167f,
	0x1681, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180d,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1baa,
	0x1bae, 0x1bb9,
	0x1bc0, 0x1bf3,
	0x1bfc, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cd0, 0x1cf2,
	0x1d00, 0x1de6,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x200b, 0x2027,
	0x202a, 0x202e,
	0x2030, 0x205e,
	0x2060, 0x2064,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x209c,
	0x20a0, 0x20b9,
	0x20d0, 0x20f0,
	0x2100, 0x2189,
	0x2190, 0x23f3,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x26ff,
	0x2701, 0x27ca,
	0x27cc, 0x27cc,
	0x27ce, 0x2b4c,
	0x2b50, 0x2b59,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cf1,
	0x2cf9, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d70,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e31,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3001, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31ba,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcb,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa673,
	0xa67c, 0xa697,
	0xa6a0, 0xa6f7,
	0xa700, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa8e0, 0xa8fb,
	0xa900, 0xa953,
	0xa95f, 0xa97c,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9df,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa7b,
	0xaa80, 0xaac2,
	0xaadb, 0xaadf,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xe000, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbc1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe26,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0xfffd,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10190, 0x1019b,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1085f,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a7f,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b7f,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11000, 0x1104d,
	0x11052, 0x1106f,
	0x11080, 0x110c1,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0be,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0df,
	0x1f100, 0x1f10a,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f169,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f320,
	0x1f330, 0x1f335,
	0x1f337, 0x1f37c,
	0x1f380, 0x1f393,
	0x1f3a0, 0x1f3c4,
	0x1f3c6, 0x1f3ca,
	0x1f3e0, 0x1f3f0,
	0x1f400, 0x1f43e,
	0x1f440, 0x1f440,
	0x1f442, 0x1f4f7,
	0x1f4f9, 0x1f4fc,
	0x1f500, 0x1f53d,
	0x1f550, 0x1f567,
	0x1f5fb, 0x1f5ff,
	0x1f601, 0x1f610,
	0x1f612, 0x1f614,
	0x1f616, 0x1f616,
	0x1f618, 0x1f618,
	0x1f61a, 0x1f61a,
	0x1f61c, 0x1f61e,
	0x1f620, 0x1f625,
	0x1f628, 0x1f62b,
	0x1f62d, 0x1f62d,
	0x1f630, 0x1f633,
	0x1f635, 0x1f640,
	0x1f645, 0x1f64f,
	0x1f680, 0x1f6c5,
	0x1f700, 0x1f773,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xf0000, 0xffffd,
	0x100000, 0x10fffd,
}; /* CR_Graph */

/* 'Lower': [[:Lower:]] */
static const OnigCodePoint CR_Lower[] = {
	612,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00df, 0x00f6,
	0x00f8, 0x00ff,
	0x0101, 0x0101,
	0x0103, 0x0103,
	0x0105, 0x0105,
	0x0107, 0x0107,
	0x0109, 0x0109,
	0x010b, 0x010b,
	0x010d, 0x010d,
	0x010f, 0x010f,
	0x0111, 0x0111,
	0x0113, 0x0113,
	0x0115, 0x0115,
	0x0117, 0x0117,
	0x0119, 0x0119,
	0x011b, 0x011b,
	0x011d, 0x011d,
	0x011f, 0x011f,
	0x0121, 0x0121,
	0x0123, 0x0123,
	0x0125, 0x0125,
	0x0127, 0x0127,
	0x0129, 0x0129,
	0x012b, 0x012b,
	0x012d, 0x012d,
	0x012f, 0x012f,
	0x0131, 0x0131,
	0x0133, 0x0133,
	0x0135, 0x0135,
	0x0137, 0x0138,
	0x013a, 0x013a,
	0x013c, 0x013c,
	0x013e, 0x013e,
	0x0140, 0x0140,
	0x0142, 0x0142,
	0x0144, 0x0144,
	0x0146, 0x0146,
	0x0148, 0x0149,
	0x014b, 0x014b,
	0x014d, 0x014d,
	0x014f, 0x014f,
	0x0151, 0x0151,
	0x0153, 0x0153,
	0x0155, 0x0155,
	0x0157, 0x0157,
	0x0159, 0x0159,
	0x015b, 0x015b,
	0x015d, 0x015d,
	0x015f, 0x015f,
	0x0161, 0x0161,
	0x0163, 0x0163,
	0x0165, 0x0165,
	0x0167, 0x0167,
	0x0169, 0x0169,
	0x016b, 0x016b,
	0x016d, 0x016d,
	0x016f, 0x016f,
	0x0171, 0x0171,
	0x0173, 0x0173,
	0x0175, 0x0175,
	0x0177, 0x0177,
	0x017a, 0x017a,
	0x017c, 0x017c,
	0x017e, 0x0180,
	0x0183, 0x0183,
	0x0185, 0x0185,
	0x0188, 0x0188,
	0x018c, 0x018d,
	0x0192, 0x0192,
	0x0195, 0x0195,
	0x0199, 0x019b,
	0x019e, 0x019e,
	0x01a1, 0x01a1,
	0x01a3, 0x01a3,
	0x01a5, 0x01a5,
	0x01a8, 0x01a8,
	0x01aa, 0x01ab,
	0x01ad, 0x01ad,
	0x01b0, 0x01b0,
	0x01b4, 0x01b4,
	0x01b6, 0x01b6,
	0x01b9, 0x01ba,
	0x01bd, 0x01bf,
	0x01c6, 0x01c6,
	0x01c9, 0x01c9,
	0x01cc, 0x01cc,
	0x01ce, 0x01ce,
	0x01d0, 0x01d0,
	0x01d2, 0x01d2,
	0x01d4, 0x01d4,
	0x01d6, 0x01d6,
	0x01d8, 0x01d8,
	0x01da, 0x01da,
	0x01dc, 0x01dd,
	0x01df, 0x01df,
	0x01e1, 0x01e1,
	0x01e3, 0x01e3,
	0x01e5, 0x01e5,
	0x01e7, 0x01e7,
	0x01e9, 0x01e9,
	0x01eb, 0x01eb,
	0x01ed, 0x01ed,
	0x01ef, 0x01f0,
	0x01f3, 0x01f3,
	0x01f5, 0x01f5,
	0x01f9, 0x01f9,
	0x01fb, 0x01fb,
	0x01fd, 0x01fd,
	0x01ff, 0x01ff,
	0x0201, 0x0201,
	0x0203, 0x0203,
	0x0205, 0x0205,
	0x0207, 0x0207,
	0x0209, 0x0209,
	0x020b, 0x020b,
	0x020d, 0x020d,
	0x020f, 0x020f,
	0x0211, 0x0211,
	0x0213, 0x0213,
	0x0215, 0x0215,
	0x0217, 0x0217,
	0x0219, 0x0219,
	0x021b, 0x021b,
	0x021d, 0x021d,
	0x021f, 0x021f,
	0x0221, 0x0221,
	0x0223, 0x0223,
	0x0225, 0x0225,
	0x0227, 0x0227,
	0x0229, 0x0229,
	0x022b, 0x022b,
	0x022d, 0x022d,
	0x022f, 0x022f,
	0x0231, 0x0231,
	0x0233, 0x0239,
	0x023c, 0x023c,
	0x023f, 0x0240,
	0x0242, 0x0242,
	0x0247, 0x0247,
	0x0249, 0x0249,
	0x024b, 0x024b,
	0x024d, 0x024d,
	0x024f, 0x0293,
	0x0295, 0x02b8,
	0x02c0, 0x02c1,
	0x02e0, 0x02e4,
	0x0345, 0x0345,
	0x0371, 0x0371,
	0x0373, 0x0373,
	0x0377, 0x0377,
	0x037a, 0x037d,
	0x0390, 0x0390,
	0x03ac, 0x03ce,
	0x03d0, 0x03d1,
	0x03d5, 0x03d7,
	0x03d9, 0x03d9,
	0x03db, 0x03db,
	0x03dd, 0x03dd,
	0x03df, 0x03df,
	0x03e1, 0x03e1,
	0x03e3, 0x03e3,
	0x03e5, 0x03e5,
	0x03e7, 0x03e7,
	0x03e9, 0x03e9,
	0x03eb, 0x03eb,
	0x03ed, 0x03ed,
	0x03ef, 0x03f3,
	0x03f5, 0x03f5,
	0x03f8, 0x03f8,
	0x03fb, 0x03fc,
	0x0430, 0x045f,
	0x0461, 0x0461,
	0x0463, 0x0463,
	0x0465, 0x0465,
	0x0467, 0x0467,
	0x0469, 0x0469,
	0x046b, 0x046b,
	0x046d, 0x046d,
	0x046f, 0x046f,
	0x0471, 0x0471,
	0x0473, 0x0473,
	0x0475, 0x0475,
	0x0477, 0x0477,
	0x0479, 0x0479,
	0x047b, 0x047b,
	0x047d, 0x047d,
	0x047f, 0x047f,
	0x0481, 0x0481,
	0x048b, 0x048b,
	0x048d, 0x048d,
	0x048f, 0x048f,
	0x0491, 0x0491,
	0x0493, 0x0493,
	0x0495, 0x0495,
	0x0497, 0x0497,
	0x0499, 0x0499,
	0x049b, 0x049b,
	0x049d, 0x049d,
	0x049f, 0x049f,
	0x04a1, 0x04a1,
	0x04a3, 0x04a3,
	0x04a5, 0x04a5,
	0x04a7, 0x04a7,
	0x04a9, 0x04a9,
	0x04ab, 0x04ab,
	0x04ad, 0x04ad,
	0x04af, 0x04af,
	0x04b1, 0x04b1,
	0x04b3, 0x04b3,
	0x04b5, 0x04b5,
	0x04b7, 0x04b7,
	0x04b9, 0x04b9,
	0x04bb, 0x04bb,
	0x04bd, 0x04bd,
	0x04bf, 0x04bf,
	0x04c2, 0x04c2,
	0x04c4, 0x04c4,
	0x04c6, 0x04c6,
	0x04c8, 0x04c8,
	0x04ca, 0x04ca,
	0x04cc, 0x04cc,
	0x04ce, 0x04cf,
	0x04d1, 0x04d1,
	0x04d3, 0x04d3,
	0x04d5, 0x04d5,
	0x04d7, 0x04d7,
	0x04d9, 0x04d9,
	0x04db, 0x04db,
	0x04dd, 0x04dd,
	0x04df, 0x04df,
	0x04e1, 0x04e1,
	0x04e3, 0x04e3,
	0x04e5, 0x04e5,
	0x04e7, 0x04e7,
	0x04e9, 0x04e9,
	0x04eb, 0x04eb,
	0x04ed, 0x04ed,
	0x04ef, 0x04ef,
	0x04f1, 0x04f1,
	0x04f3, 0x04f3,
	0x04f5, 0x04f5,
	0x04f7, 0x04f7,
	0x04f9, 0x04f9,
	0x04fb, 0x04fb,
	0x04fd, 0x04fd,
	0x04ff, 0x04ff,
	0x0501, 0x0501,
	0x0503, 0x0503,
	0x0505, 0x0505,
	0x0507, 0x0507,
	0x0509, 0x0509,
	0x050b, 0x050b,
	0x050d, 0x050d,
	0x050f, 0x050f,
	0x0511, 0x0511,
	0x0513, 0x0513,
	0x0515, 0x0515,
	0x0517, 0x0517,
	0x0519, 0x0519,
	0x051b, 0x051b,
	0x051d, 0x051d,
	0x051f, 0x051f,
	0x0521, 0x0521,
	0x0523, 0x0523,
	0x0525, 0x0525,
	0x0527, 0x0527,
	0x0561, 0x0587,
	0x1d00, 0x1dbf,
	0x1e01, 0x1e01,
	0x1e03, 0x1e03,
	0x1e05, 0x1e05,
	0x1e07, 0x1e07,
	0x1e09, 0x1e09,
	0x1e0b, 0x1e0b,
	0x1e0d, 0x1e0d,
	0x1e0f, 0x1e0f,
	0x1e11, 0x1e11,
	0x1e13, 0x1e13,
	0x1e15, 0x1e15,
	0x1e17, 0x1e17,
	0x1e19, 0x1e19,
	0x1e1b, 0x1e1b,
	0x1e1d, 0x1e1d,
	0x1e1f, 0x1e1f,
	0x1e21, 0x1e21,
	0x1e23, 0x1e23,
	0x1e25, 0x1e25,
	0x1e27, 0x1e27,
	0x1e29, 0x1e29,
	0x1e2b, 0x1e2b,
	0x1e2d, 0x1e2d,
	0x1e2f, 0x1e2f,
	0x1e31, 0x1e31,
	0x1e33, 0x1e33,
	0x1e35, 0x1e35,
	0x1e37, 0x1e37,
	0x1e39, 0x1e39,
	0x1e3b, 0x1e3b,
	0x1e3d, 0x1e3d,
	0x1e3f, 0x1e3f,
	0x1e41, 0x1e41,
	0x1e43, 0x1e43,
	0x1e45, 0x1e45,
	0x1e47, 0x1e47,
	0x1e49, 0x1e49,
	0x1e4b, 0x1e4b,
	0x1e4d, 0x1e4d,
	0x1e4f, 0x1e4f,
	0x1e51, 0x1e51,
	0x1e53, 0x1e53,
	0x1e55, 0x1e55,
	0x1e57, 0x1e57,
	0x1e59, 0x1e59,
	0x1e5b, 0x1e5b,
	0x1e5d, 0x1e5d,
	0x1e5f, 0x1e5f,
	0x1e61, 0x1e61,
	0x1e63, 0x1e63,
	0x1e65, 0x1e65,
	0x1e67, 0x1e67,
	0x1e69, 0x1e69,
	0x1e6b, 0x1e6b,
	0x1e6d, 0x1e6d,
	0x1e6f, 0x1e6f,
	0x1e71, 0x1e71,
	0x1e73, 0x1e73,
	0x1e75, 0x1e75,
	0x1e77, 0x1e77,
	0x1e79, 0x1e79,
	0x1e7b, 0x1e7b,
	0x1e7d, 0x1e7d,
	0x1e7f, 0x1e7f,
	0x1e81, 0x1e81,
	0x1e83, 0x1e83,
	0x1e85, 0x1e85,
	0x1e87, 0x1e87,
	0x1e89, 0x1e89,
	0x1e8b, 0x1e8b,
	0x1e8d, 0x1e8d,
	0x1e8f, 0x1e8f,
	0x1e91, 0x1e91,
	0x1e93, 0x1e93,
	0x1e95, 0x1e9d,
	0x1e9f, 0x1e9f,
	0x1ea1, 0x1ea1,
	0x1ea3, 0x1ea3,
	0x1ea5, 0x1ea5,
	0x1ea7, 0x1ea7,
	0x1ea9, 0x1ea9,
	0x1eab, 0x1eab,
	0x1ead, 0x1ead,
	0x1eaf, 0x1eaf,
	0x1eb1, 0x1eb1,
	0x1eb3, 0x1eb3,
	0x1eb5, 0x1eb5,
	0x1eb7, 0x1eb7,
	0x1eb9, 0x1eb9,
	0x1ebb, 0x1ebb,
	0x1ebd, 0x1ebd,
	0x1ebf, 0x1ebf,
	0x1ec1, 0x1ec1,
	0x1ec3, 0x1ec3,
	0x1ec5, 0x1ec5,
	0x1ec7, 0x1ec7,
	0x1ec9, 0x1ec9,
	0x1ecb, 0x1ecb,
	0x1ecd, 0x1ecd,
	0x1ecf, 0x1ecf,
	0x1ed1, 0x1ed1,
	0x1ed3, 0x1ed3,
	0x1ed5, 0x1ed5,
	0x1ed7, 0x1ed7,
	0x1ed9, 0x1ed9,
	0x1edb, 0x1edb,
	0x1edd, 0x1edd,
	0x1edf, 0x1edf,
	0x1ee1, 0x1ee1,
	0x1ee3, 0x1ee3,
	0x1ee5, 0x1ee5,
	0x1ee7, 0x1ee7,
	0x1ee9, 0x1ee9,
	0x1eeb, 0x1eeb,
	0x1eed, 0x1eed,
	0x1eef, 0x1eef,
	0x1ef1, 0x1ef1,
	0x1ef3, 0x1ef3,
	0x1ef5, 0x1ef5,
	0x1ef7, 0x1ef7,
	0x1ef9, 0x1ef9,
	0x1efb, 0x1efb,
	0x1efd, 0x1efd,
	0x1eff, 0x1f07,
	0x1f10, 0x1f15,
	0x1f20, 0x1f27,
	0x1f30, 0x1f37,
	0x1f40, 0x1f45,
	0x1f50, 0x1f57,
	0x1f60, 0x1f67,
	0x1f70, 0x1f7d,
	0x1f80, 0x1f87,
	0x1f90, 0x1f97,
	0x1fa0, 0x1fa7,
	0x1fb0, 0x1fb4,
	0x1fb6, 0x1fb7,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fc7,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fd7,
	0x1fe0, 0x1fe7,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ff7,
	0x2090, 0x2094,
	0x210a, 0x210a,
	0x210e, 0x210f,
	0x2113, 0x2113,
	0x212f, 0x212f,
	0x2134, 0x2134,
	0x2139, 0x2139,
	0x213c, 0x213d,
	0x2146, 0x2149,
	0x214e, 0x214e,
	0x2170, 0x217f,
	0x2184, 0x2184,
	0x24d0, 0x24e9,
	0x2c30, 0x2c5e,
	0x2c61, 0x2c61,
	0x2c65, 0x2c66,
	0x2c68, 0x2c68,
	0x2c6a, 0x2c6a,
	0x2c6c, 0x2c6c,
	0x2c71, 0x2c71,
	0x2c73, 0x2c74,
	0x2c76, 0x2c7d,
	0x2c81, 0x2c81,
	0x2c83, 0x2c83,
	0x2c85, 0x2c85,
	0x2c87, 0x2c87,
	0x2c89, 0x2c89,
	0x2c8b, 0x2c8b,
	0x2c8d, 0x2c8d,
	0x2c8f, 0x2c8f,
	0x2c91, 0x2c91,
	0x2c93, 0x2c93,
	0x2c95, 0x2c95,
	0x2c97, 0x2c97,
	0x2c99, 0x2c99,
	0x2c9b, 0x2c9b,
	0x2c9d, 0x2c9d,
	0x2c9f, 0x2c9f,
	0x2ca1, 0x2ca1,
	0x2ca3, 0x2ca3,
	0x2ca5, 0x2ca5,
	0x2ca7, 0x2ca7,
	0x2ca9, 0x2ca9,
	0x2cab, 0x2cab,
	0x2cad, 0x2cad,
	0x2caf, 0x2caf,
	0x2cb1, 0x2cb1,
	0x2cb3, 0x2cb3,
	0x2cb5, 0x2cb5,
	0x2cb7, 0x2cb7,
	0x2cb9, 0x2cb9,
	0x2cbb, 0x2cbb,
	0x2cbd, 0x2cbd,
	0x2cbf, 0x2cbf,
	0x2cc1, 0x2cc1,
	0x2cc3, 0x2cc3,
	0x2cc5, 0x2cc5,
	0x2cc7, 0x2cc7,
	0x2cc9, 0x2cc9,
	0x2ccb, 0x2ccb,
	0x2ccd, 0x2ccd,
	0x2ccf, 0x2ccf,
	0x2cd1, 0x2cd1,
	0x2cd3, 0x2cd3,
	0x2cd5, 0x2cd5,
	0x2cd7, 0x2cd7,
	0x2cd9, 0x2cd9,
	0x2cdb, 0x2cdb,
	0x2cdd, 0x2cdd,
	0x2cdf, 0x2cdf,
	0x2ce1, 0x2ce1,
	0x2ce3, 0x2ce4,
	0x2cec, 0x2cec,
	0x2cee, 0x2cee,
	0x2d00, 0x2d25,
	0xa641, 0xa641,
	0xa643, 0xa643,
	0xa645, 0xa645,
	0xa647, 0xa647,
	0xa649, 0xa649,
	0xa64b, 0xa64b,
	0xa64d, 0xa64d,
	0xa64f, 0xa64f,
	0xa651, 0xa651,
	0xa653, 0xa653,
	0xa655, 0xa655,
	0xa657, 0xa657,
	0xa659, 0xa659,
	0xa65b, 0xa65b,
	0xa65d, 0xa65d,
	0xa65f, 0xa65f,
	0xa661, 0xa661,
	0xa663, 0xa663,
	0xa665, 0xa665,
	0xa667, 0xa667,
	0xa669, 0xa669,
	0xa66b, 0xa66b,
	0xa66d, 0xa66d,
	0xa681, 0xa681,
	0xa683, 0xa683,
	0xa685, 0xa685,
	0xa687, 0xa687,
	0xa689, 0xa689,
	0xa68b, 0xa68b,
	0xa68d, 0xa68d,
	0xa68f, 0xa68f,
	0xa691, 0xa691,
	0xa693, 0xa693,
	0xa695, 0xa695,
	0xa697, 0xa697,
	0xa723, 0xa723,
	0xa725, 0xa725,
	0xa727, 0xa727,
	0xa729, 0xa729,
	0xa72b, 0xa72b,
	0xa72d, 0xa72d,
	0xa72f, 0xa731,
	0xa733, 0xa733,
	0xa735, 0xa735,
	0xa737, 0xa737,
	0xa739, 0xa739,
	0xa73b, 0xa73b,
	0xa73d, 0xa73d,
	0xa73f, 0xa73f,
	0xa741, 0xa741,
	0xa743, 0xa743,
	0xa745, 0xa745,
	0xa747, 0xa747,
	0xa749, 0xa749,
	0xa74b, 0xa74b,
	0xa74d, 0xa74d,
	0xa74f, 0xa74f,
	0xa751, 0xa751,
	0xa753, 0xa753,
	0xa755, 0xa755,
	0xa757, 0xa757,
	0xa759, 0xa759,
	0xa75b, 0xa75b,
	0xa75d, 0xa75d,
	0xa75f, 0xa75f,
	0xa761, 0xa761,
	0xa763, 0xa763,
	0xa765, 0xa765,
	0xa767, 0xa767,
	0xa769, 0xa769,
	0xa76b, 0xa76b,
	0xa76d, 0xa76d,
	0xa76f, 0xa778,
	0xa77a, 0xa77a,
	0xa77c, 0xa77c,
	0xa77f, 0xa77f,
	0xa781, 0xa781,
	0xa783, 0xa783,
	0xa785, 0xa785,
	0xa787, 0xa787,
	0xa78c, 0xa78c,
	0xa78e, 0xa78e,
	0xa791, 0xa791,
	0xa7a1, 0xa7a1,
	0xa7a3, 0xa7a3,
	0xa7a5, 0xa7a5,
	0xa7a7, 0xa7a7,
	0xa7a9, 0xa7a9,
	0xa7fa, 0xa7fa,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff41, 0xff5a,
	0x10428, 0x1044f,
	0x1d41a, 0x1d433,
	0x1d44e, 0x1d454,
	0x1d456, 0x1d467,
	0x1d482, 0x1d49b,
	0x1d4b6, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d4cf,
	0x1d4ea, 0x1d503,
	0x1d51e, 0x1d537,
	0x1d552, 0x1d56b,
	0x1d586, 0x1d59f,
	0x1d5ba, 0x1d5d3,
	0x1d5ee, 0x1d607,
	0x1d622, 0x1d63b,
	0x1d656, 0x1d66f,
	0x1d68a, 0x1d6a5,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6e1,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d71b,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d755,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d78f,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7c9,
	0x1d7cb, 0x1d7cb,
}; /* CR_Lower */

/* 'Print': [[:Print:]] */
static const OnigCodePoint CR_Print[] = {
	503,
	0x0020, 0x007e,
	0x00a0, 0x0377,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x0606, 0x061b,
	0x061e, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0800, 0x082d,
	0x0830, 0x083e,
	0x0840, 0x085b,
	0x085e, 0x085e,
	0x0900, 0x0977,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b77,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fda,
	0x1000, 0x10c5,
	0x10d0, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1baa,
	0x1bae, 0x1bb9,
	0x1bc0, 0x1bf3,
	0x1bfc, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cd0, 0x1cf2,
	0x1d00, 0x1de6,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2027,
	0x202a, 0x2064,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x209c,
	0x20a0, 0x20b9,
	0x20d0, 0x20f0,
	0x2100, 0x2189,
	0x2190, 0x23f3,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x26ff,
	0x2701, 0x27ca,
	0x27cc, 0x27cc,
	0x27ce, 0x2b4c,
	0x2b50, 0x2b59,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cf1,
	0x2cf9, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d70,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e31,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31ba,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcb,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa673,
	0xa67c, 0xa697,
	0xa6a0, 0xa6f7,
	0xa700, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa8e0, 0xa8fb,
	0xa900, 0xa953,
	0xa95f, 0xa97c,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9df,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa7b,
	0xaa80, 0xaac2,
	0xaadb, 0xaadf,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xe000, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbc1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe26,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0xfffd,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10190, 0x1019b,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1085f,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a7f,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b7f,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11000, 0x1104d,
	0x11052, 0x1106f,
	0x11080, 0x110c1,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0be,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0df,
	0x1f100, 0x1f10a,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f169,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f320,
	0x1f330, 0x1f335,
	0x1f337, 0x1f37c,
	0x1f380, 0x1f393,
	0x1f3a0, 0x1f3c4,
	0x1f3c6, 0x1f3ca,
	0x1f3e0, 0x1f3f0,
	0x1f400, 0x1f43e,
	0x1f440, 0x1f440,
	0x1f442, 0x1f4f7,
	0x1f4f9, 0x1f4fc,
	0x1f500, 0x1f53d,
	0x1f550, 0x1f567,
	0x1f5fb, 0x1f5ff,
	0x1f601, 0x1f610,
	0x1f612, 0x1f614,
	0x1f616, 0x1f616,
	0x1f618, 0x1f618,
	0x1f61a, 0x1f61a,
	0x1f61c, 0x1f61e,
	0x1f620, 0x1f625,
	0x1f628, 0x1f62b,
	0x1f62d, 0x1f62d,
	0x1f630, 0x1f633,
	0x1f635, 0x1f640,
	0x1f645, 0x1f64f,
	0x1f680, 0x1f6c5,
	0x1f700, 0x1f773,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xf0000, 0xffffd,
	0x100000, 0x10fffd,
}; /* CR_Print */

/* 'Punct': [[:Punct:]] */
static const OnigCodePoint CR_Punct[] = {
	133,
	0x0021, 0x0023,
	0x0025, 0x002a,
	0x002c, 0x002f,
	0x003a, 0x003b,
	0x003f, 0x0040,
	0x005b, 0x005d,
	0x005f, 0x005f,
	0x007b, 0x007b,
	0x007d, 0x007d,
	0x00a1, 0x00a1,
	0x00ab, 0x00ab,
	0x00b7, 0x00b7,
	0x00bb, 0x00bb,
	0x00bf, 0x00bf,
	0x037e, 0x037e,
	0x0387, 0x0387,
	0x055a, 0x055f,
	0x0589, 0x058a,
	0x05be, 0x05be,
	0x05c0, 0x05c0,
	0x05c3, 0x05c3,
	0x05c6, 0x05c6,
	0x05f3, 0x05f4,
	0x0609, 0x060a,
	0x060c, 0x060d,
	0x061b, 0x061b,
	0x061e, 0x061f,
	0x066a, 0x066d,
	0x06d4, 0x06d4,
	0x0700, 0x070d,
	0x07f7, 0x07f9,
	0x0830, 0x083e,
	0x085e, 0x085e,
	0x0964, 0x0965,
	0x0970, 0x0970,
	0x0df4, 0x0df4,
	0x0e4f, 0x0e4f,
	0x0e5a, 0x0e5b,
	0x0f04, 0x0f12,
	0x0f3a, 0x0f3d,
	0x0f85, 0x0f85,
	0x0fd0, 0x0fd4,
	0x0fd9, 0x0fda,
	0x104a, 0x104f,
	0x10fb, 0x10fb,
	0x1361, 0x1368,
	0x1400, 0x1400,
	0x166d, 0x166e,
	0x169b, 0x169c,
	0x16eb, 0x16ed,
	0x1735, 0x1736,
	0x17d4, 0x17d6,
	0x17d8, 0x17da,
	0x1800, 0x180a,
	0x1944, 0x1945,
	0x1a1e, 0x1a1f,
	0x1aa0, 0x1aa6,
	0x1aa8, 0x1aad,
	0x1b5a, 0x1b60,
	0x1bfc, 0x1bff,
	0x1c3b, 0x1c3f,
	0x1c7e, 0x1c7f,
	0x1cd3, 0x1cd3,
	0x2010, 0x2027,
	0x2030, 0x2043,
	0x2045, 0x2051,
	0x2053, 0x205e,
	0x207d, 0x207e,
	0x208d, 0x208e,
	0x2329, 0x232a,
	0x2768, 0x2775,
	0x27c5, 0x27c6,
	0x27e6, 0x27ef,
	0x2983, 0x2998,
	0x29d8, 0x29db,
	0x29fc, 0x29fd,
	0x2cf9, 0x2cfc,
	0x2cfe, 0x2cff,
	0x2d70, 0x2d70,
	0x2e00, 0x2e2e,
	0x2e30, 0x2e31,
	0x3001, 0x3003,
	0x3008, 0x3011,
	0x3014, 0x301f,
	0x3030, 0x3030,
	0x303d, 0x303d,
	0x30a0, 0x30a0,
	0x30fb, 0x30fb,
	0xa4fe, 0xa4ff,
	0xa60d, 0xa60f,
	0xa673, 0xa673,
	0xa67e, 0xa67e,
	0xa6f2, 0xa6f7,
	0xa874, 0xa877,
	0xa8ce, 0xa8cf,
	0xa8f8, 0xa8fa,
	0xa92e, 0xa92f,
	0xa95f, 0xa95f,
	0xa9c1, 0xa9cd,
	0xa9de, 0xa9df,
	0xaa5c, 0xaa5f,
	0xaade, 0xaadf,
	0xabeb, 0xabeb,
	0xfd3e, 0xfd3f,
	0xfe10, 0xfe19,
	0xfe30, 0xfe52,
	0xfe54, 0xfe61,
	0xfe63, 0xfe63,
	0xfe68, 0xfe68,
	0xfe6a, 0xfe6b,
	0xff01, 0xff03,
	0xff05, 0xff0a,
	0xff0c, 0xff0f,
	0xff1a, 0xff1b,
	0xff1f, 0xff20,
	0xff3b, 0xff3d,
	0xff3f, 0xff3f,
	0xff5b, 0xff5b,
	0xff5d, 0xff5d,
	0xff5f, 0xff65,
	0x10100, 0x10101,
	0x1039f, 0x1039f,
	0x103d0, 0x103d0,
	0x10857, 0x10857,
	0x1091f, 0x1091f,
	0x1093f, 0x1093f,
	0x10a50, 0x10a58,
	0x10a7f, 0x10a7f,
	0x10b39, 0x10b3f,
	0x11047, 0x1104d,
	0x110bb, 0x110bc,
	0x110be, 0x110c1,
	0x12470, 0x12473,
}; /* CR_Punct */

/* 'Space': [[:Space:]] */
static const OnigCodePoint CR_Space[] = {
	11,
	0x0009, 0x000d,
	0x0020, 0x0020,
	0x0085, 0x0085,
	0x00a0, 0x00a0,
	0x1680, 0x1680,
	0x180e, 0x180e,
	0x2000, 0x200a,
	0x2028, 0x2029,
	0x202f, 0x202f,
	0x205f, 0x205f,
	0x3000, 0x3000,
}; /* CR_Space */

/* 'Upper': [[:Upper:]] */
static const OnigCodePoint CR_Upper[] = {
	605,
	0x0041, 0x005a,
	0x00c0, 0x00d6,
	0x00d8, 0x00de,
	0x0100, 0x0100,
	0x0102, 0x0102,
	0x0104, 0x0104,
	0x0106, 0x0106,
	0x0108, 0x0108,
	0x010a, 0x010a,
	0x010c, 0x010c,
	0x010e, 0x010e,
	0x0110, 0x0110,
	0x0112, 0x0112,
	0x0114, 0x0114,
	0x0116, 0x0116,
	0x0118, 0x0118,
	0x011a, 0x011a,
	0x011c, 0x011c,
	0x011e, 0x011e,
	0x0120, 0x0120,
	0x0122, 0x0122,
	0x0124, 0x0124,
	0x0126, 0x0126,
	0x0128, 0x0128,
	0x012a, 0x012a,
	0x012c, 0x012c,
	0x012e, 0x012e,
	0x0130, 0x0130,
	0x0132, 0x0132,
	0x0134, 0x0134,
	0x0136, 0x0136,
	0x0139, 0x0139,
	0x013b, 0x013b,
	0x013d, 0x013d,
	0x013f, 0x013f,
	0x0141, 0x0141,
	0x0143, 0x0143,
	0x0145, 0x0145,
	0x0147, 0x0147,
	0x014a, 0x014a,
	0x014c, 0x014c,
	0x014e, 0x014e,
	0x0150, 0x0150,
	0x0152, 0x0152,
	0x0154, 0x0154,
	0x0156, 0x0156,
	0x0158, 0x0158,
	0x015a, 0x015a,
	0x015c, 0x015c,
	0x015e, 0x015e,
	0x0160, 0x0160,
	0x0162, 0x0162,
	0x0164, 0x0164,
	0x0166, 0x0166,
	0x0168, 0x0168,
	0x016a, 0x016a,
	0x016c, 0x016c,
	0x016e, 0x016e,
	0x0170, 0x0170,
	0x0172, 0x0172,
	0x0174, 0x0174,
	0x0176, 0x0176,
	0x0178, 0x0179,
	0x017b, 0x017b,
	0x017d, 0x017d,
	0x0181, 0x0182,
	0x0184, 0x0184,
	0x0186, 0x0187,
	0x0189, 0x018b,
	0x018e, 0x0191,
	0x0193, 0x0194,
	0x0196, 0x0198,
	0x019c, 0x019d,
	0x019f, 0x01a0,
	0x01a2, 0x01a2,
	0x01a4, 0x01a4,
	0x01a6, 0x01a7,
	0x01a9, 0x01a9,
	0x01ac, 0x01ac,
	0x01ae, 0x01af,
	0x01b1, 0x01b3,
	0x01b5, 0x01b5,
	0x01b7, 0x01b8,
	0x01bc, 0x01bc,
	0x01c4, 0x01c4,
	0x01c7, 0x01c7,
	0x01ca, 0x01ca,
	0x01cd, 0x01cd,
	0x01cf, 0x01cf,
	0x01d1, 0x01d1,
	0x01d3, 0x01d3,
	0x01d5, 0x01d5,
	0x01d7, 0x01d7,
	0x01d9, 0x01d9,
	0x01db, 0x01db,
	0x01de, 0x01de,
	0x01e0, 0x01e0,
	0x01e2, 0x01e2,
	0x01e4, 0x01e4,
	0x01e6, 0x01e6,
	0x01e8, 0x01e8,
	0x01ea, 0x01ea,
	0x01ec, 0x01ec,
	0x01ee, 0x01ee,
	0x01f1, 0x01f1,
	0x01f4, 0x01f4,
	0x01f6, 0x01f8,
	0x01fa, 0x01fa,
	0x01fc, 0x01fc,
	0x01fe, 0x01fe,
	0x0200, 0x0200,
	0x0202, 0x0202,
	0x0204, 0x0204,
	0x0206, 0x0206,
	0x0208, 0x0208,
	0x020a, 0x020a,
	0x020c, 0x020c,
	0x020e, 0x020e,
	0x0210, 0x0210,
	0x0212, 0x0212,
	0x0214, 0x0214,
	0x0216, 0x0216,
	0x0218, 0x0218,
	0x021a, 0x021a,
	0x021c, 0x021c,
	0x021e, 0x021e,
	0x0220, 0x0220,
	0x0222, 0x0222,
	0x0224, 0x0224,
	0x0226, 0x0226,
	0x0228, 0x0228,
	0x022a, 0x022a,
	0x022c, 0x022c,
	0x022e, 0x022e,
	0x0230, 0x0230,
	0x0232, 0x0232,
	0x023a, 0x023b,
	0x023d, 0x023e,
	0x0241, 0x0241,
	0x0243, 0x0246,
	0x0248, 0x0248,
	0x024a, 0x024a,
	0x024c, 0x024c,
	0x024e, 0x024e,
	0x0370, 0x0370,
	0x0372, 0x0372,
	0x0376, 0x0376,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x038f,
	0x0391, 0x03a1,
	0x03a3, 0x03ab,
	0x03cf, 0x03cf,
	0x03d2, 0x03d4,
	0x03d8, 0x03d8,
	0x03da, 0x03da,
	0x03dc, 0x03dc,
	0x03de, 0x03de,
	0x03e0, 0x03e0,
	0x03e2, 0x03e2,
	0x03e4, 0x03e4,
	0x03e6, 0x03e6,
	0x03e8, 0x03e8,
	0x03ea, 0x03ea,
	0x03ec, 0x03ec,
	0x03ee, 0x03ee,
	0x03f4, 0x03f4,
	0x03f7, 0x03f7,
	0x03f9, 0x03fa,
	0x03fd, 0x042f,
	0x0460, 0x0460,
	0x0462, 0x0462,
	0x0464, 0x0464,
	0x0466, 0x0466,
	0x0468, 0x0468,
	0x046a, 0x046a,
	0x046c, 0x046c,
	0x046e, 0x046e,
	0x0470, 0x0470,
	0x0472, 0x0472,
	0x0474, 0x0474,
	0x0476, 0x0476,
	0x0478, 0x0478,
	0x047a, 0x047a,
	0x047c, 0x047c,
	0x047e, 0x047e,
	0x0480, 0x0480,
	0x048a, 0x048a,
	0x048c, 0x048c,
	0x048e, 0x048e,
	0x0490, 0x0490,
	0x0492, 0x0492,
	0x0494, 0x0494,
	0x0496, 0x0496,
	0x0498, 0x0498,
	0x049a, 0x049a,
	0x049c, 0x049c,
	0x049e, 0x049e,
	0x04a0, 0x04a0,
	0x04a2, 0x04a2,
	0x04a4, 0x04a4,
	0x04a6, 0x04a6,
	0x04a8, 0x04a8,
	0x04aa, 0x04aa,
	0x04ac, 0x04ac,
	0x04ae, 0x04ae,
	0x04b0, 0x04b0,
	0x04b2, 0x04b2,
	0x04b4, 0x04b4,
	0x04b6, 0x04b6,
	0x04b8, 0x04b8,
	0x04ba, 0x04ba,
	0x04bc, 0x04bc,
	0x04be, 0x04be,
	0x04c0, 0x04c1,
	0x04c3, 0x04c3,
	0x04c5, 0x04c5,
	0x04c7, 0x04c7,
	0x04c9, 0x04c9,
	0x04cb, 0x04cb,
	0x04cd, 0x04cd,
	0x04d0, 0x04d0,
	0x04d2, 0x04d2,
	0x04d4, 0x04d4,
	0x04d6, 0x04d6,
	0x04d8, 0x04d8,
	0x04da, 0x04da,
	0x04dc, 0x04dc,
	0x04de, 0x04de,
	0x04e0, 0x04e0,
	0x04e2, 0x04e2,
	0x04e4, 0x04e4,
	0x04e6, 0x04e6,
	0x04e8, 0x04e8,
	0x04ea, 0x04ea,
	0x04ec, 0x04ec,
	0x04ee, 0x04ee,
	0x04f0, 0x04f0,
	0x04f2, 0x04f2,
	0x04f4, 0x04f4,
	0x04f6, 0x04f6,
	0x04f8, 0x04f8,
	0x04fa, 0x04fa,
	0x04fc, 0x04fc,
	0x04fe, 0x04fe,
	0x0500, 0x0500,
	0x0502, 0x0502,
	0x0504, 0x0504,
	0x0506, 0x0506,
	0x0508, 0x0508,
	0x050a, 0x050a,
	0x050c, 0x050c,
	0x050e, 0x050e,
	0x0510, 0x0510,
	0x0512, 0x0512,
	0x0514, 0x0514,
	0x0516, 0x0516,
	0x0518, 0x0518,
	0x051a, 0x051a,
	0x051c, 0x051c,
	0x051e, 0x051e,
	0x0520, 0x0520,
	0x0522, 0x0522,
	0x0524, 0x0524,
	0x0526, 0x0526,
	0x0531, 0x0556,
	0x10a0, 0x10c5,
	0x1e00, 0x1e00,
	0x1e02, 0x1e02,
	0x1e04, 0x1e04,
	0x1e06, 0x1e06,
	0x1e08, 0x1e08,
	0x1e0a, 0x1e0a,
	0x1e0c, 0x1e0c,
	0x1e0e, 0x1e0e,
	0x1e10, 0x1e10,
	0x1e12, 0x1e12,
	0x1e14, 0x1e14,
	0x1e16, 0x1e16,
	0x1e18, 0x1e18,
	0x1e1a, 0x1e1a,
	0x1e1c, 0x1e1c,
	0x1e1e, 0x1e1e,
	0x1e20, 0x1e20,
	0x1e22, 0x1e22,
	0x1e24, 0x1e24,
	0x1e26, 0x1e26,
	0x1e28, 0x1e28,
	0x1e2a, 0x1e2a,
	0x1e2c, 0x1e2c,
	0x1e2e, 0x1e2e,
	0x1e30, 0x1e30,
	0x1e32, 0x1e32,
	0x1e34, 0x1e34,
	0x1e36, 0x1e36,
	0x1e38, 0x1e38,
	0x1e3a, 0x1e3a,
	0x1e3c, 0x1e3c,
	0x1e3e, 0x1e3e,
	0x1e40, 0x1e40,
	0x1e42, 0x1e42,
	0x1e44, 0x1e44,
	0x1e46, 0x1e46,
	0x1e48, 0x1e48,
	0x1e4a, 0x1e4a,
	0x1e4c, 0x1e4c,
	0x1e4e, 0x1e4e,
	0x1e50, 0x1e50,
	0x1e52, 0x1e52,
	0x1e54, 0x1e54,
	0x1e56, 0x1e56,
	0x1e58, 0x1e58,
	0x1e5a, 0x1e5a,
	0x1e5c, 0x1e5c,
	0x1e5e, 0x1e5e,
	0x1e60, 0x1e60,
	0x1e62, 0x1e62,
	0x1e64, 0x1e64,
	0x1e66, 0x1e66,
	0x1e68, 0x1e68,
	0x1e6a, 0x1e6a,
	0x1e6c, 0x1e6c,
	0x1e6e, 0x1e6e,
	0x1e70, 0x1e70,
	0x1e72, 0x1e72,
	0x1e74, 0x1e74,
	0x1e76, 0x1e76,
	0x1e78, 0x1e78,
	0x1e7a, 0x1e7a,
	0x1e7c, 0x1e7c,
	0x1e7e, 0x1e7e,
	0x1e80, 0x1e80,
	0x1e82, 0x1e82,
	0x1e84, 0x1e84,
	0x1e86, 0x1e86,
	0x1e88, 0x1e88,
	0x1e8a, 0x1e8a,
	0x1e8c, 0x1e8c,
	0x1e8e, 0x1e8e,
	0x1e90, 0x1e90,
	0x1e92, 0x1e92,
	0x1e94, 0x1e94,
	0x1e9e, 0x1e9e,
	0x1ea0, 0x1ea0,
	0x1ea2, 0x1ea2,
	0x1ea4, 0x1ea4,
	0x1ea6, 0x1ea6,
	0x1ea8, 0x1ea8,
	0x1eaa, 0x1eaa,
	0x1eac, 0x1eac,
	0x1eae, 0x1eae,
	0x1eb0, 0x1eb0,
	0x1eb2, 0x1eb2,
	0x1eb4, 0x1eb4,
	0x1eb6, 0x1eb6,
	0x1eb8, 0x1eb8,
	0x1eba, 0x1eba,
	0x1ebc, 0x1ebc,
	0x1ebe, 0x1ebe,
	0x1ec0, 0x1ec0,
	0x1ec2, 0x1ec2,
	0x1ec4, 0x1ec4,
	0x1ec6, 0x1ec6,
	0x1ec8, 0x1ec8,
	0x1eca, 0x1eca,
	0x1ecc, 0x1ecc,
	0x1ece, 0x1ece,
	0x1ed0, 0x1ed0,
	0x1ed2, 0x1ed2,
	0x1ed4, 0x1ed4,
	0x1ed6, 0x1ed6,
	0x1ed8, 0x1ed8,
	0x1eda, 0x1eda,
	0x1edc, 0x1edc,
	0x1ede, 0x1ede,
	0x1ee0, 0x1ee0,
	0x1ee2, 0x1ee2,
	0x1ee4, 0x1ee4,
	0x1ee6, 0x1ee6,
	0x1ee8, 0x1ee8,
	0x1eea, 0x1eea,
	0x1eec, 0x1eec,
	0x1eee, 0x1eee,
	0x1ef0, 0x1ef0,
	0x1ef2, 0x1ef2,
	0x1ef4, 0x1ef4,
	0x1ef6, 0x1ef6,
	0x1ef8, 0x1ef8,
	0x1efa, 0x1efa,
	0x1efc, 0x1efc,
	0x1efe, 0x1efe,
	0x1f08, 0x1f0f,
	0x1f18, 0x1f1d,
	0x1f28, 0x1f2f,
	0x1f38, 0x1f3f,
	0x1f48, 0x1f4d,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f5f,
	0x1f68, 0x1f6f,
	0x1fb8, 0x1fbb,
	0x1fc8, 0x1fcb,
	0x1fd8, 0x1fdb,
	0x1fe8, 0x1fec,
	0x1ff8, 0x1ffb,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210b, 0x210d,
	0x2110, 0x2112,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x2130, 0x2133,
	0x213e, 0x213f,
	0x2145, 0x2145,
	0x2160, 0x216f,
	0x2183, 0x2183,
	0x24b6, 0x24cf,
	0x2c00, 0x2c2e,
	0x2c60, 0x2c60,
	0x2c62, 0x2c64,
	0x2c67, 0x2c67,
	0x2c69, 0x2c69,
	0x2c6b, 0x2c6b,
	0x2c6d, 0x2c70,
	0x2c72, 0x2c72,
	0x2c75, 0x2c75,
	0x2c7e, 0x2c80,
	0x2c82, 0x2c82,
	0x2c84, 0x2c84,
	0x2c86, 0x2c86,
	0x2c88, 0x2c88,
	0x2c8a, 0x2c8a,
	0x2c8c, 0x2c8c,
	0x2c8e, 0x2c8e,
	0x2c90, 0x2c90,
	0x2c92, 0x2c92,
	0x2c94, 0x2c94,
	0x2c96, 0x2c96,
	0x2c98, 0x2c98,
	0x2c9a, 0x2c9a,
	0x2c9c, 0x2c9c,
	0x2c9e, 0x2c9e,
	0x2ca0, 0x2ca0,
	0x2ca2, 0x2ca2,
	0x2ca4, 0x2ca4,
	0x2ca6, 0x2ca6,
	0x2ca8, 0x2ca8,
	0x2caa, 0x2caa,
	0x2cac, 0x2cac,
	0x2cae, 0x2cae,
	0x2cb0, 0x2cb0,
	0x2cb2, 0x2cb2,
	0x2cb4, 0x2cb4,
	0x2cb6, 0x2cb6,
	0x2cb8, 0x2cb8,
	0x2cba, 0x2cba,
	0x2cbc, 0x2cbc,
	0x2cbe, 0x2cbe,
	0x2cc0, 0x2cc0,
	0x2cc2, 0x2cc2,
	0x2cc4, 0x2cc4,
	0x2cc6, 0x2cc6,
	0x2cc8, 0x2cc8,
	0x2cca, 0x2cca,
	0x2ccc, 0x2ccc,
	0x2cce, 0x2cce,
	0x2cd0, 0x2cd0,
	0x2cd2, 0x2cd2,
	0x2cd4, 0x2cd4,
	0x2cd6, 0x2cd6,
	0x2cd8, 0x2cd8,
	0x2cda, 0x2cda,
	0x2cdc, 0x2cdc,
	0x2cde, 0x2cde,
	0x2ce0, 0x2ce0,
	0x2ce2, 0x2ce2,
	0x2ceb, 0x2ceb,
	0x2ced, 0x2ced,
	0xa640, 0xa640,
	0xa642, 0xa642,
	0xa644, 0xa644,
	0xa646, 0xa646,
	0xa648, 0xa648,
	0xa64a, 0xa64a,
	0xa64c, 0xa64c,
	0xa64e, 0xa64e,
	0xa650, 0xa650,
	0xa652, 0xa652,
	0xa654, 0xa654,
	0xa656, 0xa656,
	0xa658, 0xa658,
	0xa65a, 0xa65a,
	0xa65c, 0xa65c,
	0xa65e, 0xa65e,
	0xa660, 0xa660,
	0xa662, 0xa662,
	0xa664, 0xa664,
	0xa666, 0xa666,
	0xa668, 0xa668,
	0xa66a, 0xa66a,
	0xa66c, 0xa66c,
	0xa680, 0xa680,
	0xa682, 0xa682,
	0xa684, 0xa684,
	0xa686, 0xa686,
	0xa688, 0xa688,
	0xa68a, 0xa68a,
	0xa68c, 0xa68c,
	0xa68e, 0xa68e,
	0xa690, 0xa690,
	0xa692, 0xa692,
	0xa694, 0xa694,
	0xa696, 0xa696,
	0xa722, 0xa722,
	0xa724, 0xa724,
	0xa726, 0xa726,
	0xa728, 0xa728,
	0xa72a, 0xa72a,
	0xa72c, 0xa72c,
	0xa72e, 0xa72e,
	0xa732, 0xa732,
	0xa734, 0xa734,
	0xa736, 0xa736,
	0xa738, 0xa738,
	0xa73a, 0xa73a,
	0xa73c, 0xa73c,
	0xa73e, 0xa73e,
	0xa740, 0xa740,
	0xa742, 0xa742,
	0xa744, 0xa744,
	0xa746, 0xa746,
	0xa748, 0xa748,
	0xa74a, 0xa74a,
	0xa74c, 0xa74c,
	0xa74e, 0xa74e,
	0xa750, 0xa750,
	0xa752, 0xa752,
	0xa754, 0xa754,
	0xa756, 0xa756,
	0xa758, 0xa758,
	0xa75a, 0xa75a,
	0xa75c, 0xa75c,
	0xa75e, 0xa75e,
	0xa760, 0xa760,
	0xa762, 0xa762,
	0xa764, 0xa764,
	0xa766, 0xa766,
	0xa768, 0xa768,
	0xa76a, 0xa76a,
	0xa76c, 0xa76c,
	0xa76e, 0xa76e,
	0xa779, 0xa779,
	0xa77b, 0xa77b,
	0xa77d, 0xa77e,
	0xa780, 0xa780,
	0xa782, 0xa782,
	0xa784, 0xa784,
	0xa786, 0xa786,
	0xa78b, 0xa78b,
	0xa78d, 0xa78d,
	0xa790, 0xa790,
	0xa7a0, 0xa7a0,
	0xa7a2, 0xa7a2,
	0xa7a4, 0xa7a4,
	0xa7a6, 0xa7a6,
	0xa7a8, 0xa7a8,
	0xff21, 0xff3a,
	0x10400, 0x10427,
	0x1d400, 0x1d419,
	0x1d434, 0x1d44d,
	0x1d468, 0x1d481,
	0x1d49c, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b5,
	0x1d4d0, 0x1d4e9,
	0x1d504, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d538, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d56c, 0x1d585,
	0x1d5a0, 0x1d5b9,
	0x1d5d4, 0x1d5ed,
	0x1d608, 0x1d621,
	0x1d63c, 0x1d655,
	0x1d670, 0x1d689,
	0x1d6a8, 0x1d6c0,
	0x1d6e2, 0x1d6fa,
	0x1d71c, 0x1d734,
	0x1d756, 0x1d76e,
	0x1d790, 0x1d7a8,
	0x1d7ca, 0x1d7ca,
}; /* CR_Upper */

/* 'XDigit': [[:XDigit:]] */
static const OnigCodePoint CR_XDigit[] = {
	3,
	0x0030, 0x0039,
	0x0041, 0x0046,
	0x0061, 0x0066,
}; /* CR_XDigit */

/* 'Word': [[:Word:]] */
static const OnigCodePoint CR_Word[] = {
	514,
	0x0030, 0x0039,
	0x0041, 0x005a,
	0x005f, 0x005f,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0300, 0x0374,
	0x0376, 0x0377,
	0x037a, 0x037d,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x0483, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x0591, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0610, 0x061a,
	0x0620, 0x0669,
	0x066e, 0x06d3,
	0x06d5, 0x06dc,
	0x06df, 0x06e8,
	0x06ea, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x082d,
	0x0840, 0x085b,
	0x0900, 0x0963,
	0x0966, 0x096f,
	0x0971, 0x0977,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09f1,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b6f,
	0x0b71, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bef,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d6f,
	0x0d7a, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df3,
	0x0e01, 0x0e3a,
	0x0e40, 0x0e4e,
	0x0e50, 0x0e59,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f00,
	0x0f18, 0x0f19,
	0x0f20, 0x0f29,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f3e, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f84,
	0x0f86, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fc6, 0x0fc6,
	0x1000, 0x1049,
	0x1050, 0x109d,
	0x10a0, 0x10c5,
	0x10d0, 0x10fa,
	0x10fc, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x135f,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16ee, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1734,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17b3,
	0x17b6, 0x17d3,
	0x17d7, 0x17d7,
	0x17dc, 0x17dd,
	0x17e0, 0x17e9,
	0x180b, 0x180d,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1946, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19d9,
	0x1a00, 0x1a1b,
	0x1a20, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa7, 0x1aa7,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b59,
	0x1b6b, 0x1b73,
	0x1b80, 0x1baa,
	0x1bae, 0x1bb9,
	0x1bc0, 0x1bf3,
	0x1c00, 0x1c37,
	0x1c40, 0x1c49,
	0x1c4d, 0x1c7d,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1cf2,
	0x1d00, 0x1de6,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x203f, 0x2040,
	0x2054, 0x2054,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x20d0, 0x20f0,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x212f, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x24b6, 0x24e9,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cf1,
	0x2d00, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2dff,
	0x2e2f, 0x2e2f,
	0x3005, 0x3007,
	0x3021, 0x302f,
	0x3031, 0x3035,
	0x3038, 0x303c,
	0x3041, 0x3096,
	0x3099, 0x309a,
	0x309d, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcb,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa62b,
	0xa640, 0xa672,
	0xa67c, 0xa67d,
	0xa67f, 0xa697,
	0xa6a0, 0xa6f1,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa827,
	0xa840, 0xa873,
	0xa880, 0xa8c4,
	0xa8d0, 0xa8d9,
	0xa8e0, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa900, 0xa92d,
	0xa930, 0xa953,
	0xa960, 0xa97c,
	0xa980, 0xa9c0,
	0xa9cf, 0xa9d9,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa60, 0xaa76,
	0xaa7a, 0xaa7b,
	0xaa80, 0xaac2,
	0xaadb, 0xaadd,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabea,
	0xabec, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe26,
	0xfe33, 0xfe34,
	0xfe4d, 0xfe4f,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff10, 0xff19,
	0xff21, 0xff3a,
	0xff3f, 0xff3f,
	0xff41, 0xff5a,
	0xff66, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10140, 0x10174,
	0x101fd, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x103d1, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a3f,
	0x10a60, 0x10a7c,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10c00, 0x10c48,
	0x11000, 0x11046,
	0x11066, 0x1106f,
	0x11080, 0x110ba,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x1d165, 0x1d169,
	0x1d16d, 0x1d172,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1d242, 0x1d244,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0xe0100, 0xe01ef,
}; /* CR_Word */

/* 'Alnum': [[:Alnum:]] */
static const OnigCodePoint CR_Alnum[] = {
	509,
	0x0030, 0x0039,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0345, 0x0345,
	0x0370, 0x0374,
	0x0376, 0x0377,
	0x037a, 0x037d,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x048a, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x05b0, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0610, 0x061a,
	0x0620, 0x0657,
	0x0659, 0x0669,
	0x066e, 0x06d3,
	0x06d5, 0x06dc,
	0x06e1, 0x06e8,
	0x06ed, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x073f,
	0x074d, 0x07b1,
	0x07c0, 0x07ea,
	0x07f4, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x0817,
	0x081a, 0x082c,
	0x0840, 0x0858,
	0x0900, 0x093b,
	0x093d, 0x094c,
	0x094e, 0x0950,
	0x0955, 0x0963,
	0x0966, 0x096f,
	0x0971, 0x0977,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bd, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cc,
	0x09ce, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09f1,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4c,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abd, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acc,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3d, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4c,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b6f,
	0x0b71, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcc,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bef,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4c,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbd, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccc,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4c,
	0x0d4e, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d6f,
	0x0d7a, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df3,
	0x0e01, 0x0e3a,
	0x0e40, 0x0e46,
	0x0e4d, 0x0e4d,
	0x0e50, 0x0e59,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ecd, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f00,
	0x0f20, 0x0f29,
	0x0f40, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f81,
	0x0f88, 0x0f97,
	0x0f99, 0x0fbc,
	0x1000, 0x1036,
	0x1038, 0x1038,
	0x103b, 0x1049,
	0x1050, 0x1062,
	0x1065, 0x1068,
	0x106e, 0x1086,
	0x108e, 0x108e,
	0x1090, 0x1099,
	0x109c, 0x109d,
	0x10a0, 0x10c5,
	0x10d0, 0x10fa,
	0x10fc, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135f, 0x135f,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16ee, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1713,
	0x1720, 0x1733,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17b3,
	0x17b6, 0x17c8,
	0x17d7, 0x17d7,
	0x17dc, 0x17dc,
	0x17e0, 0x17e9,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x1938,
	0x1946, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19d9,
	0x1a00, 0x1a1b,
	0x1a20, 0x1a5e,
	0x1a61, 0x1a74,
	0x1a80, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa7, 0x1aa7,
	0x1b00, 0x1b33,
	0x1b35, 0x1b43,
	0x1b45, 0x1b4b,
	0x1b50, 0x1b59,
	0x1b80, 0x1ba9,
	0x1bae, 0x1bb9,
	0x1bc0, 0x1be5,
	0x1be7, 0x1bf1,
	0x1c00, 0x1c35,
	0x1c40, 0x1c49,
	0x1c4d, 0x1c7d,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf2,
	0x1d00, 0x1dbf,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x212f, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x24b6, 0x24e9,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cee,
	0x2d00, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2dff,
	0x2e2f, 0x2e2f,
	0x3005, 0x3007,
	0x3021, 0x3029,
	0x3031, 0x3035,
	0x3038, 0x303c,
	0x3041, 0x3096,
	0x309d, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcb,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa62b,
	0xa640, 0xa66e,
	0xa67f, 0xa697,
	0xa6a0, 0xa6ef,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa801,
	0xa803, 0xa805,
	0xa807, 0xa80a,
	0xa80c, 0xa827,
	0xa840, 0xa873,
	0xa880, 0xa8c3,
	0xa8d0, 0xa8d9,
	0xa8f2, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa900, 0xa92a,
	0xa930, 0xa952,
	0xa960, 0xa97c,
	0xa980, 0xa9b2,
	0xa9b4, 0xa9bf,
	0xa9cf, 0xa9d9,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa60, 0xaa76,
	0xaa7a, 0xaa7a,
	0xaa80, 0xaabe,
	0xaac0, 0xaac0,
	0xaac2, 0xaac2,
	0xaadb, 0xaadd,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabea,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff10, 0xff19,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0xff66, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10140, 0x10174,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x103d1, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a60, 0x10a7c,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10c00, 0x10c48,
	0x11000, 0x11045,
	0x11066, 0x1106f,
	0x11082, 0x110b8,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_Alnum */

/* 'ASCII': [[:ASCII:]] */
static const OnigCodePoint CR_ASCII[] = {
	1,
	0x0000, 0x007f,
}; /* CR_ASCII */

#ifdef USE_UNICODE_PROPERTIES
/* 'Any': - */
static const OnigCodePoint CR_Any[] = {
	1,
	0x0000, 0x10ffff,
}; /* CR_Any */

/* 'Assigned': - */
static const OnigCodePoint CR_Assigned[] = {
	501,
	0x0000, 0x0377,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x0606, 0x061b,
	0x061e, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0800, 0x082d,
	0x0830, 0x083e,
	0x0840, 0x085b,
	0x085e, 0x085e,
	0x0900, 0x0977,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b77,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fda,
	0x1000, 0x10c5,
	0x10d0, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1baa,
	0x1bae, 0x1bb9,
	0x1bc0, 0x1bf3,
	0x1bfc, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cd0, 0x1cf2,
	0x1d00, 0x1de6,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2064,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x209c,
	0x20a0, 0x20b9,
	0x20d0, 0x20f0,
	0x2100, 0x2189,
	0x2190, 0x23f3,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x26ff,
	0x2701, 0x27ca,
	0x27cc, 0x27cc,
	0x27ce, 0x2b4c,
	0x2b50, 0x2b59,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cf1,
	0x2cf9, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d70,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e31,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31ba,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcb,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa673,
	0xa67c, 0xa697,
	0xa6a0, 0xa6f7,
	0xa700, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa8e0, 0xa8fb,
	0xa900, 0xa953,
	0xa95f, 0xa97c,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9df,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa7b,
	0xaa80, 0xaac2,
	0xaadb, 0xaadf,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbc1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe26,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0xfffd,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10190, 0x1019b,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1085f,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a7f,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b7f,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11000, 0x1104d,
	0x11052, 0x1106f,
	0x11080, 0x110c1,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0be,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0df,
	0x1f100, 0x1f10a,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f169,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f320,
	0x1f330, 0x1f335,
	0x1f337, 0x1f37c,
	0x1f380, 0x1f393,
	0x1f3a0, 0x1f3c4,
	0x1f3c6, 0x1f3ca,
	0x1f3e0, 0x1f3f0,
	0x1f400, 0x1f43e,
	0x1f440, 0x1f440,
	0x1f442, 0x1f4f7,
	0x1f4f9, 0x1f4fc,
	0x1f500, 0x1f53d,
	0x1f550, 0x1f567,
	0x1f5fb, 0x1f5ff,
	0x1f601, 0x1f610,
	0x1f612, 0x1f614,
	0x1f616, 0x1f616,
	0x1f618, 0x1f618,
	0x1f61a, 0x1f61a,
	0x1f61c, 0x1f61e,
	0x1f620, 0x1f625,
	0x1f628, 0x1f62b,
	0x1f62d, 0x1f62d,
	0x1f630, 0x1f633,
	0x1f635, 0x1f640,
	0x1f645, 0x1f64f,
	0x1f680, 0x1f6c5,
	0x1f700, 0x1f773,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xf0000, 0xffffd,
	0x100000, 0x10fffd,
}; /* CR_Assigned */

/* 'C': Major Category */
static const OnigCodePoint CR_C[] = {
	504,
	0x0000, 0x001f,
	0x007f, 0x009f,
	0x00ad, 0x00ad,
	0x0378, 0x0379,
	0x037f, 0x0383,
	0x038b, 0x038b,
	0x038d, 0x038d,
	0x03a2, 0x03a2,
	0x0528, 0x0530,
	0x0557, 0x0558,
	0x0560, 0x0560,
	0x0588, 0x0588,
	0x058b, 0x0590,
	0x05c8, 0x05cf,
	0x05eb, 0x05ef,
	0x05f5, 0x0605,
	0x061c, 0x061d,
	0x06dd, 0x06dd,
	0x070e, 0x070f,
	0x074b, 0x074c,
	0x07b2, 0x07bf,
	0x07fb, 0x07ff,
	0x082e, 0x082f,
	0x083f, 0x083f,
	0x085c, 0x085d,
	0x085f, 0x08ff,
	0x0978, 0x0978,
	0x0980, 0x0980,
	0x0984, 0x0984,
	0x098d, 0x098e,
	0x0991, 0x0992,
	0x09a9, 0x09a9,
	0x09b1, 0x09b1,
	0x09b3, 0x09b5,
	0x09ba, 0x09bb,
	0x09c5, 0x09c6,
	0x09c9, 0x09ca,
	0x09cf, 0x09d6,
	0x09d8, 0x09db,
	0x09de, 0x09de,
	0x09e4, 0x09e5,
	0x09fc, 0x0a00,
	0x0a04, 0x0a04,
	0x0a0b, 0x0a0e,
	0x0a11, 0x0a12,
	0x0a29, 0x0a29,
	0x0a31, 0x0a31,
	0x0a34, 0x0a34,
	0x0a37, 0x0a37,
	0x0a3a, 0x0a3b,
	0x0a3d, 0x0a3d,
	0x0a43, 0x0a46,
	0x0a49, 0x0a4a,
	0x0a4e, 0x0a50,
	0x0a52, 0x0a58,
	0x0a5d, 0x0a5d,
	0x0a5f, 0x0a65,
	0x0a76, 0x0a80,
	0x0a84, 0x0a84,
	0x0a8e, 0x0a8e,
	0x0a92, 0x0a92,
	0x0aa9, 0x0aa9,
	0x0ab1, 0x0ab1,
	0x0ab4, 0x0ab4,
	0x0aba, 0x0abb,
	0x0ac6, 0x0ac6,
	0x0aca, 0x0aca,
	0x0ace, 0x0acf,
	0x0ad1, 0x0adf,
	0x0ae4, 0x0ae5,
	0x0af0, 0x0af0,
	0x0af2, 0x0b00,
	0x0b04, 0x0b04,
	0x0b0d, 0x0b0e,
	0x0b11, 0x0b12,
	0x0b29, 0x0b29,
	0x0b31, 0x0b31,
	0x0b34, 0x0b34,
	0x0b3a, 0x0b3b,
	0x0b45, 0x0b46,
	0x0b49, 0x0b4a,
	0x0b4e, 0x0b55,
	0x0b58, 0x0b5b,
	0x0b5e, 0x0b5e,
	0x0b64, 0x0b65,
	0x0b78, 0x0b81,
	0x0b84, 0x0b84,
	0x0b8b, 0x0b8d,
	0x0b91, 0x0b91,
	0x0b96, 0x0b98,
	0x0b9b, 0x0b9b,
	0x0b9d, 0x0b9d,
	0x0ba0, 0x0ba2,
	0x0ba5, 0x0ba7,
	0x0bab, 0x0bad,
	0x0bba, 0x0bbd,
	0x0bc3, 0x0bc5,
	0x0bc9, 0x0bc9,
	0x0bce, 0x0bcf,
	0x0bd1, 0x0bd6,
	0x0bd8, 0x0be5,
	0x0bfb, 0x0c00,
	0x0c04, 0x0c04,
	0x0c0d, 0x0c0d,
	0x0c11, 0x0c11,
	0x0c29, 0x0c29,
	0x0c34, 0x0c34,
	0x0c3a, 0x0c3c,
	0x0c45, 0x0c45,
	0x0c49, 0x0c49,
	0x0c4e, 0x0c54,
	0x0c57, 0x0c57,
	0x0c5a, 0x0c5f,
	0x0c64, 0x0c65,
	0x0c70, 0x0c77,
	0x0c80, 0x0c81,
	0x0c84, 0x0c84,
	0x0c8d, 0x0c8d,
	0x0c91, 0x0c91,
	0x0ca9, 0x0ca9,
	0x0cb4, 0x0cb4,
	0x0cba, 0x0cbb,
	0x0cc5, 0x0cc5,
	0x0cc9, 0x0cc9,
	0x0cce, 0x0cd4,
	0x0cd7, 0x0cdd,
	0x0cdf, 0x0cdf,
	0x0ce4, 0x0ce5,
	0x0cf0, 0x0cf0,
	0x0cf3, 0x0d01,
	0x0d04, 0x0d04,
	0x0d0d, 0x0d0d,
	0x0d11, 0x0d11,
	0x0d3b, 0x0d3c,
	0x0d45, 0x0d45,
	0x0d49, 0x0d49,
	0x0d4f, 0x0d56,
	0x0d58, 0x0d5f,
	0x0d64, 0x0d65,
	0x0d76, 0x0d78,
	0x0d80, 0x0d81,
	0x0d84, 0x0d84,
	0x0d97, 0x0d99,
	0x0db2, 0x0db2,
	0x0dbc, 0x0dbc,
	0x0dbe, 0x0dbf,
	0x0dc7, 0x0dc9,
	0x0dcb, 0x0dce,
	0x0dd5, 0x0dd5,
	0x0dd7, 0x0dd7,
	0x0de0, 0x0df1,
	0x0df5, 0x0e00,
	0x0e3b, 0x0e3e,
	0x0e5c, 0x0e80,
	0x0e83, 0x0e83,
	0x0e85, 0x0e86,
	0x0e89, 0x0e89,
	0x0e8b, 0x0e8c,
	0x0e8e, 0x0e93,
	0x0e98, 0x0e98,
	0x0ea0, 0x0ea0,
	0x0ea4, 0x0ea4,
	0x0ea6, 0x0ea6,
	0x0ea8, 0x0ea9,
	0x0eac, 0x0eac,
	0x0eba, 0x0eba,
	0x0ebe, 0x0ebf,
	0x0ec5, 0x0ec5,
	0x0ec7, 0x0ec7,
	0x0ece, 0x0ecf,
	0x0eda, 0x0edb,
	0x0ede, 0x0eff,
	0x0f48, 0x0f48,
	0x0f6d, 0x0f70,
	0x0f98, 0x0f98,
	0x0fbd, 0x0fbd,
	0x0fcd, 0x0fcd,
	0x0fdb, 0x0fff,
	0x10c6, 0x10cf,
	0x10fd, 0x10ff,
	0x1249, 0x1249,
	0x124e, 0x124f,
	0x1257, 0x1257,
	0x1259, 0x1259,
	0x125e, 0x125f,
	0x1289, 0x1289,
	0x128e, 0x128f,
	0x12b1, 0x12b1,
	0x12b6, 0x12b7,
	0x12bf, 0x12bf,
	0x12c1, 0x12c1,
	0x12c6, 0x12c7,
	0x12d7, 0x12d7,
	0x1311, 0x1311,
	0x1316, 0x1317,
	0x135b, 0x135c,
	0x137d, 0x137f,
	0x139a, 0x139f,
	0x13f5, 0x13ff,
	0x169d, 0x169f,
	0x16f1, 0x16ff,
	0x170d, 0x170d,
	0x1715, 0x171f,
	0x1737, 0x173f,
	0x1754, 0x175f,
	0x176d, 0x176d,
	0x1771, 0x1771,
	0x1774, 0x177f,
	0x17b4, 0x17b5,
	0x17de, 0x17df,
	0x17ea, 0x17ef,
	0x17fa, 0x17ff,
	0x180f, 0x180f,
	0x181a, 0x181f,
	0x1878, 0x187f,
	0x18ab, 0x18af,
	0x18f6, 0x18ff,
	0x191d, 0x191f,
	0x192c, 0x192f,
	0x193c, 0x193f,
	0x1941, 0x1943,
	0x196e, 0x196f,
	0x1975, 0x197f,
	0x19ac, 0x19af,
	0x19ca, 0x19cf,
	0x19db, 0x19dd,
	0x1a1c, 0x1a1d,
	0x1a5f, 0x1a5f,
	0x1a7d, 0x1a7e,
	0x1a8a, 0x1a8f,
	0x1a9a, 0x1a9f,
	0x1aae, 0x1aff,
	0x1b4c, 0x1b4f,
	0x1b7d, 0x1b7f,
	0x1bab, 0x1bad,
	0x1bba, 0x1bbf,
	0x1bf4, 0x1bfb,
	0x1c38, 0x1c3a,
	0x1c4a, 0x1c4c,
	0x1c80, 0x1ccf,
	0x1cf3, 0x1cff,
	0x1de7, 0x1dfb,
	0x1f16, 0x1f17,
	0x1f1e, 0x1f1f,
	0x1f46, 0x1f47,
	0x1f4e, 0x1f4f,
	0x1f58, 0x1f58,
	0x1f5a, 0x1f5a,
	0x1f5c, 0x1f5c,
	0x1f5e, 0x1f5e,
	0x1f7e, 0x1f7f,
	0x1fb5, 0x1fb5,
	0x1fc5, 0x1fc5,
	0x1fd4, 0x1fd5,
	0x1fdc, 0x1fdc,
	0x1ff0, 0x1ff1,
	0x1ff5, 0x1ff5,
	0x1fff, 0x1fff,
	0x200b, 0x200f,
	0x202a, 0x202e,
	0x2060, 0x206f,
	0x2072, 0x2073,
	0x208f, 0x208f,
	0x209d, 0x209f,
	0x20ba, 0x20cf,
	0x20f1, 0x20ff,
	0x218a, 0x218f,
	0x23f4, 0x23ff,
	0x2427, 0x243f,
	0x244b, 0x245f,
	0x2700, 0x2700,
	0x27cb, 0x27cb,
	0x27cd, 0x27cd,
	0x2b4d, 0x2b4f,
	0x2b5a, 0x2bff,
	0x2c2f, 0x2c2f,
	0x2c5f, 0x2c5f,
	0x2cf2, 0x2cf8,
	0x2d26, 0x2d2f,
	0x2d66, 0x2d6e,
	0x2d71, 0x2d7e,
	0x2d97, 0x2d9f,
	0x2da7, 0x2da7,
	0x2daf, 0x2daf,
	0x2db7, 0x2db7,
	0x2dbf, 0x2dbf,
	0x2dc7, 0x2dc7,
	0x2dcf, 0x2dcf,
	0x2dd7, 0x2dd7,
	0x2ddf, 0x2ddf,
	0x2e32, 0x2e7f,
	0x2e9a, 0x2e9a,
	0x2ef4, 0x2eff,
	0x2fd6, 0x2fef,
	0x2ffc, 0x2fff,
	0x3040, 0x3040,
	0x3097, 0x3098,
	0x3100, 0x3104,
	0x312e, 0x3130,
	0x318f, 0x318f,
	0x31bb, 0x31bf,
	0x31e4, 0x31ef,
	0x321f, 0x321f,
	0x32ff, 0x32ff,
	0x4db6, 0x4dbf,
	0x9fcc, 0x9fff,
	0xa48d, 0xa48f,
	0xa4c7, 0xa4cf,
	0xa62c, 0xa63f,
	0xa674, 0xa67b,
	0xa698, 0xa69f,
	0xa6f8, 0xa6ff,
	0xa78f, 0xa78f,
	0xa792, 0xa79f,
	0xa7aa, 0xa7f9,
	0xa82c, 0xa82f,
	0xa83a, 0xa83f,
	0xa878, 0xa87f,
	0xa8c5, 0xa8cd,
	0xa8da, 0xa8df,
	0xa8fc, 0xa8ff,
	0xa954, 0xa95e,
	0xa97d, 0xa97f,
	0xa9ce, 0xa9ce,
	0xa9da, 0xa9dd,
	0xa9e0, 0xa9ff,
	0xaa37, 0xaa3f,
	0xaa4e, 0xaa4f,
	0xaa5a, 0xaa5b,
	0xaa7c, 0xaa7f,
	0xaac3, 0xaada,
	0xaae0, 0xab00,
	0xab07, 0xab08,
	0xab0f, 0xab10,
	0xab17, 0xab1f,
	0xab27, 0xab27,
	0xab2f, 0xabbf,
	0xabee, 0xabef,
	0xabfa, 0xabff,
	0xd7a4, 0xd7af,
	0xd7c7, 0xd7ca,
	0xd7fc, 0xf8ff,
	0xfa2e, 0xfa2f,
	0xfa6e, 0xfa6f,
	0xfada, 0xfaff,
	0xfb07, 0xfb12,
	0xfb18, 0xfb1c,
	0xfb37, 0xfb37,
	0xfb3d, 0xfb3d,
	0xfb3f, 0xfb3f,
	0xfb42, 0xfb42,
	0xfb45, 0xfb45,
	0xfbc2, 0xfbd2,
	0xfd40, 0xfd4f,
	0xfd90, 0xfd91,
	0xfdc8, 0xfdef,
	0xfdfe, 0xfdff,
	0xfe1a, 0xfe1f,
	0xfe27, 0xfe2f,
	0xfe53, 0xfe53,
	0xfe67, 0xfe67,
	0xfe6c, 0xfe6f,
	0xfe75, 0xfe75,
	0xfefd, 0xff00,
	0xffbf, 0xffc1,
	0xffc8, 0xffc9,
	0xffd0, 0xffd1,
	0xffd8, 0xffd9,
	0xffdd, 0xffdf,
	0xffe7, 0xffe7,
	0xffef, 0xfffb,
	0xfffe, 0xffff,
	0x1000c, 0x1000c,
	0x10027, 0x10027,
	0x1003b, 0x1003b,
	0x1003e, 0x1003e,
	0x1004e, 0x1004f,
	0x1005e, 0x1007f,
	0x100fb, 0x100ff,
	0x10103, 0x10106,
	0x10134, 0x10136,
	0x1018b, 0x1018f,
	0x1019c, 0x101cf,
	0x101fe, 0x1027f,
	0x1029d, 0x1029f,
	0x102d1, 0x102ff,
	0x1031f, 0x1031f,
	0x10324, 0x1032f,
	0x1034b, 0x1037f,
	0x1039e, 0x1039e,
	0x103c4, 0x103c7,
	0x103d6, 0x103ff,
	0x1049e, 0x1049f,
	0x104aa, 0x107ff,
	0x10806, 0x10807,
	0x10809, 0x10809,
	0x10836, 0x10836,
	0x10839, 0x1083b,
	0x1083d, 0x1083e,
	0x10856, 0x10856,
	0x10860, 0x108ff,
	0x1091c, 0x1091e,
	0x1093a, 0x1093e,
	0x10940, 0x109ff,
	0x10a04, 0x10a04,
	0x10a07, 0x10a0b,
	0x10a14, 0x10a14,
	0x10a18, 0x10a18,
	0x10a34, 0x10a37,
	0x10a3b, 0x10a3e,
	0x10a48, 0x10a4f,
	0x10a59, 0x10a5f,
	0x10a80, 0x10aff,
	0x10b36, 0x10b38,
	0x10b56, 0x10b57,
	0x10b73, 0x10b77,
	0x10b80, 0x10bff,
	0x10c49, 0x10e5f,
	0x10e7f, 0x10fff,
	0x1104e, 0x11051,
	0x11070, 0x1107f,
	0x110bd, 0x110bd,
	0x110c2, 0x11fff,
	0x1236f, 0x123ff,
	0x12463, 0x1246f,
	0x12474, 0x12fff,
	0x1342f, 0x167ff,
	0x16a39, 0x1afff,
	0x1b002, 0x1cfff,
	0x1d0f6, 0x1d0ff,
	0x1d127, 0x1d128,
	0x1d173, 0x1d17a,
	0x1d1de, 0x1d1ff,
	0x1d246, 0x1d2ff,
	0x1d357, 0x1d35f,
	0x1d372, 0x1d3ff,
	0x1d455, 0x1d455,
	0x1d49d, 0x1d49d,
	0x1d4a0, 0x1d4a1,
	0x1d4a3, 0x1d4a4,
	0x1d4a7, 0x1d4a8,
	0x1d4ad, 0x1d4ad,
	0x1d4ba, 0x1d4ba,
	0x1d4bc, 0x1d4bc,
	0x1d4c4, 0x1d4c4,
	0x1d506, 0x1d506,
	0x1d50b, 0x1d50c,
	0x1d515, 0x1d515,
	0x1d51d, 0x1d51d,
	0x1d53a, 0x1d53a,
	0x1d53f, 0x1d53f,
	0x1d545, 0x1d545,
	0x1d547, 0x1d549,
	0x1d551, 0x1d551,
	0x1d6a6, 0x1d6a7,
	0x1d7cc, 0x1d7cd,
	0x1d800, 0x1efff,
	0x1f02c, 0x1f02f,
	0x1f094, 0x1f09f,
	0x1f0af, 0x1f0b0,
	0x1f0bf, 0x1f0c0,
	0x1f0d0, 0x1f0d0,
	0x1f0e0, 0x1f0ff,
	0x1f10b, 0x1f10f,
	0x1f12f, 0x1f12f,
	0x1f16a, 0x1f16f,
	0x1f19b, 0x1f1e5,
	0x1f203, 0x1f20f,
	0x1f23b, 0x1f23f,
	0x1f249, 0x1f24f,
	0x1f252, 0x1f2ff,
	0x1f321, 0x1f32f,
	0x1f336, 0x1f336,
	0x1f37d, 0x1f37f,
	0x1f394, 0x1f39f,
	0x1f3c5, 0x1f3c5,
	0x1f3cb, 0x1f3df,
	0x1f3f1, 0x1f3ff,
	0x1f43f, 0x1f43f,
	0x1f441, 0x1f441,
	0x1f4f8, 0x1f4f8,
	0x1f4fd, 0x1f4ff,
	0x1f53e, 0x1f54f,
	0x1f568, 0x1f5fa,
	0x1f600, 0x1f600,
	0x1f611, 0x1f611,
	0x1f615, 0x1f615,
	0x1f617, 0x1f617,
	0x1f619, 0x1f619,
	0x1f61b, 0x1f61b,
	0x1f61f, 0x1f61f,
	0x1f626, 0x1f627,
	0x1f62c, 0x1f62c,
	0x1f62e, 0x1f62f,
	0x1f634, 0x1f634,
	0x1f641, 0x1f644,
	0x1f650, 0x1f67f,
	0x1f6c6, 0x1f6ff,
	0x1f774, 0x1ffff,
	0x2a6d7, 0x2a6ff,
	0x2b735, 0x2b73f,
	0x2b81e, 0x2f7ff,
	0x2fa1e, 0xe00ff,
	0xe01f0, 0x10ffff,
}; /* CR_C */

/* 'Cc': General Category */
#define CR_Cc CR_Cntrl

/* 'Cf': General Category */
static const OnigCodePoint CR_Cf[] = {
	15,
	0x00ad, 0x00ad,
	0x0600, 0x0603,
	0x06dd, 0x06dd,
	0x070f, 0x070f,
	0x17b4, 0x17b5,
	0x200b, 0x200f,
	0x202a, 0x202e,
	0x2060, 0x2064,
	0x206a, 0x206f,
	0xfeff, 0xfeff,
	0xfff9, 0xfffb,
	0x110bd, 0x110bd,
	0x1d173, 0x1d17a,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
}; /* CR_Cf */

/* 'Cn': General Category */
static const OnigCodePoint CR_Cn[] = {
	501,
	0x0378, 0x0379,
	0x037f, 0x0383,
	0x038b, 0x038b,
	0x038d, 0x038d,
	0x03a2, 0x03a2,
	0x0528, 0x0530,
	0x0557, 0x0558,
	0x0560, 0x0560,
	0x0588, 0x0588,
	0x058b, 0x0590,
	0x05c8, 0x05cf,
	0x05eb, 0x05ef,
	0x05f5, 0x05ff,
	0x0604, 0x0605,
	0x061c, 0x061d,
	0x070e, 0x070e,
	0x074b, 0x074c,
	0x07b2, 0x07bf,
	0x07fb, 0x07ff,
	0x082e, 0x082f,
	0x083f, 0x083f,
	0x085c, 0x085d,
	0x085f, 0x08ff,
	0x0978, 0x0978,
	0x0980, 0x0980,
	0x0984, 0x0984,
	0x098d, 0x098e,
	0x0991, 0x0992,
	0x09a9, 0x09a9,
	0x09b1, 0x09b1,
	0x09b3, 0x09b5,
	0x09ba, 0x09bb,
	0x09c5, 0x09c6,
	0x09c9, 0x09ca,
	0x09cf, 0x09d6,
	0x09d8, 0x09db,
	0x09de, 0x09de,
	0x09e4, 0x09e5,
	0x09fc, 0x0a00,
	0x0a04, 0x0a04,
	0x0a0b, 0x0a0e,
	0x0a11, 0x0a12,
	0x0a29, 0x0a29,
	0x0a31, 0x0a31,
	0x0a34, 0x0a34,
	0x0a37, 0x0a37,
	0x0a3a, 0x0a3b,
	0x0a3d, 0x0a3d,
	0x0a43, 0x0a46,
	0x0a49, 0x0a4a,
	0x0a4e, 0x0a50,
	0x0a52, 0x0a58,
	0x0a5d, 0x0a5d,
	0x0a5f, 0x0a65,
	0x0a76, 0x0a80,
	0x0a84, 0x0a84,
	0x0a8e, 0x0a8e,
	0x0a92, 0x0a92,
	0x0aa9, 0x0aa9,
	0x0ab1, 0x0ab1,
	0x0ab4, 0x0ab4,
	0x0aba, 0x0abb,
	0x0ac6, 0x0ac6,
	0x0aca, 0x0aca,
	0x0ace, 0x0acf,
	0x0ad1, 0x0adf,
	0x0ae4, 0x0ae5,
	0x0af0, 0x0af0,
	0x0af2, 0x0b00,
	0x0b04, 0x0b04,
	0x0b0d, 0x0b0e,
	0x0b11, 0x0b12,
	0x0b29, 0x0b29,
	0x0b31, 0x0b31,
	0x0b34, 0x0b34,
	0x0b3a, 0x0b3b,
	0x0b45, 0x0b46,
	0x0b49, 0x0b4a,
	0x0b4e, 0x0b55,
	0x0b58, 0x0b5b,
	0x0b5e, 0x0b5e,
	0x0b64, 0x0b65,
	0x0b78, 0x0b81,
	0x0b84, 0x0b84,
	0x0b8b, 0x0b8d,
	0x0b91, 0x0b91,
	0x0b96, 0x0b98,
	0x0b9b, 0x0b9b,
	0x0b9d, 0x0b9d,
	0x0ba0, 0x0ba2,
	0x0ba5, 0x0ba7,
	0x0bab, 0x0bad,
	0x0bba, 0x0bbd,
	0x0bc3, 0x0bc5,
	0x0bc9, 0x0bc9,
	0x0bce, 0x0bcf,
	0x0bd1, 0x0bd6,
	0x0bd8, 0x0be5,
	0x0bfb, 0x0c00,
	0x0c04, 0x0c04,
	0x0c0d, 0x0c0d,
	0x0c11, 0x0c11,
	0x0c29, 0x0c29,
	0x0c34, 0x0c34,
	0x0c3a, 0x0c3c,
	0x0c45, 0x0c45,
	0x0c49, 0x0c49,
	0x0c4e, 0x0c54,
	0x0c57, 0x0c57,
	0x0c5a, 0x0c5f,
	0x0c64, 0x0c65,
	0x0c70, 0x0c77,
	0x0c80, 0x0c81,
	0x0c84, 0x0c84,
	0x0c8d, 0x0c8d,
	0x0c91, 0x0c91,
	0x0ca9, 0x0ca9,
	0x0cb4, 0x0cb4,
	0x0cba, 0x0cbb,
	0x0cc5, 0x0cc5,
	0x0cc9, 0x0cc9,
	0x0cce, 0x0cd4,
	0x0cd7, 0x0cdd,
	0x0cdf, 0x0cdf,
	0x0ce4, 0x0ce5,
	0x0cf0, 0x0cf0,
	0x0cf3, 0x0d01,
	0x0d04, 0x0d04,
	0x0d0d, 0x0d0d,
	0x0d11, 0x0d11,
	0x0d3b, 0x0d3c,
	0x0d45, 0x0d45,
	0x0d49, 0x0d49,
	0x0d4f, 0x0d56,
	0x0d58, 0x0d5f,
	0x0d64, 0x0d65,
	0x0d76, 0x0d78,
	0x0d80, 0x0d81,
	0x0d84, 0x0d84,
	0x0d97, 0x0d99,
	0x0db2, 0x0db2,
	0x0dbc, 0x0dbc,
	0x0dbe, 0x0dbf,
	0x0dc7, 0x0dc9,
	0x0dcb, 0x0dce,
	0x0dd5, 0x0dd5,
	0x0dd7, 0x0dd7,
	0x0de0, 0x0df1,
	0x0df5, 0x0e00,
	0x0e3b, 0x0e3e,
	0x0e5c, 0x0e80,
	0x0e83, 0x0e83,
	0x0e85, 0x0e86,
	0x0e89, 0x0e89,
	0x0e8b, 0x0e8c,
	0x0e8e, 0x0e93,
	0x0e98, 0x0e98,
	0x0ea0, 0x0ea0,
	0x0ea4, 0x0ea4,
	0x0ea6, 0x0ea6,
	0x0ea8, 0x0ea9,
	0x0eac, 0x0eac,
	0x0eba, 0x0eba,
	0x0ebe, 0x0ebf,
	0x0ec5, 0x0ec5,
	0x0ec7, 0x0ec7,
	0x0ece, 0x0ecf,
	0x0eda, 0x0edb,
	0x0ede, 0x0eff,
	0x0f48, 0x0f48,
	0x0f6d, 0x0f70,
	0x0f98, 0x0f98,
	0x0fbd, 0x0fbd,
	0x0fcd, 0x0fcd,
	0x0fdb, 0x0fff,
	0x10c6, 0x10cf,
	0x10fd, 0x10ff,
	0x1249, 0x1249,
	0x124e, 0x124f,
	0x1257, 0x1257,
	0x1259, 0x1259,
	0x125e, 0x125f,
	0x1289, 0x1289,
	0x128e, 0x128f,
	0x12b1, 0x12b1,
	0x12b6, 0x12b7,
	0x12bf, 0x12bf,
	0x12c1, 0x12c1,
	0x12c6, 0x12c7,
	0x12d7, 0x12d7,
	0x1311, 0x1311,
	0x1316, 0x1317,
	0x135b, 0x135c,
	0x137d, 0x137f,
	0x139a, 0x139f,
	0x13f5, 0x13ff,
	0x169d, 0x169f,
	0x16f1, 0x16ff,
	0x170d, 0x170d,
	0x1715, 0x171f,
	0x1737, 0x173f,
	0x1754, 0x175f,
	0x176d, 0x176d,
	0x1771, 0x1771,
	0x1774, 0x177f,
	0x17de, 0x17df,
	0x17ea, 0x17ef,
	0x17fa, 0x17ff,
	0x180f, 0x180f,
	0x181a, 0x181f,
	0x1878, 0x187f,
	0x18ab, 0x18af,
	0x18f6, 0x18ff,
	0x191d, 0x191f,
	0x192c, 0x192f,
	0x193c, 0x193f,
	0x1941, 0x1943,
	0x196e, 0x196f,
	0x1975, 0x197f,
	0x19ac, 0x19af,
	0x19ca, 0x19cf,
	0x19db, 0x19dd,
	0x1a1c, 0x1a1d,
	0x1a5f, 0x1a5f,
	0x1a7d, 0x1a7e,
	0x1a8a, 0x1a8f,
	0x1a9a, 0x1a9f,
	0x1aae, 0x1aff,
	0x1b4c, 0x1b4f,
	0x1b7d, 0x1b7f,
	0x1bab, 0x1bad,
	0x1bba, 0x1bbf,
	0x1bf4, 0x1bfb,
	0x1c38, 0x1c3a,
	0x1c4a, 0x1c4c,
	0x1c80, 0x1ccf,
	0x1cf3, 0x1cff,
	0x1de7, 0x1dfb,
	0x1f16, 0x1f17,
	0x1f1e, 0x1f1f,
	0x1f46, 0x1f47,
	0x1f4e, 0x1f4f,
	0x1f58, 0x1f58,
	0x1f5a, 0x1f5a,
	0x1f5c, 0x1f5c,
	0x1f5e, 0x1f5e,
	0x1f7e, 0x1f7f,
	0x1fb5, 0x1fb5,
	0x1fc5, 0x1fc5,
	0x1fd4, 0x1fd5,
	0x1fdc, 0x1fdc,
	0x1ff0, 0x1ff1,
	0x1ff5, 0x1ff5,
	0x1fff, 0x1fff,
	0x2065, 0x2069,
	0x2072, 0x2073,
	0x208f, 0x208f,
	0x209d, 0x209f,
	0x20ba, 0x20cf,
	0x20f1, 0x20ff,
	0x218a, 0x218f,
	0x23f4, 0x23ff,
	0x2427, 0x243f,
	0x244b, 0x245f,
	0x2700, 0x2700,
	0x27cb, 0x27cb,
	0x27cd, 0x27cd,
	0x2b4d, 0x2b4f,
	0x2b5a, 0x2bff,
	0x2c2f, 0x2c2f,
	0x2c5f, 0x2c5f,
	0x2cf2, 0x2cf8,
	0x2d26, 0x2d2f,
	0x2d66, 0x2d6e,
	0x2d71, 0x2d7e,
	0x2d97, 0x2d9f,
	0x2da7, 0x2da7,
	0x2daf, 0x2daf,
	0x2db7, 0x2db7,
	0x2dbf, 0x2dbf,
	0x2dc7, 0x2dc7,
	0x2dcf, 0x2dcf,
	0x2dd7, 0x2dd7,
	0x2ddf, 0x2ddf,
	0x2e32, 0x2e7f,
	0x2e9a, 0x2e9a,
	0x2ef4, 0x2eff,
	0x2fd6, 0x2fef,
	0x2ffc, 0x2fff,
	0x3040, 0x3040,
	0x3097, 0x3098,
	0x3100, 0x3104,
	0x312e, 0x3130,
	0x318f, 0x318f,
	0x31bb, 0x31bf,
	0x31e4, 0x31ef,
	0x321f, 0x321f,
	0x32ff, 0x32ff,
	0x4db6, 0x4dbf,
	0x9fcc, 0x9fff,
	0xa48d, 0xa48f,
	0xa4c7, 0xa4cf,
	0xa62c, 0xa63f,
	0xa674, 0xa67b,
	0xa698, 0xa69f,
	0xa6f8, 0xa6ff,
	0xa78f, 0xa78f,
	0xa792, 0xa79f,
	0xa7aa, 0xa7f9,
	0xa82c, 0xa82f,
	0xa83a, 0xa83f,
	0xa878, 0xa87f,
	0xa8c5, 0xa8cd,
	0xa8da, 0xa8df,
	0xa8fc, 0xa8ff,
	0xa954, 0xa95e,
	0xa97d, 0xa97f,
	0xa9ce, 0xa9ce,
	0xa9da, 0xa9dd,
	0xa9e0, 0xa9ff,
	0xaa37, 0xaa3f,
	0xaa4e, 0xaa4f,
	0xaa5a, 0xaa5b,
	0xaa7c, 0xaa7f,
	0xaac3, 0xaada,
	0xaae0, 0xab00,
	0xab07, 0xab08,
	0xab0f, 0xab10,
	0xab17, 0xab1f,
	0xab27, 0xab27,
	0xab2f, 0xabbf,
	0xabee, 0xabef,
	0xabfa, 0xabff,
	0xd7a4, 0xd7af,
	0xd7c7, 0xd7ca,
	0xd7fc, 0xd7ff,
	0xfa2e, 0xfa2f,
	0xfa6e, 0xfa6f,
	0xfada, 0xfaff,
	0xfb07, 0xfb12,
	0xfb18, 0xfb1c,
	0xfb37, 0xfb37,
	0xfb3d, 0xfb3d,
	0xfb3f, 0xfb3f,
	0xfb42, 0xfb42,
	0xfb45, 0xfb45,
	0xfbc2, 0xfbd2,
	0xfd40, 0xfd4f,
	0xfd90, 0xfd91,
	0xfdc8, 0xfdef,
	0xfdfe, 0xfdff,
	0xfe1a, 0xfe1f,
	0xfe27, 0xfe2f,
	0xfe53, 0xfe53,
	0xfe67, 0xfe67,
	0xfe6c, 0xfe6f,
	0xfe75, 0xfe75,
	0xfefd, 0xfefe,
	0xff00, 0xff00,
	0xffbf, 0xffc1,
	0xffc8, 0xffc9,
	0xffd0, 0xffd1,
	0xffd8, 0xffd9,
	0xffdd, 0xffdf,
	0xffe7, 0xffe7,
	0xffef, 0xfff8,
	0xfffe, 0xffff,
	0x1000c, 0x1000c,
	0x10027, 0x10027,
	0x1003b, 0x1003b,
	0x1003e, 0x1003e,
	0x1004e, 0x1004f,
	0x1005e, 0x1007f,
	0x100fb, 0x100ff,
	0x10103, 0x10106,
	0x10134, 0x10136,
	0x1018b, 0x1018f,
	0x1019c, 0x101cf,
	0x101fe, 0x1027f,
	0x1029d, 0x1029f,
	0x102d1, 0x102ff,
	0x1031f, 0x1031f,
	0x10324, 0x1032f,
	0x1034b, 0x1037f,
	0x1039e, 0x1039e,
	0x103c4, 0x103c7,
	0x103d6, 0x103ff,
	0x1049e, 0x1049f,
	0x104aa, 0x107ff,
	0x10806, 0x10807,
	0x10809, 0x10809,
	0x10836, 0x10836,
	0x10839, 0x1083b,
	0x1083d, 0x1083e,
	0x10856, 0x10856,
	0x10860, 0x108ff,
	0x1091c, 0x1091e,
	0x1093a, 0x1093e,
	0x10940, 0x109ff,
	0x10a04, 0x10a04,
	0x10a07, 0x10a0b,
	0x10a14, 0x10a14,
	0x10a18, 0x10a18,
	0x10a34, 0x10a37,
	0x10a3b, 0x10a3e,
	0x10a48, 0x10a4f,
	0x10a59, 0x10a5f,
	0x10a80, 0x10aff,
	0x10b36, 0x10b38,
	0x10b56, 0x10b57,
	0x10b73, 0x10b77,
	0x10b80, 0x10bff,
	0x10c49, 0x10e5f,
	0x10e7f, 0x10fff,
	0x1104e, 0x11051,
	0x11070, 0x1107f,
	0x110c2, 0x11fff,
	0x1236f, 0x123ff,
	0x12463, 0x1246f,
	0x12474, 0x12fff,
	0x1342f, 0x167ff,
	0x16a39, 0x1afff,
	0x1b002, 0x1cfff,
	0x1d0f6, 0x1d0ff,
	0x1d127, 0x1d128,
	0x1d1de, 0x1d1ff,
	0x1d246, 0x1d2ff,
	0x1d357, 0x1d35f,
	0x1d372, 0x1d3ff,
	0x1d455, 0x1d455,
	0x1d49d, 0x1d49d,
	0x1d4a0, 0x1d4a1,
	0x1d4a3, 0x1d4a4,
	0x1d4a7, 0x1d4a8,
	0x1d4ad, 0x1d4ad,
	0x1d4ba, 0x1d4ba,
	0x1d4bc, 0x1d4bc,
	0x1d4c4, 0x1d4c4,
	0x1d506, 0x1d506,
	0x1d50b, 0x1d50c,
	0x1d515, 0x1d515,
	0x1d51d, 0x1d51d,
	0x1d53a, 0x1d53a,
	0x1d53f, 0x1d53f,
	0x1d545, 0x1d545,
	0x1d547, 0x1d549,
	0x1d551, 0x1d551,
	0x1d6a6, 0x1d6a7,
	0x1d7cc, 0x1d7cd,
	0x1d800, 0x1efff,
	0x1f02c, 0x1f02f,
	0x1f094, 0x1f09f,
	0x1f0af, 0x1f0b0,
	0x1f0bf, 0x1f0c0,
	0x1f0d0, 0x1f0d0,
	0x1f0e0, 0x1f0ff,
	0x1f10b, 0x1f10f,
	0x1f12f, 0x1f12f,
	0x1f16a, 0x1f16f,
	0x1f19b, 0x1f1e5,
	0x1f203, 0x1f20f,
	0x1f23b, 0x1f23f,
	0x1f249, 0x1f24f,
	0x1f252, 0x1f2ff,
	0x1f321, 0x1f32f,
	0x1f336, 0x1f336,
	0x1f37d, 0x1f37f,
	0x1f394, 0x1f39f,
	0x1f3c5, 0x1f3c5,
	0x1f3cb, 0x1f3df,
	0x1f3f1, 0x1f3ff,
	0x1f43f, 0x1f43f,
	0x1f441, 0x1f441,
	0x1f4f8, 0x1f4f8,
	0x1f4fd, 0x1f4ff,
	0x1f53e, 0x1f54f,
	0x1f568, 0x1f5fa,
	0x1f600, 0x1f600,
	0x1f611, 0x1f611,
	0x1f615, 0x1f615,
	0x1f617, 0x1f617,
	0x1f619, 0x1f619,
	0x1f61b, 0x1f61b,
	0x1f61f, 0x1f61f,
	0x1f626, 0x1f627,
	0x1f62c, 0x1f62c,
	0x1f62e, 0x1f62f,
	0x1f634, 0x1f634,
	0x1f641, 0x1f644,
	0x1f650, 0x1f67f,
	0x1f6c6, 0x1f6ff,
	0x1f774, 0x1ffff,
	0x2a6d7, 0x2a6ff,
	0x2b735, 0x2b73f,
	0x2b81e, 0x2f7ff,
	0x2fa1e, 0xe0000,
	0xe0002, 0xe001f,
	0xe0080, 0xe00ff,
	0xe01f0, 0xeffff,
	0xffffe, 0xfffff,
	0x10fffe, 0x10ffff,
}; /* CR_Cn */

/* 'Co': General Category */
static const OnigCodePoint CR_Co[] = {
	3,
	0xe000, 0xf8ff,
	0xf0000, 0xffffd,
	0x100000, 0x10fffd,
}; /* CR_Co */

/* 'Cs': General Category */
static const OnigCodePoint CR_Cs[] = {
	1,
	0xd800, 0xdfff,
}; /* CR_Cs */

/* 'L': Major Category */
static const OnigCodePoint CR_L[] = {
	435,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0370, 0x0374,
	0x0376, 0x0377,
	0x037a, 0x037d,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x048a, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0620, 0x064a,
	0x066e, 0x066f,
	0x0671, 0x06d3,
	0x06d5, 0x06d5,
	0x06e5, 0x06e6,
	0x06ee, 0x06ef,
	0x06fa, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x0710,
	0x0712, 0x072f,
	0x074d, 0x07a5,
	0x07b1, 0x07b1,
	0x07ca, 0x07ea,
	0x07f4, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x0815,
	0x081a, 0x081a,
	0x0824, 0x0824,
	0x0828, 0x0828,
	0x0840, 0x0858,
	0x0904, 0x0939,
	0x093d, 0x093d,
	0x0950, 0x0950,
	0x0958, 0x0961,
	0x0971, 0x0977,
	0x0979, 0x097f,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bd, 0x09bd,
	0x09ce, 0x09ce,
	0x09dc, 0x09dd,
	0x09df, 0x09e1,
	0x09f0, 0x09f1,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a72, 0x0a74,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abd, 0x0abd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae1,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3d, 0x0b3d,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b71, 0x0b71,
	0x0b83, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bd0, 0x0bd0,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c3d,
	0x0c58, 0x0c59,
	0x0c60, 0x0c61,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbd, 0x0cbd,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0cf1, 0x0cf2,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d3d,
	0x0d4e, 0x0d4e,
	0x0d60, 0x0d61,
	0x0d7a, 0x0d7f,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0e01, 0x0e30,
	0x0e32, 0x0e33,
	0x0e40, 0x0e46,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb0,
	0x0eb2, 0x0eb3,
	0x0ebd, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0edc, 0x0edd,
	0x0f00, 0x0f00,
	0x0f40, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f88, 0x0f8c,
	0x1000, 0x102a,
	0x103f, 0x103f,
	0x1050, 0x1055,
	0x105a, 0x105d,
	0x1061, 0x1061,
	0x1065, 0x1066,
	0x106e, 0x1070,
	0x1075, 0x1081,
	0x108e, 0x108e,
	0x10a0, 0x10c5,
	0x10d0, 0x10fa,
	0x10fc, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x1700, 0x170c,
	0x170e, 0x1711,
	0x1720, 0x1731,
	0x1740, 0x1751,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1780, 0x17b3,
	0x17d7, 0x17d7,
	0x17dc, 0x17dc,
	0x1820, 0x1877,
	0x1880, 0x18a8,
	0x18aa, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1950, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19c1, 0x19c7,
	0x1a00, 0x1a16,
	0x1a20, 0x1a54,
	0x1aa7, 0x1aa7,
	0x1b05, 0x1b33,
	0x1b45, 0x1b4b,
	0x1b83, 0x1ba0,
	0x1bae, 0x1baf,
	0x1bc0, 0x1be5,
	0x1c00, 0x1c23,
	0x1c4d, 0x1c4f,
	0x1c5a, 0x1c7d,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf1,
	0x1d00, 0x1dbf,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x212f, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2183, 0x2184,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cee,
	0x2d00, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2e2f, 0x2e2f,
	0x3005, 0x3006,
	0x3031, 0x3035,
	0x303b, 0x303c,
	0x3041, 0x3096,
	0x309d, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcb,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa61f,
	0xa62a, 0xa62b,
	0xa640, 0xa66e,
	0xa67f, 0xa697,
	0xa6a0, 0xa6e5,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa801,
	0xa803, 0xa805,
	0xa807, 0xa80a,
	0xa80c, 0xa822,
	0xa840, 0xa873,
	0xa882, 0xa8b3,
	0xa8f2, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa90a, 0xa925,
	0xa930, 0xa946,
	0xa960, 0xa97c,
	0xa984, 0xa9b2,
	0xa9cf, 0xa9cf,
	0xaa00, 0xaa28,
	0xaa40, 0xaa42,
	0xaa44, 0xaa4b,
	0xaa60, 0xaa76,
	0xaa7a, 0xaa7a,
	0xaa80, 0xaaaf,
	0xaab1, 0xaab1,
	0xaab5, 0xaab6,
	0xaab9, 0xaabd,
	0xaac0, 0xaac0,
	0xaac2, 0xaac2,
	0xaadb, 0xaadd,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabe2,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb1d,
	0xfb1f, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0xff66, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10330, 0x10340,
	0x10342, 0x10349,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x10400, 0x1049d,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10a00, 0x10a00,
	0x10a10, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a60, 0x10a7c,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10c00, 0x10c48,
	0x11003, 0x11037,
	0x11083, 0x110af,
	0x12000, 0x1236e,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_L */

/* 'LC': General Category */
static const OnigCodePoint CR_LC[] = {
	110,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x01ba,
	0x01bc, 0x01bf,
	0x01c4, 0x0293,
	0x0295, 0x02af,
	0x0370, 0x0373,
	0x0376, 0x0377,
	0x037b, 0x037d,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x048a, 0x0527,
	0x0531, 0x0556,
	0x0561, 0x0587,
	0x10a0, 0x10c5,
	0x1d00, 0x1d2b,
	0x1d62, 0x1d77,
	0x1d79, 0x1d9a,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x212f, 0x2134,
	0x2139, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2183, 0x2184,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2c7c,
	0x2c7e, 0x2ce4,
	0x2ceb, 0x2cee,
	0x2d00, 0x2d25,
	0xa640, 0xa66d,
	0xa680, 0xa697,
	0xa722, 0xa76f,
	0xa771, 0xa787,
	0xa78b, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa7fa,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0x10400, 0x1044f,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
}; /* CR_LC */

/* 'Ll': General Category */
static const OnigCodePoint CR_Ll[] = {
	609,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00df, 0x00f6,
	0x00f8, 0x00ff,
	0x0101, 0x0101,
	0x0103, 0x0103,
	0x0105, 0x0105,
	0x0107, 0x0107,
	0x0109, 0x0109,
	0x010b, 0x010b,
	0x010d, 0x010d,
	0x010f, 0x010f,
	0x0111, 0x0111,
	0x0113, 0x0113,
	0x0115, 0x0115,
	0x0117, 0x0117,
	0x0119, 0x0119,
	0x011b, 0x011b,
	0x011d, 0x011d,
	0x011f, 0x011f,
	0x0121, 0x0121,
	0x0123, 0x0123,
	0x0125, 0x0125,
	0x0127, 0x0127,
	0x0129, 0x0129,
	0x012b, 0x012b,
	0x012d, 0x012d,
	0x012f, 0x012f,
	0x0131, 0x0131,
	0x0133, 0x0133,
	0x0135, 0x0135,
	0x0137, 0x0138,
	0x013a, 0x013a,
	0x013c, 0x013c,
	0x013e, 0x013e,
	0x0140, 0x0140,
	0x0142, 0x0142,
	0x0144, 0x0144,
	0x0146, 0x0146,
	0x0148, 0x0149,
	0x014b, 0x014b,
	0x014d, 0x014d,
	0x014f, 0x014f,
	0x0151, 0x0151,
	0x0153, 0x0153,
	0x0155, 0x0155,
	0x0157, 0x0157,
	0x0159, 0x0159,
	0x015b, 0x015b,
	0x015d, 0x015d,
	0x015f, 0x015f,
	0x0161, 0x0161,
	0x0163, 0x0163,
	0x0165, 0x0165,
	0x0167, 0x0167,
	0x0169, 0x0169,
	0x016b, 0x016b,
	0x016d, 0x016d,
	0x016f, 0x016f,
	0x0171, 0x0171,
	0x0173, 0x0173,
	0x0175, 0x0175,
	0x0177, 0x0177,
	0x017a, 0x017a,
	0x017c, 0x017c,
	0x017e, 0x0180,
	0x0183, 0x0183,
	0x0185, 0x0185,
	0x0188, 0x0188,
	0x018c, 0x018d,
	0x0192, 0x0192,
	0x0195, 0x0195,
	0x0199, 0x019b,
	0x019e, 0x019e,
	0x01a1, 0x01a1,
	0x01a3, 0x01a3,
	0x01a5, 0x01a5,
	0x01a8, 0x01a8,
	0x01aa, 0x01ab,
	0x01ad, 0x01ad,
	0x01b0, 0x01b0,
	0x01b4, 0x01b4,
	0x01b6, 0x01b6,
	0x01b9, 0x01ba,
	0x01bd, 0x01bf,
	0x01c6, 0x01c6,
	0x01c9, 0x01c9,
	0x01cc, 0x01cc,
	0x01ce, 0x01ce,
	0x01d0, 0x01d0,
	0x01d2, 0x01d2,
	0x01d4, 0x01d4,
	0x01d6, 0x01d6,
	0x01d8, 0x01d8,
	0x01da, 0x01da,
	0x01dc, 0x01dd,
	0x01df, 0x01df,
	0x01e1, 0x01e1,
	0x01e3, 0x01e3,
	0x01e5, 0x01e5,
	0x01e7, 0x01e7,
	0x01e9, 0x01e9,
	0x01eb, 0x01eb,
	0x01ed, 0x01ed,
	0x01ef, 0x01f0,
	0x01f3, 0x01f3,
	0x01f5, 0x01f5,
	0x01f9, 0x01f9,
	0x01fb, 0x01fb,
	0x01fd, 0x01fd,
	0x01ff, 0x01ff,
	0x0201, 0x0201,
	0x0203, 0x0203,
	0x0205, 0x0205,
	0x0207, 0x0207,
	0x0209, 0x0209,
	0x020b, 0x020b,
	0x020d, 0x020d,
	0x020f, 0x020f,
	0x0211, 0x0211,
	0x0213, 0x0213,
	0x0215, 0x0215,
	0x0217, 0x0217,
	0x0219, 0x0219,
	0x021b, 0x021b,
	0x021d, 0x021d,
	0x021f, 0x021f,
	0x0221, 0x0221,
	0x0223, 0x0223,
	0x0225, 0x0225,
	0x0227, 0x0227,
	0x0229, 0x0229,
	0x022b, 0x022b,
	0x022d, 0x022d,
	0x022f, 0x022f,
	0x0231, 0x0231,
	0x0233, 0x0239,
	0x023c, 0x023c,
	0x023f, 0x0240,
	0x0242, 0x0242,
	0x0247, 0x0247,
	0x0249, 0x0249,
	0x024b, 0x024b,
	0x024d, 0x024d,
	0x024f, 0x0293,
	0x0295, 0x02af,
	0x0371, 0x0371,
	0x0373, 0x0373,
	0x0377, 0x0377,
	0x037b, 0x037d,
	0x0390, 0x0390,
	0x03ac, 0x03ce,
	0x03d0, 0x03d1,
	0x03d5, 0x03d7,
	0x03d9, 0x03d9,
	0x03db, 0x03db,
	0x03dd, 0x03dd,
	0x03df, 0x03df,
	0x03e1, 0x03e1,
	0x03e3, 0x03e3,
	0x03e5, 0x03e5,
	0x03e7, 0x03e7,
	0x03e9, 0x03e9,
	0x03eb, 0x03eb,
	0x03ed, 0x03ed,
	0x03ef, 0x03f3,
	0x03f5, 0x03f5,
	0x03f8, 0x03f8,
	0x03fb, 0x03fc,
	0x0430, 0x045f,
	0x0461, 0x0461,
	0x0463, 0x0463,
	0x0465, 0x0465,
	0x0467, 0x0467,
	0x0469, 0x0469,
	0x046b, 0x046b,
	0x046d, 0x046d,
	0x046f, 0x046f,
	0x0471, 0x0471,
	0x0473, 0x0473,
	0x0475, 0x0475,
	0x0477, 0x0477,
	0x0479, 0x0479,
	0x047b, 0x047b,
	0x047d, 0x047d,
	0x047f, 0x047f,
	0x0481, 0x0481,
	0x048b, 0x048b,
	0x048d, 0x048d,
	0x048f, 0x048f,
	0x0491, 0x0491,
	0x0493, 0x0493,
	0x0495, 0x0495,
	0x0497, 0x0497,
	0x0499, 0x0499,
	0x049b, 0x049b,
	0x049d, 0x049d,
	0x049f, 0x049f,
	0x04a1, 0x04a1,
	0x04a3, 0x04a3,
	0x04a5, 0x04a5,
	0x04a7, 0x04a7,
	0x04a9, 0x04a9,
	0x04ab, 0x04ab,
	0x04ad, 0x04ad,
	0x04af, 0x04af,
	0x04b1, 0x04b1,
	0x04b3, 0x04b3,
	0x04b5, 0x04b5,
	0x04b7, 0x04b7,
	0x04b9, 0x04b9,
	0x04bb, 0x04bb,
	0x04bd, 0x04bd,
	0x04bf, 0x04bf,
	0x04c2, 0x04c2,
	0x04c4, 0x04c4,
	0x04c6, 0x04c6,
	0x04c8, 0x04c8,
	0x04ca, 0x04ca,
	0x04cc, 0x04cc,
	0x04ce, 0x04cf,
	0x04d1, 0x04d1,
	0x04d3, 0x04d3,
	0x04d5, 0x04d5,
	0x04d7, 0x04d7,
	0x04d9, 0x04d9,
	0x04db, 0x04db,
	0x04dd, 0x04dd,
	0x04df, 0x04df,
	0x04e1, 0x04e1,
	0x04e3, 0x04e3,
	0x04e5, 0x04e5,
	0x04e7, 0x04e7,
	0x04e9, 0x04e9,
	0x04eb, 0x04eb,
	0x04ed, 0x04ed,
	0x04ef, 0x04ef,
	0x04f1, 0x04f1,
	0x04f3, 0x04f3,
	0x04f5, 0x04f5,
	0x04f7, 0x04f7,
	0x04f9, 0x04f9,
	0x04fb, 0x04fb,
	0x04fd, 0x04fd,
	0x04ff, 0x04ff,
	0x0501, 0x0501,
	0x0503, 0x0503,
	0x0505, 0x0505,
	0x0507, 0x0507,
	0x0509, 0x0509,
	0x050b, 0x050b,
	0x050d, 0x050d,
	0x050f, 0x050f,
	0x0511, 0x0511,
	0x0513, 0x0513,
	0x0515, 0x0515,
	0x0517, 0x0517,
	0x0519, 0x0519,
	0x051b, 0x051b,
	0x051d, 0x051d,
	0x051f, 0x051f,
	0x0521, 0x0521,
	0x0523, 0x0523,
	0x0525, 0x0525,
	0x0527, 0x0527,
	0x0561, 0x0587,
	0x1d00, 0x1d2b,
	0x1d62, 0x1d77,
	0x1d79, 0x1d9a,
	0x1e01, 0x1e01,
	0x1e03, 0x1e03,
	0x1e05, 0x1e05,
	0x1e07, 0x1e07,
	0x1e09, 0x1e09,
	0x1e0b, 0x1e0b,
	0x1e0d, 0x1e0d,
	0x1e0f, 0x1e0f,
	0x1e11, 0x1e11,
	0x1e13, 0x1e13,
	0x1e15, 0x1e15,
	0x1e17, 0x1e17,
	0x1e19, 0x1e19,
	0x1e1b, 0x1e1b,
	0x1e1d, 0x1e1d,
	0x1e1f, 0x1e1f,
	0x1e21, 0x1e21,
	0x1e23, 0x1e23,
	0x1e25, 0x1e25,
	0x1e27, 0x1e27,
	0x1e29, 0x1e29,
	0x1e2b, 0x1e2b,
	0x1e2d, 0x1e2d,
	0x1e2f, 0x1e2f,
	0x1e31, 0x1e31,
	0x1e33, 0x1e33,
	0x1e35, 0x1e35,
	0x1e37, 0x1e37,
	0x1e39, 0x1e39,
	0x1e3b, 0x1e3b,
	0x1e3d, 0x1e3d,
	0x1e3f, 0x1e3f,
	0x1e41, 0x1e41,
	0x1e43, 0x1e43,
	0x1e45, 0x1e45,
	0x1e47, 0x1e47,
	0x1e49, 0x1e49,
	0x1e4b, 0x1e4b,
	0x1e4d, 0x1e4d,
	0x1e4f, 0x1e4f,
	0x1e51, 0x1e51,
	0x1e53, 0x1e53,
	0x1e55, 0x1e55,
	0x1e57, 0x1e57,
	0x1e59, 0x1e59,
	0x1e5b, 0x1e5b,
	0x1e5d, 0x1e5d,
	0x1e5f, 0x1e5f,
	0x1e61, 0x1e61,
	0x1e63, 0x1e63,
	0x1e65, 0x1e65,
	0x1e67, 0x1e67,
	0x1e69, 0x1e69,
	0x1e6b, 0x1e6b,
	0x1e6d, 0x1e6d,
	0x1e6f, 0x1e6f,
	0x1e71, 0x1e71,
	0x1e73, 0x1e73,
	0x1e75, 0x1e75,
	0x1e77, 0x1e77,
	0x1e79, 0x1e79,
	0x1e7b, 0x1e7b,
	0x1e7d, 0x1e7d,
	0x1e7f, 0x1e7f,
	0x1e81, 0x1e81,
	0x1e83, 0x1e83,
	0x1e85, 0x1e85,
	0x1e87, 0x1e87,
	0x1e89, 0x1e89,
	0x1e8b, 0x1e8b,
	0x1e8d, 0x1e8d,
	0x1e8f, 0x1e8f,
	0x1e91, 0x1e91,
	0x1e93, 0x1e93,
	0x1e95, 0x1e9d,
	0x1e9f, 0x1e9f,
	0x1ea1, 0x1ea1,
	0x1ea3, 0x1ea3,
	0x1ea5, 0x1ea5,
	0x1ea7, 0x1ea7,
	0x1ea9, 0x1ea9,
	0x1eab, 0x1eab,
	0x1ead, 0x1ead,
	0x1eaf, 0x1eaf,
	0x1eb1, 0x1eb1,
	0x1eb3, 0x1eb3,
	0x1eb5, 0x1eb5,
	0x1eb7, 0x1eb7,
	0x1eb9, 0x1eb9,
	0x1ebb, 0x1ebb,
	0x1ebd, 0x1ebd,
	0x1ebf, 0x1ebf,
	0x1ec1, 0x1ec1,
	0x1ec3, 0x1ec3,
	0x1ec5, 0x1ec5,
	0x1ec7, 0x1ec7,
	0x1ec9, 0x1ec9,
	0x1ecb, 0x1ecb,
	0x1ecd, 0x1ecd,
	0x1ecf, 0x1ecf,
	0x1ed1, 0x1ed1,
	0x1ed3, 0x1ed3,
	0x1ed5, 0x1ed5,
	0x1ed7, 0x1ed7,
	0x1ed9, 0x1ed9,
	0x1edb, 0x1edb,
	0x1edd, 0x1edd,
	0x1edf, 0x1edf,
	0x1ee1, 0x1ee1,
	0x1ee3, 0x1ee3,
	0x1ee5, 0x1ee5,
	0x1ee7, 0x1ee7,
	0x1ee9, 0x1ee9,
	0x1eeb, 0x1eeb,
	0x1eed, 0x1eed,
	0x1eef, 0x1eef,
	0x1ef1, 0x1ef1,
	0x1ef3, 0x1ef3,
	0x1ef5, 0x1ef5,
	0x1ef7, 0x1ef7,
	0x1ef9, 0x1ef9,
	0x1efb, 0x1efb,
	0x1efd, 0x1efd,
	0x1eff, 0x1f07,
	0x1f10, 0x1f15,
	0x1f20, 0x1f27,
	0x1f30, 0x1f37,
	0x1f40, 0x1f45,
	0x1f50, 0x1f57,
	0x1f60, 0x1f67,
	0x1f70, 0x1f7d,
	0x1f80, 0x1f87,
	0x1f90, 0x1f97,
	0x1fa0, 0x1fa7,
	0x1fb0, 0x1fb4,
	0x1fb6, 0x1fb7,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fc7,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fd7,
	0x1fe0, 0x1fe7,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ff7,
	0x210a, 0x210a,
	0x210e, 0x210f,
	0x2113, 0x2113,
	0x212f, 0x212f,
	0x2134, 0x2134,
	0x2139, 0x2139,
	0x213c, 0x213d,
	0x2146, 0x2149,
	0x214e, 0x214e,
	0x2184, 0x2184,
	0x2c30, 0x2c5e,
	0x2c61, 0x2c61,
	0x2c65, 0x2c66,
	0x2c68, 0x2c68,
	0x2c6a, 0x2c6a,
	0x2c6c, 0x2c6c,
	0x2c71, 0x2c71,
	0x2c73, 0x2c74,
	0x2c76, 0x2c7c,
	0x2c81, 0x2c81,
	0x2c83, 0x2c83,
	0x2c85, 0x2c85,
	0x2c87, 0x2c87,
	0x2c89, 0x2c89,
	0x2c8b, 0x2c8b,
	0x2c8d, 0x2c8d,
	0x2c8f, 0x2c8f,
	0x2c91, 0x2c91,
	0x2c93, 0x2c93,
	0x2c95, 0x2c95,
	0x2c97, 0x2c97,
	0x2c99, 0x2c99,
	0x2c9b, 0x2c9b,
	0x2c9d, 0x2c9d,
	0x2c9f, 0x2c9f,
	0x2ca1, 0x2ca1,
	0x2ca3, 0x2ca3,
	0x2ca5, 0x2ca5,
	0x2ca7, 0x2ca7,
	0x2ca9, 0x2ca9,
	0x2cab, 0x2cab,
	0x2cad, 0x2cad,
	0x2caf, 0x2caf,
	0x2cb1, 0x2cb1,
	0x2cb3, 0x2cb3,
	0x2cb5, 0x2cb5,
	0x2cb7, 0x2cb7,
	0x2cb9, 0x2cb9,
	0x2cbb, 0x2cbb,
	0x2cbd, 0x2cbd,
	0x2cbf, 0x2cbf,
	0x2cc1, 0x2cc1,
	0x2cc3, 0x2cc3,
	0x2cc5, 0x2cc5,
	0x2cc7, 0x2cc7,
	0x2cc9, 0x2cc9,
	0x2ccb, 0x2ccb,
	0x2ccd, 0x2ccd,
	0x2ccf, 0x2ccf,
	0x2cd1, 0x2cd1,
	0x2cd3, 0x2cd3,
	0x2cd5, 0x2cd5,
	0x2cd7, 0x2cd7,
	0x2cd9, 0x2cd9,
	0x2cdb, 0x2cdb,
	0x2cdd, 0x2cdd,
	0x2cdf, 0x2cdf,
	0x2ce1, 0x2ce1,
	0x2ce3, 0x2ce4,
	0x2cec, 0x2cec,
	0x2cee, 0x2cee,
	0x2d00, 0x2d25,
	0xa641, 0xa641,
	0xa643, 0xa643,
	0xa645, 0xa645,
	0xa647, 0xa647,
	0xa649, 0xa649,
	0xa64b, 0xa64b,
	0xa64d, 0xa64d,
	0xa64f, 0xa64f,
	0xa651, 0xa651,
	0xa653, 0xa653,
	0xa655, 0xa655,
	0xa657, 0xa657,
	0xa659, 0xa659,
	0xa65b, 0xa65b,
	0xa65d, 0xa65d,
	0xa65f, 0xa65f,
	0xa661, 0xa661,
	0xa663, 0xa663,
	0xa665, 0xa665,
	0xa667, 0xa667,
	0xa669, 0xa669,
	0xa66b, 0xa66b,
	0xa66d, 0xa66d,
	0xa681, 0xa681,
	0xa683, 0xa683,
	0xa685, 0xa685,
	0xa687, 0xa687,
	0xa689, 0xa689,
	0xa68b, 0xa68b,
	0xa68d, 0xa68d,
	0xa68f, 0xa68f,
	0xa691, 0xa691,
	0xa693, 0xa693,
	0xa695, 0xa695,
	0xa697, 0xa697,
	0xa723, 0xa723,
	0xa725, 0xa725,
	0xa727, 0xa727,
	0xa729, 0xa729,
	0xa72b, 0xa72b,
	0xa72d, 0xa72d,
	0xa72f, 0xa731,
	0xa733, 0xa733,
	0xa735, 0xa735,
	0xa737, 0xa737,
	0xa739, 0xa739,
	0xa73b, 0xa73b,
	0xa73d, 0xa73d,
	0xa73f, 0xa73f,
	0xa741, 0xa741,
	0xa743, 0xa743,
	0xa745, 0xa745,
	0xa747, 0xa747,
	0xa749, 0xa749,
	0xa74b, 0xa74b,
	0xa74d, 0xa74d,
	0xa74f, 0xa74f,
	0xa751, 0xa751,
	0xa753, 0xa753,
	0xa755, 0xa755,
	0xa757, 0xa757,
	0xa759, 0xa759,
	0xa75b, 0xa75b,
	0xa75d, 0xa75d,
	0xa75f, 0xa75f,
	0xa761, 0xa761,
	0xa763, 0xa763,
	0xa765, 0xa765,
	0xa767, 0xa767,
	0xa769, 0xa769,
	0xa76b, 0xa76b,
	0xa76d, 0xa76d,
	0xa76f, 0xa76f,
	0xa771, 0xa778,
	0xa77a, 0xa77a,
	0xa77c, 0xa77c,
	0xa77f, 0xa77f,
	0xa781, 0xa781,
	0xa783, 0xa783,
	0xa785, 0xa785,
	0xa787, 0xa787,
	0xa78c, 0xa78c,
	0xa78e, 0xa78e,
	0xa791, 0xa791,
	0xa7a1, 0xa7a1,
	0xa7a3, 0xa7a3,
	0xa7a5, 0xa7a5,
	0xa7a7, 0xa7a7,
	0xa7a9, 0xa7a9,
	0xa7fa, 0xa7fa,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff41, 0xff5a,
	0x10428, 0x1044f,
	0x1d41a, 0x1d433,
	0x1d44e, 0x1d454,
	0x1d456, 0x1d467,
	0x1d482, 0x1d49b,
	0x1d4b6, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d4cf,
	0x1d4ea, 0x1d503,
	0x1d51e, 0x1d537,
	0x1d552, 0x1d56b,
	0x1d586, 0x1d59f,
	0x1d5ba, 0x1d5d3,
	0x1d5ee, 0x1d607,
	0x1d622, 0x1d63b,
	0x1d656, 0x1d66f,
	0x1d68a, 0x1d6a5,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6e1,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d71b,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d755,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d78f,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7c9,
	0x1d7cb, 0x1d7cb,
}; /* CR_Ll */

/* 'Lm': General Category */
static const OnigCodePoint CR_Lm[] = {
	49,
	0x02b0, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0374, 0x0374,
	0x037a, 0x037a,
	0x0559, 0x0559,
	0x0640, 0x0640,
	0x06e5, 0x06e6,
	0x07f4, 0x07f5,
	0x07fa, 0x07fa,
	0x081a, 0x081a,
	0x0824, 0x0824,
	0x0828, 0x0828,
	0x0971, 0x0971,
	0x0e46, 0x0e46,
	0x0ec6, 0x0ec6,
	0x10fc, 0x10fc,
	0x17d7, 0x17d7,
	0x1843, 0x1843,
	0x1aa7, 0x1aa7,
	0x1c78, 0x1c7d,
	0x1d2c, 0x1d61,
	0x1d78, 0x1d78,
	0x1d9b, 0x1dbf,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x2c7d, 0x2c7d,
	0x2d6f, 0x2d6f,
	0x2e2f, 0x2e2f,
	0x3005, 0x3005,
	0x3031, 0x3035,
	0x303b, 0x303b,
	0x309d, 0x309e,
	0x30fc, 0x30fe,
	0xa015, 0xa015,
	0xa4f8, 0xa4fd,
	0xa60c, 0xa60c,
	0xa67f, 0xa67f,
	0xa717, 0xa71f,
	0xa770, 0xa770,
	0xa788, 0xa788,
	0xa9cf, 0xa9cf,
	0xaa70, 0xaa70,
	0xaadd, 0xaadd,
	0xff70, 0xff70,
	0xff9e, 0xff9f,
}; /* CR_Lm */

/* 'Lo': General Category */
static const OnigCodePoint CR_Lo[] = {
	323,
	0x01bb, 0x01bb,
	0x01c0, 0x01c3,
	0x0294, 0x0294,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0620, 0x063f,
	0x0641, 0x064a,
	0x066e, 0x066f,
	0x0671, 0x06d3,
	0x06d5, 0x06d5,
	0x06ee, 0x06ef,
	0x06fa, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x0710,
	0x0712, 0x072f,
	0x074d, 0x07a5,
	0x07b1, 0x07b1,
	0x07ca, 0x07ea,
	0x0800, 0x0815,
	0x0840, 0x0858,
	0x0904, 0x0939,
	0x093d, 0x093d,
	0x0950, 0x0950,
	0x0958, 0x0961,
	0x0972, 0x0977,
	0x0979, 0x097f,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bd, 0x09bd,
	0x09ce, 0x09ce,
	0x09dc, 0x09dd,
	0x09df, 0x09e1,
	0x09f0, 0x09f1,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a72, 0x0a74,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abd, 0x0abd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae1,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3d, 0x0b3d,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b71, 0x0b71,
	0x0b83, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bd0, 0x0bd0,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c3d,
	0x0c58, 0x0c59,
	0x0c60, 0x0c61,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbd, 0x0cbd,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0cf1, 0x0cf2,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d3d,
	0x0d4e, 0x0d4e,
	0x0d60, 0x0d61,
	0x0d7a, 0x0d7f,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0e01, 0x0e30,
	0x0e32, 0x0e33,
	0x0e40, 0x0e45,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb0,
	0x0eb2, 0x0eb3,
	0x0ebd, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0edc, 0x0edd,
	0x0f00, 0x0f00,
	0x0f40, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f88, 0x0f8c,
	0x1000, 0x102a,
	0x103f, 0x103f,
	0x1050, 0x1055,
	0x105a, 0x105d,
	0x1061, 0x1061,
	0x1065, 0x1066,
	0x106e, 0x1070,
	0x1075, 0x1081,
	0x108e, 0x108e,
	0x10d0, 0x10fa,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x1700, 0x170c,
	0x170e, 0x1711,
	0x1720, 0x1731,
	0x1740, 0x1751,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1780, 0x17b3,
	0x17dc, 0x17dc,
	0x1820, 0x1842,
	0x1844, 0x1877,
	0x1880, 0x18a8,
	0x18aa, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1950, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19c1, 0x19c7,
	0x1a00, 0x1a16,
	0x1a20, 0x1a54,
	0x1b05, 0x1b33,
	0x1b45, 0x1b4b,
	0x1b83, 0x1ba0,
	0x1bae, 0x1baf,
	0x1bc0, 0x1be5,
	0x1c00, 0x1c23,
	0x1c4d, 0x1c4f,
	0x1c5a, 0x1c77,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf1,
	0x2135, 0x2138,
	0x2d30, 0x2d65,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x3006, 0x3006,
	0x303c, 0x303c,
	0x3041, 0x3096,
	0x309f, 0x309f,
	0x30a1, 0x30fa,
	0x30ff, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcb,
	0xa000, 0xa014,
	0xa016, 0xa48c,
	0xa4d0, 0xa4f7,
	0xa500, 0xa60b,
	0xa610, 0xa61f,
	0xa62a, 0xa62b,
	0xa66e, 0xa66e,
	0xa6a0, 0xa6e5,
	0xa7fb, 0xa801,
	0xa803, 0xa805,
	0xa807, 0xa80a,
	0xa80c, 0xa822,
	0xa840, 0xa873,
	0xa882, 0xa8b3,
	0xa8f2, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa90a, 0xa925,
	0xa930, 0xa946,
	0xa960, 0xa97c,
	0xa984, 0xa9b2,
	0xaa00, 0xaa28,
	0xaa40, 0xaa42,
	0xaa44, 0xaa4b,
	0xaa60, 0xaa6f,
	0xaa71, 0xaa76,
	0xaa7a, 0xaa7a,
	0xaa80, 0xaaaf,
	0xaab1, 0xaab1,
	0xaab5, 0xaab6,
	0xaab9, 0xaabd,
	0xaac0, 0xaac0,
	0xaac2, 0xaac2,
	0xaadb, 0xaadc,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabe2,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb1d, 0xfb1d,
	0xfb1f, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff66, 0xff6f,
	0xff71, 0xff9d,
	0xffa0, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10330, 0x10340,
	0x10342, 0x10349,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x10450, 0x1049d,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10a00, 0x10a00,
	0x10a10, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a60, 0x10a7c,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10c00, 0x10c48,
	0x11003, 0x11037,
	0x11083, 0x110af,
	0x12000, 0x1236e,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_Lo */

/* 'Lt': General Category */
static const OnigCodePoint CR_Lt[] = {
	10,
	0x01c5, 0x01c5,
	0x01c8, 0x01c8,
	0x01cb, 0x01cb,
	0x01f2, 0x01f2,
	0x1f88, 0x1f8f,
	0x1f98, 0x1f9f,
	0x1fa8, 0x1faf,
	0x1fbc, 0x1fbc,
	0x1fcc, 0x1fcc,
	0x1ffc, 0x1ffc,
}; /* CR_Lt */

/* 'Lu': General Category */
static const OnigCodePoint CR_Lu[] = {
	603,
	0x0041, 0x005a,
	0x00c0, 0x00d6,
	0x00d8, 0x00de,
	0x0100, 0x0100,
	0x0102, 0x0102,
	0x0104, 0x0104,
	0x0106, 0x0106,
	0x0108, 0x0108,
	0x010a, 0x010a,
	0x010c, 0x010c,
	0x010e, 0x010e,
	0x0110, 0x0110,
	0x0112, 0x0112,
	0x0114, 0x0114,
	0x0116, 0x0116,
	0x0118, 0x0118,
	0x011a, 0x011a,
	0x011c, 0x011c,
	0x011e, 0x011e,
	0x0120, 0x0120,
	0x0122, 0x0122,
	0x0124, 0x0124,
	0x0126, 0x0126,
	0x0128, 0x0128,
	0x012a, 0x012a,
	0x012c, 0x012c,
	0x012e, 0x012e,
	0x0130, 0x0130,
	0x0132, 0x0132,
	0x0134, 0x0134,
	0x0136, 0x0136,
	0x0139, 0x0139,
	0x013b, 0x013b,
	0x013d, 0x013d,
	0x013f, 0x013f,
	0x0141, 0x0141,
	0x0143, 0x0143,
	0x0145, 0x0145,
	0x0147, 0x0147,
	0x014a, 0x014a,
	0x014c, 0x014c,
	0x014e, 0x014e,
	0x0150, 0x0150,
	0x0152, 0x0152,
	0x0154, 0x0154,
	0x0156, 0x0156,
	0x0158, 0x0158,
	0x015a, 0x015a,
	0x015c, 0x015c,
	0x015e, 0x015e,
	0x0160, 0x0160,
	0x0162, 0x0162,
	0x0164, 0x0164,
	0x0166, 0x0166,
	0x0168, 0x0168,
	0x016a, 0x016a,
	0x016c, 0x016c,
	0x016e, 0x016e,
	0x0170, 0x0170,
	0x0172, 0x0172,
	0x0174, 0x0174,
	0x0176, 0x0176,
	0x0178, 0x0179,
	0x017b, 0x017b,
	0x017d, 0x017d,
	0x0181, 0x0182,
	0x0184, 0x0184,
	0x0186, 0x0187,
	0x0189, 0x018b,
	0x018e, 0x0191,
	0x0193, 0x0194,
	0x0196, 0x0198,
	0x019c, 0x019d,
	0x019f, 0x01a0,
	0x01a2, 0x01a2,
	0x01a4, 0x01a4,
	0x01a6, 0x01a7,
	0x01a9, 0x01a9,
	0x01ac, 0x01ac,
	0x01ae, 0x01af,
	0x01b1, 0x01b3,
	0x01b5, 0x01b5,
	0x01b7, 0x01b8,
	0x01bc, 0x01bc,
	0x01c4, 0x01c4,
	0x01c7, 0x01c7,
	0x01ca, 0x01ca,
	0x01cd, 0x01cd,
	0x01cf, 0x01cf,
	0x01d1, 0x01d1,
	0x01d3, 0x01d3,
	0x01d5, 0x01d5,
	0x01d7, 0x01d7,
	0x01d9, 0x01d9,
	0x01db, 0x01db,
	0x01de, 0x01de,
	0x01e0, 0x01e0,
	0x01e2, 0x01e2,
	0x01e4, 0x01e4,
	0x01e6, 0x01e6,
	0x01e8, 0x01e8,
	0x01ea, 0x01ea,
	0x01ec, 0x01ec,
	0x01ee, 0x01ee,
	0x01f1, 0x01f1,
	0x01f4, 0x01f4,
	0x01f6, 0x01f8,
	0x01fa, 0x01fa,
	0x01fc, 0x01fc,
	0x01fe, 0x01fe,
	0x0200, 0x0200,
	0x0202, 0x0202,
	0x0204, 0x0204,
	0x0206, 0x0206,
	0x0208, 0x0208,
	0x020a, 0x020a,
	0x020c, 0x020c,
	0x020e, 0x020e,
	0x0210, 0x0210,
	0x0212, 0x0212,
	0x0214, 0x0214,
	0x0216, 0x0216,
	0x0218, 0x0218,
	0x021a, 0x021a,
	0x021c, 0x021c,
	0x021e, 0x021e,
	0x0220, 0x0220,
	0x0222, 0x0222,
	0x0224, 0x0224,
	0x0226, 0x0226,
	0x0228, 0x0228,
	0x022a, 0x022a,
	0x022c, 0x022c,
	0x022e, 0x022e,
	0x0230, 0x0230,
	0x0232, 0x0232,
	0x023a, 0x023b,
	0x023d, 0x023e,
	0x0241, 0x0241,
	0x0243, 0x0246,
	0x0248, 0x0248,
	0x024a, 0x024a,
	0x024c, 0x024c,
	0x024e, 0x024e,
	0x0370, 0x0370,
	0x0372, 0x0372,
	0x0376, 0x0376,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x038f,
	0x0391, 0x03a1,
	0x03a3, 0x03ab,
	0x03cf, 0x03cf,
	0x03d2, 0x03d4,
	0x03d8, 0x03d8,
	0x03da, 0x03da,
	0x03dc, 0x03dc,
	0x03de, 0x03de,
	0x03e0, 0x03e0,
	0x03e2, 0x03e2,
	0x03e4, 0x03e4,
	0x03e6, 0x03e6,
	0x03e8, 0x03e8,
	0x03ea, 0x03ea,
	0x03ec, 0x03ec,
	0x03ee, 0x03ee,
	0x03f4, 0x03f4,
	0x03f7, 0x03f7,
	0x03f9, 0x03fa,
	0x03fd, 0x042f,
	0x0460, 0x0460,
	0x0462, 0x0462,
	0x0464, 0x0464,
	0x0466, 0x0466,
	0x0468, 0x0468,
	0x046a, 0x046a,
	0x046c, 0x046c,
	0x046e, 0x046e,
	0x0470, 0x0470,
	0x0472, 0x0472,
	0x0474, 0x0474,
	0x0476, 0x0476,
	0x0478, 0x0478,
	0x047a, 0x047a,
	0x047c, 0x047c,
	0x047e, 0x047e,
	0x0480, 0x0480,
	0x048a, 0x048a,
	0x048c, 0x048c,
	0x048e, 0x048e,
	0x0490, 0x0490,
	0x0492, 0x0492,
	0x0494, 0x0494,
	0x0496, 0x0496,
	0x0498, 0x0498,
	0x049a, 0x049a,
	0x049c, 0x049c,
	0x049e, 0x049e,
	0x04a0, 0x04a0,
	0x04a2, 0x04a2,
	0x04a4, 0x04a4,
	0x04a6, 0x04a6,
	0x04a8, 0x04a8,
	0x04aa, 0x04aa,
	0x04ac, 0x04ac,
	0x04ae, 0x04ae,
	0x04b0, 0x04b0,
	0x04b2, 0x04b2,
	0x04b4, 0x04b4,
	0x04b6, 0x04b6,
	0x04b8, 0x04b8,
	0x04ba, 0x04ba,
	0x04bc, 0x04bc,
	0x04be, 0x04be,
	0x04c0, 0x04c1,
	0x04c3, 0x04c3,
	0x04c5, 0x04c5,
	0x04c7, 0x04c7,
	0x04c9, 0x04c9,
	0x04cb, 0x04cb,
	0x04cd, 0x04cd,
	0x04d0, 0x04d0,
	0x04d2, 0x04d2,
	0x04d4, 0x04d4,
	0x04d6, 0x04d6,
	0x04d8, 0x04d8,
	0x04da, 0x04da,
	0x04dc, 0x04dc,
	0x04de, 0x04de,
	0x04e0, 0x04e0,
	0x04e2, 0x04e2,
	0x04e4, 0x04e4,
	0x04e6, 0x04e6,
	0x04e8, 0x04e8,
	0x04ea, 0x04ea,
	0x04ec, 0x04ec,
	0x04ee, 0x04ee,
	0x04f0, 0x04f0,
	0x04f2, 0x04f2,
	0x04f4, 0x04f4,
	0x04f6, 0x04f6,
	0x04f8, 0x04f8,
	0x04fa, 0x04fa,
	0x04fc, 0x04fc,
	0x04fe, 0x04fe,
	0x0500, 0x0500,
	0x0502, 0x0502,
	0x0504, 0x0504,
	0x0506, 0x0506,
	0x0508, 0x0508,
	0x050a, 0x050a,
	0x050c, 0x050c,
	0x050e, 0x050e,
	0x0510, 0x0510,
	0x0512, 0x0512,
	0x0514, 0x0514,
	0x0516, 0x0516,
	0x0518, 0x0518,
	0x051a, 0x051a,
	0x051c, 0x051c,
	0x051e, 0x051e,
	0x0520, 0x0520,
	0x0522, 0x0522,
	0x0524, 0x0524,
	0x0526, 0x0526,
	0x0531, 0x0556,
	0x10a0, 0x10c5,
	0x1e00, 0x1e00,
	0x1e02, 0x1e02,
	0x1e04, 0x1e04,
	0x1e06, 0x1e06,
	0x1e08, 0x1e08,
	0x1e0a, 0x1e0a,
	0x1e0c, 0x1e0c,
	0x1e0e, 0x1e0e,
	0x1e10, 0x1e10,
	0x1e12, 0x1e12,
	0x1e14, 0x1e14,
	0x1e16, 0x1e16,
	0x1e18, 0x1e18,
	0x1e1a, 0x1e1a,
	0x1e1c, 0x1e1c,
	0x1e1e, 0x1e1e,
	0x1e20, 0x1e20,
	0x1e22, 0x1e22,
	0x1e24, 0x1e24,
	0x1e26, 0x1e26,
	0x1e28, 0x1e28,
	0x1e2a, 0x1e2a,
	0x1e2c, 0x1e2c,
	0x1e2e, 0x1e2e,
	0x1e30, 0x1e30,
	0x1e32, 0x1e32,
	0x1e34, 0x1e34,
	0x1e36, 0x1e36,
	0x1e38, 0x1e38,
	0x1e3a, 0x1e3a,
	0x1e3c, 0x1e3c,
	0x1e3e, 0x1e3e,
	0x1e40, 0x1e40,
	0x1e42, 0x1e42,
	0x1e44, 0x1e44,
	0x1e46, 0x1e46,
	0x1e48, 0x1e48,
	0x1e4a, 0x1e4a,
	0x1e4c, 0x1e4c,
	0x1e4e, 0x1e4e,
	0x1e50, 0x1e50,
	0x1e52, 0x1e52,
	0x1e54, 0x1e54,
	0x1e56, 0x1e56,
	0x1e58, 0x1e58,
	0x1e5a, 0x1e5a,
	0x1e5c, 0x1e5c,
	0x1e5e, 0x1e5e,
	0x1e60, 0x1e60,
	0x1e62, 0x1e62,
	0x1e64, 0x1e64,
	0x1e66, 0x1e66,
	0x1e68, 0x1e68,
	0x1e6a, 0x1e6a,
	0x1e6c, 0x1e6c,
	0x1e6e, 0x1e6e,
	0x1e70, 0x1e70,
	0x1e72, 0x1e72,
	0x1e74, 0x1e74,
	0x1e76, 0x1e76,
	0x1e78, 0x1e78,
	0x1e7a, 0x1e7a,
	0x1e7c, 0x1e7c,
	0x1e7e, 0x1e7e,
	0x1e80, 0x1e80,
	0x1e82, 0x1e82,
	0x1e84, 0x1e84,
	0x1e86, 0x1e86,
	0x1e88, 0x1e88,
	0x1e8a, 0x1e8a,
	0x1e8c, 0x1e8c,
	0x1e8e, 0x1e8e,
	0x1e90, 0x1e90,
	0x1e92, 0x1e92,
	0x1e94, 0x1e94,
	0x1e9e, 0x1e9e,
	0x1ea0, 0x1ea0,
	0x1ea2, 0x1ea2,
	0x1ea4, 0x1ea4,
	0x1ea6, 0x1ea6,
	0x1ea8, 0x1ea8,
	0x1eaa, 0x1eaa,
	0x1eac, 0x1eac,
	0x1eae, 0x1eae,
	0x1eb0, 0x1eb0,
	0x1eb2, 0x1eb2,
	0x1eb4, 0x1eb4,
	0x1eb6, 0x1eb6,
	0x1eb8, 0x1eb8,
	0x1eba, 0x1eba,
	0x1ebc, 0x1ebc,
	0x1ebe, 0x1ebe,
	0x1ec0, 0x1ec0,
	0x1ec2, 0x1ec2,
	0x1ec4, 0x1ec4,
	0x1ec6, 0x1ec6,
	0x1ec8, 0x1ec8,
	0x1eca, 0x1eca,
	0x1ecc, 0x1ecc,
	0x1ece, 0x1ece,
	0x1ed0, 0x1ed0,
	0x1ed2, 0x1ed2,
	0x1ed4, 0x1ed4,
	0x1ed6, 0x1ed6,
	0x1ed8, 0x1ed8,
	0x1eda, 0x1eda,
	0x1edc, 0x1edc,
	0x1ede, 0x1ede,
	0x1ee0, 0x1ee0,
	0x1ee2, 0x1ee2,
	0x1ee4, 0x1ee4,
	0x1ee6, 0x1ee6,
	0x1ee8, 0x1ee8,
	0x1eea, 0x1eea,
	0x1eec, 0x1eec,
	0x1eee, 0x1eee,
	0x1ef0, 0x1ef0,
	0x1ef2, 0x1ef2,
	0x1ef4, 0x1ef4,
	0x1ef6, 0x1ef6,
	0x1ef8, 0x1ef8,
	0x1efa, 0x1efa,
	0x1efc, 0x1efc,
	0x1efe, 0x1efe,
	0x1f08, 0x1f0f,
	0x1f18, 0x1f1d,
	0x1f28, 0x1f2f,
	0x1f38, 0x1f3f,
	0x1f48, 0x1f4d,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f5f,
	0x1f68, 0x1f6f,
	0x1fb8, 0x1fbb,
	0x1fc8, 0x1fcb,
	0x1fd8, 0x1fdb,
	0x1fe8, 0x1fec,
	0x1ff8, 0x1ffb,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210b, 0x210d,
	0x2110, 0x2112,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x2130, 0x2133,
	0x213e, 0x213f,
	0x2145, 0x2145,
	0x2183, 0x2183,
	0x2c00, 0x2c2e,
	0x2c60, 0x2c60,
	0x2c62, 0x2c64,
	0x2c67, 0x2c67,
	0x2c69, 0x2c69,
	0x2c6b, 0x2c6b,
	0x2c6d, 0x2c70,
	0x2c72, 0x2c72,
	0x2c75, 0x2c75,
	0x2c7e, 0x2c80,
	0x2c82, 0x2c82,
	0x2c84, 0x2c84,
	0x2c86, 0x2c86,
	0x2c88, 0x2c88,
	0x2c8a, 0x2c8a,
	0x2c8c, 0x2c8c,
	0x2c8e, 0x2c8e,
	0x2c90, 0x2c90,
	0x2c92, 0x2c92,
	0x2c94, 0x2c94,
	0x2c96, 0x2c96,
	0x2c98, 0x2c98,
	0x2c9a, 0x2c9a,
	0x2c9c, 0x2c9c,
	0x2c9e, 0x2c9e,
	0x2ca0, 0x2ca0,
	0x2ca2, 0x2ca2,
	0x2ca4, 0x2ca4,
	0x2ca6, 0x2ca6,
	0x2ca8, 0x2ca8,
	0x2caa, 0x2caa,
	0x2cac, 0x2cac,
	0x2cae, 0x2cae,
	0x2cb0, 0x2cb0,
	0x2cb2, 0x2cb2,
	0x2cb4, 0x2cb4,
	0x2cb6, 0x2cb6,
	0x2cb8, 0x2cb8,
	0x2cba, 0x2cba,
	0x2cbc, 0x2cbc,
	0x2cbe, 0x2cbe,
	0x2cc0, 0x2cc0,
	0x2cc2, 0x2cc2,
	0x2cc4, 0x2cc4,
	0x2cc6, 0x2cc6,
	0x2cc8, 0x2cc8,
	0x2cca, 0x2cca,
	0x2ccc, 0x2ccc,
	0x2cce, 0x2cce,
	0x2cd0, 0x2cd0,
	0x2cd2, 0x2cd2,
	0x2cd4, 0x2cd4,
	0x2cd6, 0x2cd6,
	0x2cd8, 0x2cd8,
	0x2cda, 0x2cda,
	0x2cdc, 0x2cdc,
	0x2cde, 0x2cde,
	0x2ce0, 0x2ce0,
	0x2ce2, 0x2ce2,
	0x2ceb, 0x2ceb,
	0x2ced, 0x2ced,
	0xa640, 0xa640,
	0xa642, 0xa642,
	0xa644, 0xa644,
	0xa646, 0xa646,
	0xa648, 0xa648,
	0xa64a, 0xa64a,
	0xa64c, 0xa64c,
	0xa64e, 0xa64e,
	0xa650, 0xa650,
	0xa652, 0xa652,
	0xa654, 0xa654,
	0xa656, 0xa656,
	0xa658, 0xa658,
	0xa65a, 0xa65a,
	0xa65c, 0xa65c,
	0xa65e, 0xa65e,
	0xa660, 0xa660,
	0xa662, 0xa662,
	0xa664, 0xa664,
	0xa666, 0xa666,
	0xa668, 0xa668,
	0xa66a, 0xa66a,
	0xa66c, 0xa66c,
	0xa680, 0xa680,
	0xa682, 0xa682,
	0xa684, 0xa684,
	0xa686, 0xa686,
	0xa688, 0xa688,
	0xa68a, 0xa68a,
	0xa68c, 0xa68c,
	0xa68e, 0xa68e,
	0xa690, 0xa690,
	0xa692, 0xa692,
	0xa694, 0xa694,
	0xa696, 0xa696,
	0xa722, 0xa722,
	0xa724, 0xa724,
	0xa726, 0xa726,
	0xa728, 0xa728,
	0xa72a, 0xa72a,
	0xa72c, 0xa72c,
	0xa72e, 0xa72e,
	0xa732, 0xa732,
	0xa734, 0xa734,
	0xa736, 0xa736,
	0xa738, 0xa738,
	0xa73a, 0xa73a,
	0xa73c, 0xa73c,
	0xa73e, 0xa73e,
	0xa740, 0xa740,
	0xa742, 0xa742,
	0xa744, 0xa744,
	0xa746, 0xa746,
	0xa748, 0xa748,
	0xa74a, 0xa74a,
	0xa74c, 0xa74c,
	0xa74e, 0xa74e,
	0xa750, 0xa750,
	0xa752, 0xa752,
	0xa754, 0xa754,
	0xa756, 0xa756,
	0xa758, 0xa758,
	0xa75a, 0xa75a,
	0xa75c, 0xa75c,
	0xa75e, 0xa75e,
	0xa760, 0xa760,
	0xa762, 0xa762,
	0xa764, 0xa764,
	0xa766, 0xa766,
	0xa768, 0xa768,
	0xa76a, 0xa76a,
	0xa76c, 0xa76c,
	0xa76e, 0xa76e,
	0xa779, 0xa779,
	0xa77b, 0xa77b,
	0xa77d, 0xa77e,
	0xa780, 0xa780,
	0xa782, 0xa782,
	0xa784, 0xa784,
	0xa786, 0xa786,
	0xa78b, 0xa78b,
	0xa78d, 0xa78d,
	0xa790, 0xa790,
	0xa7a0, 0xa7a0,
	0xa7a2, 0xa7a2,
	0xa7a4, 0xa7a4,
	0xa7a6, 0xa7a6,
	0xa7a8, 0xa7a8,
	0xff21, 0xff3a,
	0x10400, 0x10427,
	0x1d400, 0x1d419,
	0x1d434, 0x1d44d,
	0x1d468, 0x1d481,
	0x1d49c, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b5,
	0x1d4d0, 0x1d4e9,
	0x1d504, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d538, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d56c, 0x1d585,
	0x1d5a0, 0x1d5b9,
	0x1d5d4, 0x1d5ed,
	0x1d608, 0x1d621,
	0x1d63c, 0x1d655,
	0x1d670, 0x1d689,
	0x1d6a8, 0x1d6c0,
	0x1d6e2, 0x1d6fa,
	0x1d71c, 0x1d734,
	0x1d756, 0x1d76e,
	0x1d790, 0x1d7a8,
	0x1d7ca, 0x1d7ca,
}; /* CR_Lu */

/* 'M': Major Category */
static const OnigCodePoint CR_M[] = {
	193,
	0x0300, 0x036f,
	0x0483, 0x0489,
	0x0591, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x0610, 0x061a,
	0x064b, 0x065f,
	0x0670, 0x0670,
	0x06d6, 0x06dc,
	0x06df, 0x06e4,
	0x06e7, 0x06e8,
	0x06ea, 0x06ed,
	0x0711, 0x0711,
	0x0730, 0x074a,
	0x07a6, 0x07b0,
	0x07eb, 0x07f3,
	0x0816, 0x0819,
	0x081b, 0x0823,
	0x0825, 0x0827,
	0x0829, 0x082d,
	0x0859, 0x085b,
	0x0900, 0x0903,
	0x093a, 0x093c,
	0x093e, 0x094f,
	0x0951, 0x0957,
	0x0962, 0x0963,
	0x0981, 0x0983,
	0x09bc, 0x09bc,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09e2, 0x09e3,
	0x0a01, 0x0a03,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a70, 0x0a71,
	0x0a75, 0x0a75,
	0x0a81, 0x0a83,
	0x0abc, 0x0abc,
	0x0abe, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ae2, 0x0ae3,
	0x0b01, 0x0b03,
	0x0b3c, 0x0b3c,
	0x0b3e, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b62, 0x0b63,
	0x0b82, 0x0b82,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0c01, 0x0c03,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c62, 0x0c63,
	0x0c82, 0x0c83,
	0x0cbc, 0x0cbc,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0ce2, 0x0ce3,
	0x0d02, 0x0d03,
	0x0d3e, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d62, 0x0d63,
	0x0d82, 0x0d83,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df3,
	0x0e31, 0x0e31,
	0x0e34, 0x0e3a,
	0x0e47, 0x0e4e,
	0x0eb1, 0x0eb1,
	0x0eb4, 0x0eb9,
	0x0ebb, 0x0ebc,
	0x0ec8, 0x0ecd,
	0x0f18, 0x0f19,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f3e, 0x0f3f,
	0x0f71, 0x0f84,
	0x0f86, 0x0f87,
	0x0f8d, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fc6, 0x0fc6,
	0x102b, 0x103e,
	0x1056, 0x1059,
	0x105e, 0x1060,
	0x1062, 0x1064,
	0x1067, 0x106d,
	0x1071, 0x1074,
	0x1082, 0x108d,
	0x108f, 0x108f,
	0x109a, 0x109d,
	0x135d, 0x135f,
	0x1712, 0x1714,
	0x1732, 0x1734,
	0x1752, 0x1753,
	0x1772, 0x1773,
	0x17b6, 0x17d3,
	0x17dd, 0x17dd,
	0x180b, 0x180d,
	0x18a9, 0x18a9,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x19b0, 0x19c0,
	0x19c8, 0x19c9,
	0x1a17, 0x1a1b,
	0x1a55, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a7f,
	0x1b00, 0x1b04,
	0x1b34, 0x1b44,
	0x1b6b, 0x1b73,
	0x1b80, 0x1b82,
	0x1ba1, 0x1baa,
	0x1be6, 0x1bf3,
	0x1c24, 0x1c37,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1ce8,
	0x1ced, 0x1ced,
	0x1cf2, 0x1cf2,
	0x1dc0, 0x1de6,
	0x1dfc, 0x1dff,
	0x20d0, 0x20f0,
	0x2cef, 0x2cf1,
	0x2d7f, 0x2d7f,
	0x2de0, 0x2dff,
	0x302a, 0x302f,
	0x3099, 0x309a,
	0xa66f, 0xa672,
	0xa67c, 0xa67d,
	0xa6f0, 0xa6f1,
	0xa802, 0xa802,
	0xa806, 0xa806,
	0xa80b, 0xa80b,
	0xa823, 0xa827,
	0xa880, 0xa881,
	0xa8b4, 0xa8c4,
	0xa8e0, 0xa8f1,
	0xa926, 0xa92d,
	0xa947, 0xa953,
	0xa980, 0xa983,
	0xa9b3, 0xa9c0,
	0xaa29, 0xaa36,
	0xaa43, 0xaa43,
	0xaa4c, 0xaa4d,
	0xaa7b, 0xaa7b,
	0xaab0, 0xaab0,
	0xaab2, 0xaab4,
	0xaab7, 0xaab8,
	0xaabe, 0xaabf,
	0xaac1, 0xaac1,
	0xabe3, 0xabea,
	0xabec, 0xabed,
	0xfb1e, 0xfb1e,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe26,
	0x101fd, 0x101fd,
	0x10a01, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a0f,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a3f,
	0x11000, 0x11002,
	0x11038, 0x11046,
	0x11080, 0x11082,
	0x110b0, 0x110ba,
	0x1d165, 0x1d169,
	0x1d16d, 0x1d172,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1d242, 0x1d244,
	0xe0100, 0xe01ef,
}; /* CR_M */

/* 'Mc': General Category */
static const OnigCodePoint CR_Mc[] = {
	113,
	0x0903, 0x0903,
	0x093b, 0x093b,
	0x093e, 0x0940,
	0x0949, 0x094c,
	0x094e, 0x094f,
	0x0982, 0x0983,
	0x09be, 0x09c0,
	0x09c7, 0x09c8,
	0x09cb, 0x09cc,
	0x09d7, 0x09d7,
	0x0a03, 0x0a03,
	0x0a3e, 0x0a40,
	0x0a83, 0x0a83,
	0x0abe, 0x0ac0,
	0x0ac9, 0x0ac9,
	0x0acb, 0x0acc,
	0x0b02, 0x0b03,
	0x0b3e, 0x0b3e,
	0x0b40, 0x0b40,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4c,
	0x0b57, 0x0b57,
	0x0bbe, 0x0bbf,
	0x0bc1, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcc,
	0x0bd7, 0x0bd7,
	0x0c01, 0x0c03,
	0x0c41, 0x0c44,
	0x0c82, 0x0c83,
	0x0cbe, 0x0cbe,
	0x0cc0, 0x0cc4,
	0x0cc7, 0x0cc8,
	0x0cca, 0x0ccb,
	0x0cd5, 0x0cd6,
	0x0d02, 0x0d03,
	0x0d3e, 0x0d40,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4c,
	0x0d57, 0x0d57,
	0x0d82, 0x0d83,
	0x0dcf, 0x0dd1,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df3,
	0x0f3e, 0x0f3f,
	0x0f7f, 0x0f7f,
	0x102b, 0x102c,
	0x1031, 0x1031,
	0x1038, 0x1038,
	0x103b, 0x103c,
	0x1056, 0x1057,
	0x1062, 0x1064,
	0x1067, 0x106d,
	0x1083, 0x1084,
	0x1087, 0x108c,
	0x108f, 0x108f,
	0x109a, 0x109c,
	0x17b6, 0x17b6,
	0x17be, 0x17c5,
	0x17c7, 0x17c8,
	0x1923, 0x1926,
	0x1929, 0x192b,
	0x1930, 0x1931,
	0x1933, 0x1938,
	0x19b0, 0x19c0,
	0x19c8, 0x19c9,
	0x1a19, 0x1a1b,
	0x1a55, 0x1a55,
	0x1a57, 0x1a57,
	0x1a61, 0x1a61,
	0x1a63, 0x1a64,
	0x1a6d, 0x1a72,
	0x1b04, 0x1b04,
	0x1b35, 0x1b35,
	0x1b3b, 0x1b3b,
	0x1b3d, 0x1b41,
	0x1b43, 0x1b44,
	0x1b82, 0x1b82,
	0x1ba1, 0x1ba1,
	0x1ba6, 0x1ba7,
	0x1baa, 0x1baa,
	0x1be7, 0x1be7,
	0x1bea, 0x1bec,
	0x1bee, 0x1bee,
	0x1bf2, 0x1bf3,
	0x1c24, 0x1c2b,
	0x1c34, 0x1c35,
	0x1ce1, 0x1ce1,
	0x1cf2, 0x1cf2,
	0xa823, 0xa824,
	0xa827, 0xa827,
	0xa880, 0xa881,
	0xa8b4, 0xa8c3,
	0xa952, 0xa953,
	0xa983, 0xa983,
	0xa9b4, 0xa9b5,
	0xa9ba, 0xa9bb,
	0xa9bd, 0xa9c0,
	0xaa2f, 0xaa30,
	0xaa33, 0xaa34,
	0xaa4d, 0xaa4d,
	0xaa7b, 0xaa7b,
	0xabe3, 0xabe4,
	0xabe6, 0xabe7,
	0xabe9, 0xabea,
	0xabec, 0xabec,
	0x11000, 0x11000,
	0x11002, 0x11002,
	0x11082, 0x11082,
	0x110b0, 0x110b2,
	0x110b7, 0x110b8,
	0x1d165, 0x1d166,
	0x1d16d, 0x1d172,
}; /* CR_Mc */

/* 'Me': General Category */
static const OnigCodePoint CR_Me[] = {
	4,
	0x0488, 0x0489,
	0x20dd, 0x20e0,
	0x20e2, 0x20e4,
	0xa670, 0xa672,
}; /* CR_Me */

/* 'Mn': General Category */
static const OnigCodePoint CR_Mn[] = {
	203,
	0x0300, 0x036f,
	0x0483, 0x0487,
	0x0591, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x0610, 0x061a,
	0x064b, 0x065f,
	0x0670, 0x0670,
	0x06d6, 0x06dc,
	0x06df, 0x06e4,
	0x06e7, 0x06e8,
	0x06ea, 0x06ed,
	0x0711, 0x0711,
	0x0730, 0x074a,
	0x07a6, 0x07b0,
	0x07eb, 0x07f3,
	0x0816, 0x0819,
	0x081b, 0x0823,
	0x0825, 0x0827,
	0x0829, 0x082d,
	0x0859, 0x085b,
	0x0900, 0x0902,
	0x093a, 0x093a,
	0x093c, 0x093c,
	0x0941, 0x0948,
	0x094d, 0x094d,
	0x0951, 0x0957,
	0x0962, 0x0963,
	0x0981, 0x0981,
	0x09bc, 0x09bc,
	0x09c1, 0x09c4,
	0x09cd, 0x09cd,
	0x09e2, 0x09e3,
	0x0a01, 0x0a02,
	0x0a3c, 0x0a3c,
	0x0a41, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a70, 0x0a71,
	0x0a75, 0x0a75,
	0x0a81, 0x0a82,
	0x0abc, 0x0abc,
	0x0ac1, 0x0ac5,
	0x0ac7, 0x0ac8,
	0x0acd, 0x0acd,
	0x0ae2, 0x0ae3,
	0x0b01, 0x0b01,
	0x0b3c, 0x0b3c,
	0x0b3f, 0x0b3f,
	0x0b41, 0x0b44,
	0x0b4d, 0x0b4d,
	0x0b56, 0x0b56,
	0x0b62, 0x0b63,
	0x0b82, 0x0b82,
	0x0bc0, 0x0bc0,
	0x0bcd, 0x0bcd,
	0x0c3e, 0x0c40,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c62, 0x0c63,
	0x0cbc, 0x0cbc,
	0x0cbf, 0x0cbf,
	0x0cc6, 0x0cc6,
	0x0ccc, 0x0ccd,
	0x0ce2, 0x0ce3,
	0x0d41, 0x0d44,
	0x0d4d, 0x0d4d,
	0x0d62, 0x0d63,
	0x0dca, 0x0dca,
	0x0dd2, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0e31, 0x0e31,
	0x0e34, 0x0e3a,
	0x0e47, 0x0e4e,
	0x0eb1, 0x0eb1,
	0x0eb4, 0x0eb9,
	0x0ebb, 0x0ebc,
	0x0ec8, 0x0ecd,
	0x0f18, 0x0f19,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f71, 0x0f7e,
	0x0f80, 0x0f84,
	0x0f86, 0x0f87,
	0x0f8d, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fc6, 0x0fc6,
	0x102d, 0x1030,
	0x1032, 0x1037,
	0x1039, 0x103a,
	0x103d, 0x103e,
	0x1058, 0x1059,
	0x105e, 0x1060,
	0x1071, 0x1074,
	0x1082, 0x1082,
	0x1085, 0x1086,
	0x108d, 0x108d,
	0x109d, 0x109d,
	0x135d, 0x135f,
	0x1712, 0x1714,
	0x1732, 0x1734,
	0x1752, 0x1753,
	0x1772, 0x1773,
	0x17b7, 0x17bd,
	0x17c6, 0x17c6,
	0x17c9, 0x17d3,
	0x17dd, 0x17dd,
	0x180b, 0x180d,
	0x18a9, 0x18a9,
	0x1920, 0x1922,
	0x1927, 0x1928,
	0x1932, 0x1932,
	0x1939, 0x193b,
	0x1a17, 0x1a18,
	0x1a56, 0x1a56,
	0x1a58, 0x1a5e,
	0x1a60, 0x1a60,
	0x1a62, 0x1a62,
	0x1a65, 0x1a6c,
	0x1a73, 0x1a7c,
	0x1a7f, 0x1a7f,
	0x1b00, 0x1b03,
	0x1b34, 0x1b34,
	0x1b36, 0x1b3a,
	0x1b3c, 0x1b3c,
	0x1b42, 0x1b42,
	0x1b6b, 0x1b73,
	0x1b80, 0x1b81,
	0x1ba2, 0x1ba5,
	0x1ba8, 0x1ba9,
	0x1be6, 0x1be6,
	0x1be8, 0x1be9,
	0x1bed, 0x1bed,
	0x1bef, 0x1bf1,
	0x1c2c, 0x1c33,
	0x1c36, 0x1c37,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1ce0,
	0x1ce2, 0x1ce8,
	0x1ced, 0x1ced,
	0x1dc0, 0x1de6,
	0x1dfc, 0x1dff,
	0x20d0, 0x20dc,
	0x20e1, 0x20e1,
	0x20e5, 0x20f0,
	0x2cef, 0x2cf1,
	0x2d7f, 0x2d7f,
	0x2de0, 0x2dff,
	0x302a, 0x302f,
	0x3099, 0x309a,
	0xa66f, 0xa66f,
	0xa67c, 0xa67d,
	0xa6f0, 0xa6f1,
	0xa802, 0xa802,
	0xa806, 0xa806,
	0xa80b, 0xa80b,
	0xa825, 0xa826,
	0xa8c4, 0xa8c4,
	0xa8e0, 0xa8f1,
	0xa926, 0xa92d,
	0xa947, 0xa951,
	0xa980, 0xa982,
	0xa9b3, 0xa9b3,
	0xa9b6, 0xa9b9,
	0xa9bc, 0xa9bc,
	0xaa29, 0xaa2e,
	0xaa31, 0xaa32,
	0xaa35, 0xaa36,
	0xaa43, 0xaa43,
	0xaa4c, 0xaa4c,
	0xaab0, 0xaab0,
	0xaab2, 0xaab4,
	0xaab7, 0xaab8,
	0xaabe, 0xaabf,
	0xaac1, 0xaac1,
	0xabe5, 0xabe5,
	0xabe8, 0xabe8,
	0xabed, 0xabed,
	0xfb1e, 0xfb1e,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe26,
	0x101fd, 0x101fd,
	0x10a01, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a0f,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a3f,
	0x11001, 0x11001,
	0x11038, 0x11046,
	0x11080, 0x11081,
	0x110b3, 0x110b6,
	0x110b9, 0x110ba,
	0x1d167, 0x1d169,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1d242, 0x1d244,
	0xe0100, 0xe01ef,
}; /* CR_Mn */

/* 'N': Major Category */
static const OnigCodePoint CR_N[] = {
	83,
	0x0030, 0x0039,
	0x00b2, 0x00b3,
	0x00b9, 0x00b9,
	0x00bc, 0x00be,
	0x0660, 0x0669,
	0x06f0, 0x06f9,
	0x07c0, 0x07c9,
	0x0966, 0x096f,
	0x09e6, 0x09ef,
	0x09f4, 0x09f9,
	0x0a66, 0x0a6f,
	0x0ae6, 0x0aef,
	0x0b66, 0x0b6f,
	0x0b72, 0x0b77,
	0x0be6, 0x0bf2,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7e,
	0x0ce6, 0x0cef,
	0x0d66, 0x0d75,
	0x0e50, 0x0e59,
	0x0ed0, 0x0ed9,
	0x0f20, 0x0f33,
	0x1040, 0x1049,
	0x1090, 0x1099,
	0x1369, 0x137c,
	0x16ee, 0x16f0,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1810, 0x1819,
	0x1946, 0x194f,
	0x19d0, 0x19da,
	0x1a80, 0x1a89,
	0x1a90, 0x1a99,
	0x1b50, 0x1b59,
	0x1bb0, 0x1bb9,
	0x1c40, 0x1c49,
	0x1c50, 0x1c59,
	0x2070, 0x2070,
	0x2074, 0x2079,
	0x2080, 0x2089,
	0x2150, 0x2182,
	0x2185, 0x2189,
	0x2460, 0x249b,
	0x24ea, 0x24ff,
	0x2776, 0x2793,
	0x2cfd, 0x2cfd,
	0x3007, 0x3007,
	0x3021, 0x3029,
	0x3038, 0x303a,
	0x3192, 0x3195,
	0x3220, 0x3229,
	0x3251, 0x325f,
	0x3280, 0x3289,
	0x32b1, 0x32bf,
	0xa620, 0xa629,
	0xa6e6, 0xa6ef,
	0xa830, 0xa835,
	0xa8d0, 0xa8d9,
	0xa900, 0xa909,
	0xa9d0, 0xa9d9,
	0xaa50, 0xaa59,
	0xabf0, 0xabf9,
	0xff10, 0xff19,
	0x10107, 0x10133,
	0x10140, 0x10178,
	0x1018a, 0x1018a,
	0x10320, 0x10323,
	0x10341, 0x10341,
	0x1034a, 0x1034a,
	0x103d1, 0x103d5,
	0x104a0, 0x104a9,
	0x10858, 0x1085f,
	0x10916, 0x1091b,
	0x10a40, 0x10a47,
	0x10a7d, 0x10a7e,
	0x10b58, 0x10b5f,
	0x10b78, 0x10b7f,
	0x10e60, 0x10e7e,
	0x11052, 0x1106f,
	0x12400, 0x12462,
	0x1d360, 0x1d371,
	0x1d7ce, 0x1d7ff,
	0x1f100, 0x1f10a,
}; /* CR_N */

/* 'Nd': General Category */
#define CR_Nd CR_Digit

/* 'Nl': General Category */
static const OnigCodePoint CR_Nl[] = {
	12,
	0x16ee, 0x16f0,
	0x2160, 0x2182,
	0x2185, 0x2188,
	0x3007, 0x3007,
	0x3021, 0x3029,
	0x3038, 0x303a,
	0xa6e6, 0xa6ef,
	0x10140, 0x10174,
	0x10341, 0x10341,
	0x1034a, 0x1034a,
	0x103d1, 0x103d5,
	0x12400, 0x12462,
}; /* CR_Nl */

/* 'No': General Category */
static const OnigCodePoint CR_No[] = {
	41,
	0x00b2, 0x00b3,
	0x00b9, 0x00b9,
	0x00bc, 0x00be,
	0x09f4, 0x09f9,
	0x0b72, 0x0b77,
	0x0bf0, 0x0bf2,
	0x0c78, 0x0c7e,
	0x0d70, 0x0d75,
	0x0f2a, 0x0f33,
	0x1369, 0x137c,
	0x17f0, 0x17f9,
	0x19da, 0x19da,
	0x2070, 0x2070,
	0x2074, 0x2079,
	0x2080, 0x2089,
	0x2150, 0x215f,
	0x2189, 0x2189,
	0x2460, 0x249b,
	0x24ea, 0x24ff,
	0x2776, 0x2793,
	0x2cfd, 0x2cfd,
	0x3192, 0x3195,
	0x3220, 0x3229,
	0x3251, 0x325f,
	0x3280, 0x3289,
	0x32b1, 0x32bf,
	0xa830, 0xa835,
	0x10107, 0x10133,
	0x10175, 0x10178,
	0x1018a, 0x1018a,
	0x10320, 0x10323,
	0x10858, 0x1085f,
	0x10916, 0x1091b,
	0x10a40, 0x10a47,
	0x10a7d, 0x10a7e,
	0x10b58, 0x10b5f,
	0x10b78, 0x10b7f,
	0x10e60, 0x10e7e,
	0x11052, 0x11065,
	0x1d360, 0x1d371,
	0x1f100, 0x1f10a,
}; /* CR_No */

/* 'P': Major Category */
#define CR_P CR_Punct

/* 'Pc': General Category */
static const OnigCodePoint CR_Pc[] = {
	6,
	0x005f, 0x005f,
	0x203f, 0x2040,
	0x2054, 0x2054,
	0xfe33, 0xfe34,
	0xfe4d, 0xfe4f,
	0xff3f, 0xff3f,
}; /* CR_Pc */

/* 'Pd': General Category */
static const OnigCodePoint CR_Pd[] = {
	15,
	0x002d, 0x002d,
	0x058a, 0x058a,
	0x05be, 0x05be,
	0x1400, 0x1400,
	0x1806, 0x1806,
	0x2010, 0x2015,
	0x2e17, 0x2e17,
	0x2e1a, 0x2e1a,
	0x301c, 0x301c,
	0x3030, 0x3030,
	0x30a0, 0x30a0,
	0xfe31, 0xfe32,
	0xfe58, 0xfe58,
	0xfe63, 0xfe63,
	0xff0d, 0xff0d,
}; /* CR_Pd */

/* 'Pe': General Category */
static const OnigCodePoint CR_Pe[] = {
	70,
	0x0029, 0x0029,
	0x005d, 0x005d,
	0x007d, 0x007d,
	0x0f3b, 0x0f3b,
	0x0f3d, 0x0f3d,
	0x169c, 0x169c,
	0x2046, 0x2046,
	0x207e, 0x207e,
	0x208e, 0x208e,
	0x232a, 0x232a,
	0x2769, 0x2769,
	0x276b, 0x276b,
	0x276d, 0x276d,
	0x276f, 0x276f,
	0x2771, 0x2771,
	0x2773, 0x2773,
	0x2775, 0x2775,
	0x27c6, 0x27c6,
	0x27e7, 0x27e7,
	0x27e9, 0x27e9,
	0x27eb, 0x27eb,
	0x27ed, 0x27ed,
	0x27ef, 0x27ef,
	0x2984, 0x2984,
	0x2986, 0x2986,
	0x2988, 0x2988,
	0x298a, 0x298a,
	0x298c, 0x298c,
	0x298e, 0x298e,
	0x2990, 0x2990,
	0x2992, 0x2992,
	0x2994, 0x2994,
	0x2996, 0x2996,
	0x2998, 0x2998,
	0x29d9, 0x29d9,
	0x29db, 0x29db,
	0x29fd, 0x29fd,
	0x2e23, 0x2e23,
	0x2e25, 0x2e25,
	0x2e27, 0x2e27,
	0x2e29, 0x2e29,
	0x3009, 0x3009,
	0x300b, 0x300b,
	0x300d, 0x300d,
	0x300f, 0x300f,
	0x3011, 0x3011,
	0x3015, 0x3015,
	0x3017, 0x3017,
	0x3019, 0x3019,
	0x301b, 0x301b,
	0x301e, 0x301f,
	0xfd3f, 0xfd3f,
	0xfe18, 0xfe18,
	0xfe36, 0xfe36,
	0xfe38, 0xfe38,
	0xfe3a, 0xfe3a,
	0xfe3c, 0xfe3c,
	0xfe3e, 0xfe3e,
	0xfe40, 0xfe40,
	0xfe42, 0xfe42,
	0xfe44, 0xfe44,
	0xfe48, 0xfe48,
	0xfe5a, 0xfe5a,
	0xfe5c, 0xfe5c,
	0xfe5e, 0xfe5e,
	0xff09, 0xff09,
	0xff3d, 0xff3d,
	0xff5d, 0xff5d,
	0xff60, 0xff60,
	0xff63, 0xff63,
}; /* CR_Pe */

/* 'Pf': General Category */
static const OnigCodePoint CR_Pf[] = {
	10,
	0x00bb, 0x00bb,
	0x2019, 0x2019,
	0x201d, 0x201d,
	0x203a, 0x203a,
	0x2e03, 0x2e03,
	0x2e05, 0x2e05,
	0x2e0a, 0x2e0a,
	0x2e0d, 0x2e0d,
	0x2e1d, 0x2e1d,
	0x2e21, 0x2e21,
}; /* CR_Pf */

/* 'Pi': General Category */
static const OnigCodePoint CR_Pi[] = {
	11,
	0x00ab, 0x00ab,
	0x2018, 0x2018,
	0x201b, 0x201c,
	0x201f, 0x201f,
	0x2039, 0x2039,
	0x2e02, 0x2e02,
	0x2e04, 0x2e04,
	0x2e09, 0x2e09,
	0x2e0c, 0x2e0c,
	0x2e1c, 0x2e1c,
	0x2e20, 0x2e20,
}; /* CR_Pi */

/* 'Po': General Category */
static const OnigCodePoint CR_Po[] = {
	128,
	0x0021, 0x0023,
	0x0025, 0x0027,
	0x002a, 0x002a,
	0x002c, 0x002c,
	0x002e, 0x002f,
	0x003a, 0x003b,
	0x003f, 0x0040,
	0x005c, 0x005c,
	0x00a1, 0x00a1,
	0x00b7, 0x00b7,
	0x00bf, 0x00bf,
	0x037e, 0x037e,
	0x0387, 0x0387,
	0x055a, 0x055f,
	0x0589, 0x0589,
	0x05c0, 0x05c0,
	0x05c3, 0x05c3,
	0x05c6, 0x05c6,
	0x05f3, 0x05f4,
	0x0609, 0x060a,
	0x060c, 0x060d,
	0x061b, 0x061b,
	0x061e, 0x061f,
	0x066a, 0x066d,
	0x06d4, 0x06d4,
	0x0700, 0x070d,
	0x07f7, 0x07f9,
	0x0830, 0x083e,
	0x085e, 0x085e,
	0x0964, 0x0965,
	0x0970, 0x0970,
	0x0df4, 0x0df4,
	0x0e4f, 0x0e4f,
	0x0e5a, 0x0e5b,
	0x0f04, 0x0f12,
	0x0f85, 0x0f85,
	0x0fd0, 0x0fd4,
	0x0fd9, 0x0fda,
	0x104a, 0x104f,
	0x10fb, 0x10fb,
	0x1361, 0x1368,
	0x166d, 0x166e,
	0x16eb, 0x16ed,
	0x1735, 0x1736,
	0x17d4, 0x17d6,
	0x17d8, 0x17da,
	0x1800, 0x1805,
	0x1807, 0x180a,
	0x1944, 0x1945,
	0x1a1e, 0x1a1f,
	0x1aa0, 0x1aa6,
	0x1aa8, 0x1aad,
	0x1b5a, 0x1b60,
	0x1bfc, 0x1bff,
	0x1c3b, 0x1c3f,
	0x1c7e, 0x1c7f,
	0x1cd3, 0x1cd3,
	0x2016, 0x2017,
	0x2020, 0x2027,
	0x2030, 0x2038,
	0x203b, 0x203e,
	0x2041, 0x2043,
	0x2047, 0x2051,
	0x2053, 0x2053,
	0x2055, 0x205e,
	0x2cf9, 0x2cfc,
	0x2cfe, 0x2cff,
	0x2d70, 0x2d70,
	0x2e00, 0x2e01,
	0x2e06, 0x2e08,
	0x2e0b, 0x2e0b,
	0x2e0e, 0x2e16,
	0x2e18, 0x2e19,
	0x2e1b, 0x2e1b,
	0x2e1e, 0x2e1f,
	0x2e2a, 0x2e2e,
	0x2e30, 0x2e31,
	0x3001, 0x3003,
	0x303d, 0x303d,
	0x30fb, 0x30fb,
	0xa4fe, 0xa4ff,
	0xa60d, 0xa60f,
	0xa673, 0xa673,
	0xa67e, 0xa67e,
	0xa6f2, 0xa6f7,
	0xa874, 0xa877,
	0xa8ce, 0xa8cf,
	0xa8f8, 0xa8fa,
	0xa92e, 0xa92f,
	0xa95f, 0xa95f,
	0xa9c1, 0xa9cd,
	0xa9de, 0xa9df,
	0xaa5c, 0xaa5f,
	0xaade, 0xaadf,
	0xabeb, 0xabeb,
	0xfe10, 0xfe16,
	0xfe19, 0xfe19,
	0xfe30, 0xfe30,
	0xfe45, 0xfe46,
	0xfe49, 0xfe4c,
	0xfe50, 0xfe52,
	0xfe54, 0xfe57,
	0xfe5f, 0xfe61,
	0xfe68, 0xfe68,
	0xfe6a, 0xfe6b,
	0xff01, 0xff03,
	0xff05, 0xff07,
	0xff0a, 0xff0a,
	0xff0c, 0xff0c,
	0xff0e, 0xff0f,
	0xff1a, 0xff1b,
	0xff1f, 0xff20,
	0xff3c, 0xff3c,
	0xff61, 0xff61,
	0xff64, 0xff65,
	0x10100, 0x10101,
	0x1039f, 0x1039f,
	0x103d0, 0x103d0,
	0x10857, 0x10857,
	0x1091f, 0x1091f,
	0x1093f, 0x1093f,
	0x10a50, 0x10a58,
	0x10a7f, 0x10a7f,
	0x10b39, 0x10b3f,
	0x11047, 0x1104d,
	0x110bb, 0x110bc,
	0x110be, 0x110c1,
	0x12470, 0x12473,
}; /* CR_Po */

/* 'Ps': General Category */
static const OnigCodePoint CR_Ps[] = {
	72,
	0x0028, 0x0028,
	0x005b, 0x005b,
	0x007b, 0x007b,
	0x0f3a, 0x0f3a,
	0x0f3c, 0x0f3c,
	0x169b, 0x169b,
	0x201a, 0x201a,
	0x201e, 0x201e,
	0x2045, 0x2045,
	0x207d, 0x207d,
	0x208d, 0x208d,
	0x2329, 0x2329,
	0x2768, 0x2768,
	0x276a, 0x276a,
	0x276c, 0x276c,
	0x276e, 0x276e,
	0x2770, 0x2770,
	0x2772, 0x2772,
	0x2774, 0x2774,
	0x27c5, 0x27c5,
	0x27e6, 0x27e6,
	0x27e8, 0x27e8,
	0x27ea, 0x27ea,
	0x27ec, 0x27ec,
	0x27ee, 0x27ee,
	0x2983, 0x2983,
	0x2985, 0x2985,
	0x2987, 0x2987,
	0x2989, 0x2989,
	0x298b, 0x298b,
	0x298d, 0x298d,
	0x298f, 0x298f,
	0x2991, 0x2991,
	0x2993, 0x2993,
	0x2995, 0x2995,
	0x2997, 0x2997,
	0x29d8, 0x29d8,
	0x29da, 0x29da,
	0x29fc, 0x29fc,
	0x2e22, 0x2e22,
	0x2e24, 0x2e24,
	0x2e26, 0x2e26,
	0x2e28, 0x2e28,
	0x3008, 0x3008,
	0x300a, 0x300a,
	0x300c, 0x300c,
	0x300e, 0x300e,
	0x3010, 0x3010,
	0x3014, 0x3014,
	0x3016, 0x3016,
	0x3018, 0x3018,
	0x301a, 0x301a,
	0x301d, 0x301d,
	0xfd3e, 0xfd3e,
	0xfe17, 0xfe17,
	0xfe35, 0xfe35,
	0xfe37, 0xfe37,
	0xfe39, 0xfe39,
	0xfe3b, 0xfe3b,
	0xfe3d, 0xfe3d,
	0xfe3f, 0xfe3f,
	0xfe41, 0xfe41,
	0xfe43, 0xfe43,
	0xfe47, 0xfe47,
	0xfe59, 0xfe59,
	0xfe5b, 0xfe5b,
	0xfe5d, 0xfe5d,
	0xff08, 0xff08,
	0xff3b, 0xff3b,
	0xff5b, 0xff5b,
	0xff5f, 0xff5f,
	0xff62, 0xff62,
}; /* CR_Ps */

/* 'S': Major Category */
static const OnigCodePoint CR_S[] = {
	208,
	0x0024, 0x0024,
	0x002b, 0x002b,
	0x003c, 0x003e,
	0x005e, 0x005e,
	0x0060, 0x0060,
	0x007c, 0x007c,
	0x007e, 0x007e,
	0x00a2, 0x00a9,
	0x00ac, 0x00ac,
	0x00ae, 0x00b1,
	0x00b4, 0x00b4,
	0x00b6, 0x00b6,
	0x00b8, 0x00b8,
	0x00d7, 0x00d7,
	0x00f7, 0x00f7,
	0x02c2, 0x02c5,
	0x02d2, 0x02df,
	0x02e5, 0x02eb,
	0x02ed, 0x02ed,
	0x02ef, 0x02ff,
	0x0375, 0x0375,
	0x0384, 0x0385,
	0x03f6, 0x03f6,
	0x0482, 0x0482,
	0x0606, 0x0608,
	0x060b, 0x060b,
	0x060e, 0x060f,
	0x06de, 0x06de,
	0x06e9, 0x06e9,
	0x06fd, 0x06fe,
	0x07f6, 0x07f6,
	0x09f2, 0x09f3,
	0x09fa, 0x09fb,
	0x0af1, 0x0af1,
	0x0b70, 0x0b70,
	0x0bf3, 0x0bfa,
	0x0c7f, 0x0c7f,
	0x0d79, 0x0d79,
	0x0e3f, 0x0e3f,
	0x0f01, 0x0f03,
	0x0f13, 0x0f17,
	0x0f1a, 0x0f1f,
	0x0f34, 0x0f34,
	0x0f36, 0x0f36,
	0x0f38, 0x0f38,
	0x0fbe, 0x0fc5,
	0x0fc7, 0x0fcc,
	0x0fce, 0x0fcf,
	0x0fd5, 0x0fd8,
	0x109e, 0x109f,
	0x1360, 0x1360,
	0x1390, 0x1399,
	0x17db, 0x17db,
	0x1940, 0x1940,
	0x19de, 0x19ff,
	0x1b61, 0x1b6a,
	0x1b74, 0x1b7c,
	0x1fbd, 0x1fbd,
	0x1fbf, 0x1fc1,
	0x1fcd, 0x1fcf,
	0x1fdd, 0x1fdf,
	0x1fed, 0x1fef,
	0x1ffd, 0x1ffe,
	0x2044, 0x2044,
	0x2052, 0x2052,
	0x207a, 0x207c,
	0x208a, 0x208c,
	0x20a0, 0x20b9,
	0x2100, 0x2101,
	0x2103, 0x2106,
	0x2108, 0x2109,
	0x2114, 0x2114,
	0x2116, 0x2118,
	0x211e, 0x2123,
	0x2125, 0x2125,
	0x2127, 0x2127,
	0x2129, 0x2129,
	0x212e, 0x212e,
	0x213a, 0x213b,
	0x2140, 0x2144,
	0x214a, 0x214d,
	0x214f, 0x214f,
	0x2190, 0x2328,
	0x232b, 0x23f3,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x249c, 0x24e9,
	0x2500, 0x26ff,
	0x2701, 0x2767,
	0x2794, 0x27c4,
	0x27c7, 0x27ca,
	0x27cc, 0x27cc,
	0x27ce, 0x27e5,
	0x27f0, 0x2982,
	0x2999, 0x29d7,
	0x29dc, 0x29fb,
	0x29fe, 0x2b4c,
	0x2b50, 0x2b59,
	0x2ce5, 0x2cea,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3004, 0x3004,
	0x3012, 0x3013,
	0x3020, 0x3020,
	0x3036, 0x3037,
	0x303e, 0x303f,
	0x309b, 0x309c,
	0x3190, 0x3191,
	0x3196, 0x319f,
	0x31c0, 0x31e3,
	0x3200, 0x321e,
	0x322a, 0x3250,
	0x3260, 0x327f,
	0x328a, 0x32b0,
	0x32c0, 0x32fe,
	0x3300, 0x33ff,
	0x4dc0, 0x4dff,
	0xa490, 0xa4c6,
	0xa700, 0xa716,
	0xa720, 0xa721,
	0xa789, 0xa78a,
	0xa828, 0xa82b,
	0xa836, 0xa839,
	0xaa77, 0xaa79,
	0xfb29, 0xfb29,
	0xfbb2, 0xfbc1,
	0xfdfc, 0xfdfd,
	0xfe62, 0xfe62,
	0xfe64, 0xfe66,
	0xfe69, 0xfe69,
	0xff04, 0xff04,
	0xff0b, 0xff0b,
	0xff1c, 0xff1e,
	0xff3e, 0xff3e,
	0xff40, 0xff40,
	0xff5c, 0xff5c,
	0xff5e, 0xff5e,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfffc, 0xfffd,
	0x10102, 0x10102,
	0x10137, 0x1013f,
	0x10179, 0x10189,
	0x10190, 0x1019b,
	0x101d0, 0x101fc,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d164,
	0x1d16a, 0x1d16c,
	0x1d183, 0x1d184,
	0x1d18c, 0x1d1a9,
	0x1d1ae, 0x1d1dd,
	0x1d200, 0x1d241,
	0x1d245, 0x1d245,
	0x1d300, 0x1d356,
	0x1d6c1, 0x1d6c1,
	0x1d6db, 0x1d6db,
	0x1d6fb, 0x1d6fb,
	0x1d715, 0x1d715,
	0x1d735, 0x1d735,
	0x1d74f, 0x1d74f,
	0x1d76f, 0x1d76f,
	0x1d789, 0x1d789,
	0x1d7a9, 0x1d7a9,
	0x1d7c3, 0x1d7c3,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0be,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0df,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f169,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f320,
	0x1f330, 0x1f335,
	0x1f337, 0x1f37c,
	0x1f380, 0x1f393,
	0x1f3a0, 0x1f3c4,
	0x1f3c6, 0x1f3ca,
	0x1f3e0, 0x1f3f0,
	0x1f400, 0x1f43e,
	0x1f440, 0x1f440,
	0x1f442, 0x1f4f7,
	0x1f4f9, 0x1f4fc,
	0x1f500, 0x1f53d,
	0x1f550, 0x1f567,
	0x1f5fb, 0x1f5ff,
	0x1f601, 0x1f610,
	0x1f612, 0x1f614,
	0x1f616, 0x1f616,
	0x1f618, 0x1f618,
	0x1f61a, 0x1f61a,
	0x1f61c, 0x1f61e,
	0x1f620, 0x1f625,
	0x1f628, 0x1f62b,
	0x1f62d, 0x1f62d,
	0x1f630, 0x1f633,
	0x1f635, 0x1f640,
	0x1f645, 0x1f64f,
	0x1f680, 0x1f6c5,
	0x1f700, 0x1f773,
}; /* CR_S */

/* 'Sc': General Category */
static const OnigCodePoint CR_Sc[] = {
	16,
	0x0024, 0x0024,
	0x00a2, 0x00a5,
	0x060b, 0x060b,
	0x09f2, 0x09f3,
	0x09fb, 0x09fb,
	0x0af1, 0x0af1,
	0x0bf9, 0x0bf9,
	0x0e3f, 0x0e3f,
	0x17db, 0x17db,
	0x20a0, 0x20b9,
	0xa838, 0xa838,
	0xfdfc, 0xfdfc,
	0xfe69, 0xfe69,
	0xff04, 0xff04,
	0xffe0, 0xffe1,
	0xffe5, 0xffe6,
}; /* CR_Sc */

/* 'Sk': General Category */
static const OnigCodePoint CR_Sk[] = {
	27,
	0x005e, 0x005e,
	0x0060, 0x0060,
	0x00a8, 0x00a8,
	0x00af, 0x00af,
	0x00b4, 0x00b4,
	0x00b8, 0x00b8,
	0x02c2, 0x02c5,
	0x02d2, 0x02df,
	0x02e5, 0x02eb,
	0x02ed, 0x02ed,
	0x02ef, 0x02ff,
	0x0375, 0x0375,
	0x0384, 0x0385,
	0x1fbd, 0x1fbd,
	0x1fbf, 0x1fc1,
	0x1fcd, 0x1fcf,
	0x1fdd, 0x1fdf,
	0x1fed, 0x1fef,
	0x1ffd, 0x1ffe,
	0x309b, 0x309c,
	0xa700, 0xa716,
	0xa720, 0xa721,
	0xa789, 0xa78a,
	0xfbb2, 0xfbc1,
	0xff3e, 0xff3e,
	0xff40, 0xff40,
	0xffe3, 0xffe3,
}; /* CR_Sk */

/* 'Sm': General Category */
static const OnigCodePoint CR_Sm[] = {
	66,
	0x002b, 0x002b,
	0x003c, 0x003e,
	0x007c, 0x007c,
	0x007e, 0x007e,
	0x00ac, 0x00ac,
	0x00b1, 0x00b1,
	0x00d7, 0x00d7,
	0x00f7, 0x00f7,
	0x03f6, 0x03f6,
	0x0606, 0x0608,
	0x2044, 0x2044,
	0x2052, 0x2052,
	0x207a, 0x207c,
	0x208a, 0x208c,
	0x2118, 0x2118,
	0x2140, 0x2144,
	0x214b, 0x214b,
	0x2190, 0x2194,
	0x219a, 0x219b,
	0x21a0, 0x21a0,
	0x21a3, 0x21a3,
	0x21a6, 0x21a6,
	0x21ae, 0x21ae,
	0x21ce, 0x21cf,
	0x21d2, 0x21d2,
	0x21d4, 0x21d4,
	0x21f4, 0x22ff,
	0x2308, 0x230b,
	0x2320, 0x2321,
	0x237c, 0x237c,
	0x239b, 0x23b3,
	0x23dc, 0x23e1,
	0x25b7, 0x25b7,
	0x25c1, 0x25c1,
	0x25f8, 0x25ff,
	0x266f, 0x266f,
	0x27c0, 0x27c4,
	0x27c7, 0x27ca,
	0x27cc, 0x27cc,
	0x27ce, 0x27e5,
	0x27f0, 0x27ff,
	0x2900, 0x2982,
	0x2999, 0x29d7,
	0x29dc, 0x29fb,
	0x29fe, 0x2aff,
	0x2b30, 0x2b44,
	0x2b47, 0x2b4c,
	0xfb29, 0xfb29,
	0xfe62, 0xfe62,
	0xfe64, 0xfe66,
	0xff0b, 0xff0b,
	0xff1c, 0xff1e,
	0xff5c, 0xff5c,
	0xff5e, 0xff5e,
	0xffe2, 0xffe2,
	0xffe9, 0xffec,
	0x1d6c1, 0x1d6c1,
	0x1d6db, 0x1d6db,
	0x1d6fb, 0x1d6fb,
	0x1d715, 0x1d715,
	0x1d735, 0x1d735,
	0x1d74f, 0x1d74f,
	0x1d76f, 0x1d76f,
	0x1d789, 0x1d789,
	0x1d7a9, 0x1d7a9,
	0x1d7c3, 0x1d7c3,
}; /* CR_Sm */

/* 'So': General Category */
static const OnigCodePoint CR_So[] = {
	164,
	0x00a6, 0x00a7,
	0x00a9, 0x00a9,
	0x00ae, 0x00ae,
	0x00b0, 0x00b0,
	0x00b6, 0x00b6,
	0x0482, 0x0482,
	0x060e, 0x060f,
	0x06de, 0x06de,
	0x06e9, 0x06e9,
	0x06fd, 0x06fe,
	0x07f6, 0x07f6,
	0x09fa, 0x09fa,
	0x0b70, 0x0b70,
	0x0bf3, 0x0bf8,
	0x0bfa, 0x0bfa,
	0x0c7f, 0x0c7f,
	0x0d79, 0x0d79,
	0x0f01, 0x0f03,
	0x0f13, 0x0f17,
	0x0f1a, 0x0f1f,
	0x0f34, 0x0f34,
	0x0f36, 0x0f36,
	0x0f38, 0x0f38,
	0x0fbe, 0x0fc5,
	0x0fc7, 0x0fcc,
	0x0fce, 0x0fcf,
	0x0fd5, 0x0fd8,
	0x109e, 0x109f,
	0x1360, 0x1360,
	0x1390, 0x1399,
	0x1940, 0x1940,
	0x19de, 0x19ff,
	0x1b61, 0x1b6a,
	0x1b74, 0x1b7c,
	0x2100, 0x2101,
	0x2103, 0x2106,
	0x2108, 0x2109,
	0x2114, 0x2114,
	0x2116, 0x2117,
	0x211e, 0x2123,
	0x2125, 0x2125,
	0x2127, 0x2127,
	0x2129, 0x2129,
	0x212e, 0x212e,
	0x213a, 0x213b,
	0x214a, 0x214a,
	0x214c, 0x214d,
	0x214f, 0x214f,
	0x2195, 0x2199,
	0x219c, 0x219f,
	0x21a1, 0x21a2,
	0x21a4, 0x21a5,
	0x21a7, 0x21ad,
	0x21af, 0x21cd,
	0x21d0, 0x21d1,
	0x21d3, 0x21d3,
	0x21d5, 0x21f3,
	0x2300, 0x2307,
	0x230c, 0x231f,
	0x2322, 0x2328,
	0x232b, 0x237b,
	0x237d, 0x239a,
	0x23b4, 0x23db,
	0x23e2, 0x23f3,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x249c, 0x24e9,
	0x2500, 0x25b6,
	0x25b8, 0x25c0,
	0x25c2, 0x25f7,
	0x2600, 0x266e,
	0x2670, 0x26ff,
	0x2701, 0x2767,
	0x2794, 0x27bf,
	0x2800, 0x28ff,
	0x2b00, 0x2b2f,
	0x2b45, 0x2b46,
	0x2b50, 0x2b59,
	0x2ce5, 0x2cea,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3004, 0x3004,
	0x3012, 0x3013,
	0x3020, 0x3020,
	0x3036, 0x3037,
	0x303e, 0x303f,
	0x3190, 0x3191,
	0x3196, 0x319f,
	0x31c0, 0x31e3,
	0x3200, 0x321e,
	0x322a, 0x3250,
	0x3260, 0x327f,
	0x328a, 0x32b0,
	0x32c0, 0x32fe,
	0x3300, 0x33ff,
	0x4dc0, 0x4dff,
	0xa490, 0xa4c6,
	0xa828, 0xa82b,
	0xa836, 0xa837,
	0xa839, 0xa839,
	0xaa77, 0xaa79,
	0xfdfd, 0xfdfd,
	0xffe4, 0xffe4,
	0xffe8, 0xffe8,
	0xffed, 0xffee,
	0xfffc, 0xfffd,
	0x10102, 0x10102,
	0x10137, 0x1013f,
	0x10179, 0x10189,
	0x10190, 0x1019b,
	0x101d0, 0x101fc,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d164,
	0x1d16a, 0x1d16c,
	0x1d183, 0x1d184,
	0x1d18c, 0x1d1a9,
	0x1d1ae, 0x1d1dd,
	0x1d200, 0x1d241,
	0x1d245, 0x1d245,
	0x1d300, 0x1d356,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0be,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0df,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f169,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f320,
	0x1f330, 0x1f335,
	0x1f337, 0x1f37c,
	0x1f380, 0x1f393,
	0x1f3a0, 0x1f3c4,
	0x1f3c6, 0x1f3ca,
	0x1f3e0, 0x1f3f0,
	0x1f400, 0x1f43e,
	0x1f440, 0x1f440,
	0x1f442, 0x1f4f7,
	0x1f4f9, 0x1f4fc,
	0x1f500, 0x1f53d,
	0x1f550, 0x1f567,
	0x1f5fb, 0x1f5ff,
	0x1f601, 0x1f610,
	0x1f612, 0x1f614,
	0x1f616, 0x1f616,
	0x1f618, 0x1f618,
	0x1f61a, 0x1f61a,
	0x1f61c, 0x1f61e,
	0x1f620, 0x1f625,
	0x1f628, 0x1f62b,
	0x1f62d, 0x1f62d,
	0x1f630, 0x1f633,
	0x1f635, 0x1f640,
	0x1f645, 0x1f64f,
	0x1f680, 0x1f6c5,
	0x1f700, 0x1f773,
}; /* CR_So */

/* 'Z': Major Category */
static const OnigCodePoint CR_Z[] = {
	9,
	0x0020, 0x0020,
	0x00a0, 0x00a0,
	0x1680, 0x1680,
	0x180e, 0x180e,
	0x2000, 0x200a,
	0x2028, 0x2029,
	0x202f, 0x202f,
	0x205f, 0x205f,
	0x3000, 0x3000,
}; /* CR_Z */

/* 'Zl': General Category */
static const OnigCodePoint CR_Zl[] = {
	1,
	0x2028, 0x2028,
}; /* CR_Zl */

/* 'Zp': General Category */
static const OnigCodePoint CR_Zp[] = {
	1,
	0x2029, 0x2029,
}; /* CR_Zp */

/* 'Zs': General Category */
static const OnigCodePoint CR_Zs[] = {
	8,
	0x0020, 0x0020,
	0x00a0, 0x00a0,
	0x1680, 0x1680,
	0x180e, 0x180e,
	0x2000, 0x200a,
	0x202f, 0x202f,
	0x205f, 0x205f,
	0x3000, 0x3000,
}; /* CR_Zs */

/* 'Math': Derived Property */
static const OnigCodePoint CR_Math[] = {
	106,
	0x002b, 0x002b,
	0x003c, 0x003e,
	0x005e, 0x005e,
	0x007c, 0x007c,
	0x007e, 0x007e,
	0x00ac, 0x00ac,
	0x00b1, 0x00b1,
	0x00d7, 0x00d7,
	0x00f7, 0x00f7,
	0x03d0, 0x03d2,
	0x03d5, 0x03d5,
	0x03f0, 0x03f1,
	0x03f4, 0x03f6,
	0x0606, 0x0608,
	0x2016, 0x2016,
	0x2032, 0x2034,
	0x2040, 0x2040,
	0x2044, 0x2044,
	0x2052, 0x2052,
	0x2061, 0x2064,
	0x207a, 0x207e,
	0x208a, 0x208e,
	0x20d0, 0x20dc,
	0x20e1, 0x20e1,
	0x20e5, 0x20e6,
	0x20eb, 0x20ef,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2118, 0x211d,
	0x2124, 0x2124,
	0x2128, 0x2129,
	0x212c, 0x212d,
	0x212f, 0x2131,
	0x2133, 0x2138,
	0x213c, 0x2149,
	0x214b, 0x214b,
	0x2190, 0x21a7,
	0x21a9, 0x21ae,
	0x21b0, 0x21b1,
	0x21b6, 0x21b7,
	0x21bc, 0x21db,
	0x21dd, 0x21dd,
	0x21e4, 0x21e5,
	0x21f4, 0x22ff,
	0x2308, 0x230b,
	0x2320, 0x2321,
	0x237c, 0x237c,
	0x239b, 0x23b5,
	0x23b7, 0x23b7,
	0x23d0, 0x23d0,
	0x23dc, 0x23e2,
	0x25a0, 0x25a1,
	0x25ae, 0x25b7,
	0x25bc, 0x25c1,
	0x25c6, 0x25c7,
	0x25ca, 0x25cb,
	0x25cf, 0x25d3,
	0x25e2, 0x25e2,
	0x25e4, 0x25e4,
	0x25e7, 0x25ec,
	0x25f8, 0x25ff,
	0x2605, 0x2606,
	0x2640, 0x2640,
	0x2642, 0x2642,
	0x2660, 0x2663,
	0x266d, 0x266f,
	0x27c0, 0x27ca,
	0x27cc, 0x27cc,
	0x27ce, 0x27ff,
	0x2900, 0x2aff,
	0x2b30, 0x2b44,
	0x2b47, 0x2b4c,
	0xfb29, 0xfb29,
	0xfe61, 0xfe66,
	0xfe68, 0xfe68,
	0xff0b, 0xff0b,
	0xff1c, 0xff1e,
	0xff3c, 0xff3c,
	0xff3e, 0xff3e,
	0xff5c, 0xff5c,
	0xff5e, 0xff5e,
	0xffe2, 0xffe2,
	0xffe9, 0xffec,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
}; /* CR_Math */

/* 'Alphabetic': Derived Property */
#define CR_Alphabetic CR_Alpha

/* 'Lowercase': Derived Property */
#define CR_Lowercase CR_Lower

/* 'Uppercase': Derived Property */
#define CR_Uppercase CR_Upper

/* 'Cased': Derived Property */
static const OnigCodePoint CR_Cased[] = {
	112,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x01ba,
	0x01bc, 0x01bf,
	0x01c4, 0x0293,
	0x0295, 0x02b8,
	0x02c0, 0x02c1,
	0x02e0, 0x02e4,
	0x0345, 0x0345,
	0x0370, 0x0373,
	0x0376, 0x0377,
	0x037a, 0x037d,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x048a, 0x0527,
	0x0531, 0x0556,
	0x0561, 0x0587,
	0x10a0, 0x10c5,
	0x1d00, 0x1dbf,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2090, 0x2094,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x212d,
	0x212f, 0x2134,
	0x2139, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x217f,
	0x2183, 0x2184,
	0x24b6, 0x24e9,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cee,
	0x2d00, 0x2d25,
	0xa640, 0xa66d,
	0xa680, 0xa697,
	0xa722, 0xa787,
	0xa78b, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa7fa,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0x10400, 0x1044f,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
}; /* CR_Cased */

/* 'Case_Ignorable': Derived Property */
static const OnigCodePoint CR_Case_Ignorable[] = {
	277,
	0x0027, 0x0027,
	0x002e, 0x002e,
	0x003a, 0x003a,
	0x005e, 0x005e,
	0x0060, 0x0060,
	0x00a8, 0x00a8,
	0x00ad, 0x00ad,
	0x00af, 0x00af,
	0x00b4, 0x00b4,
	0x00b7, 0x00b8,
	0x02b0, 0x036f,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x0384, 0x0385,
	0x0387, 0x0387,
	0x0483, 0x0489,
	0x0559, 0x0559,
	0x0591, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x05f4, 0x05f4,
	0x0600, 0x0603,
	0x0610, 0x061a,
	0x0640, 0x0640,
	0x064b, 0x065f,
	0x0670, 0x0670,
	0x06d6, 0x06dd,
	0x06df, 0x06e8,
	0x06ea, 0x06ed,
	0x070f, 0x070f,
	0x0711, 0x0711,
	0x0730, 0x074a,
	0x07a6, 0x07b0,
	0x07eb, 0x07f5,
	0x07fa, 0x07fa,
	0x0816, 0x082d,
	0x0859, 0x085b,
	0x0900, 0x0902,
	0x093a, 0x093a,
	0x093c, 0x093c,
	0x0941, 0x0948,
	0x094d, 0x094d,
	0x0951, 0x0957,
	0x0962, 0x0963,
	0x0971, 0x0971,
	0x0981, 0x0981,
	0x09bc, 0x09bc,
	0x09c1, 0x09c4,
	0x09cd, 0x09cd,
	0x09e2, 0x09e3,
	0x0a01, 0x0a02,
	0x0a3c, 0x0a3c,
	0x0a41, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a70, 0x0a71,
	0x0a75, 0x0a75,
	0x0a81, 0x0a82,
	0x0abc, 0x0abc,
	0x0ac1, 0x0ac5,
	0x0ac7, 0x0ac8,
	0x0acd, 0x0acd,
	0x0ae2, 0x0ae3,
	0x0b01, 0x0b01,
	0x0b3c, 0x0b3c,
	0x0b3f, 0x0b3f,
	0x0b41, 0x0b44,
	0x0b4d, 0x0b4d,
	0x0b56, 0x0b56,
	0x0b62, 0x0b63,
	0x0b82, 0x0b82,
	0x0bc0, 0x0bc0,
	0x0bcd, 0x0bcd,
	0x0c3e, 0x0c40,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c62, 0x0c63,
	0x0cbc, 0x0cbc,
	0x0cbf, 0x0cbf,
	0x0cc6, 0x0cc6,
	0x0ccc, 0x0ccd,
	0x0ce2, 0x0ce3,
	0x0d41, 0x0d44,
	0x0d4d, 0x0d4d,
	0x0d62, 0x0d63,
	0x0dca, 0x0dca,
	0x0dd2, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0e31, 0x0e31,
	0x0e34, 0x0e3a,
	0x0e46, 0x0e4e,
	0x0eb1, 0x0eb1,
	0x0eb4, 0x0eb9,
	0x0ebb, 0x0ebc,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0f18, 0x0f19,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f71, 0x0f7e,
	0x0f80, 0x0f84,
	0x0f86, 0x0f87,
	0x0f8d, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fc6, 0x0fc6,
	0x102d, 0x1030,
	0x1032, 0x1037,
	0x1039, 0x103a,
	0x103d, 0x103e,
	0x1058, 0x1059,
	0x105e, 0x1060,
	0x1071, 0x1074,
	0x1082, 0x1082,
	0x1085, 0x1086,
	0x108d, 0x108d,
	0x109d, 0x109d,
	0x10fc, 0x10fc,
	0x135d, 0x135f,
	0x1712, 0x1714,
	0x1732, 0x1734,
	0x1752, 0x1753,
	0x1772, 0x1773,
	0x17b4, 0x17b5,
	0x17b7, 0x17bd,
	0x17c6, 0x17c6,
	0x17c9, 0x17d3,
	0x17d7, 0x17d7,
	0x17dd, 0x17dd,
	0x180b, 0x180d,
	0x1843, 0x1843,
	0x18a9, 0x18a9,
	0x1920, 0x1922,
	0x1927, 0x1928,
	0x1932, 0x1932,
	0x1939, 0x193b,
	0x1a17, 0x1a18,
	0x1a56, 0x1a56,
	0x1a58, 0x1a5e,
	0x1a60, 0x1a60,
	0x1a62, 0x1a62,
	0x1a65, 0x1a6c,
	0x1a73, 0x1a7c,
	0x1a7f, 0x1a7f,
	0x1aa7, 0x1aa7,
	0x1b00, 0x1b03,
	0x1b34, 0x1b34,
	0x1b36, 0x1b3a,
	0x1b3c, 0x1b3c,
	0x1b42, 0x1b42,
	0x1b6b, 0x1b73,
	0x1b80, 0x1b81,
	0x1ba2, 0x1ba5,
	0x1ba8, 0x1ba9,
	0x1be6, 0x1be6,
	0x1be8, 0x1be9,
	0x1bed, 0x1bed,
	0x1bef, 0x1bf1,
	0x1c2c, 0x1c33,
	0x1c36, 0x1c37,
	0x1c78, 0x1c7d,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1ce0,
	0x1ce2, 0x1ce8,
	0x1ced, 0x1ced,
	0x1d2c, 0x1d61,
	0x1d78, 0x1d78,
	0x1d9b, 0x1de6,
	0x1dfc, 0x1dff,
	0x1fbd, 0x1fbd,
	0x1fbf, 0x1fc1,
	0x1fcd, 0x1fcf,
	0x1fdd, 0x1fdf,
	0x1fed, 0x1fef,
	0x1ffd, 0x1ffe,
	0x200b, 0x200f,
	0x2018, 0x2019,
	0x2024, 0x2024,
	0x2027, 0x2027,
	0x202a, 0x202e,
	0x2060, 0x2064,
	0x206a, 0x206f,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x20d0, 0x20f0,
	0x2c7d, 0x2c7d,
	0x2cef, 0x2cf1,
	0x2d6f, 0x2d6f,
	0x2d7f, 0x2d7f,
	0x2de0, 0x2dff,
	0x2e2f, 0x2e2f,
	0x3005, 0x3005,
	0x302a, 0x302f,
	0x3031, 0x3035,
	0x303b, 0x303b,
	0x3099, 0x309e,
	0x30fc, 0x30fe,
	0xa015, 0xa015,
	0xa4f8, 0xa4fd,
	0xa60c, 0xa60c,
	0xa66f, 0xa672,
	0xa67c, 0xa67d,
	0xa67f, 0xa67f,
	0xa6f0, 0xa6f1,
	0xa700, 0xa721,
	0xa770, 0xa770,
	0xa788, 0xa78a,
	0xa802, 0xa802,
	0xa806, 0xa806,
	0xa80b, 0xa80b,
	0xa825, 0xa826,
	0xa8c4, 0xa8c4,
	0xa8e0, 0xa8f1,
	0xa926, 0xa92d,
	0xa947, 0xa951,
	0xa980, 0xa982,
	0xa9b3, 0xa9b3,
	0xa9b6, 0xa9b9,
	0xa9bc, 0xa9bc,
	0xa9cf, 0xa9cf,
	0xaa29, 0xaa2e,
	0xaa31, 0xaa32,
	0xaa35, 0xaa36,
	0xaa43, 0xaa43,
	0xaa4c, 0xaa4c,
	0xaa70, 0xaa70,
	0xaab0, 0xaab0,
	0xaab2, 0xaab4,
	0xaab7, 0xaab8,
	0xaabe, 0xaabf,
	0xaac1, 0xaac1,
	0xaadd, 0xaadd,
	0xabe5, 0xabe5,
	0xabe8, 0xabe8,
	0xabed, 0xabed,
	0xfb1e, 0xfb1e,
	0xfbb2, 0xfbc1,
	0xfe00, 0xfe0f,
	0xfe13, 0xfe13,
	0xfe20, 0xfe26,
	0xfe52, 0xfe52,
	0xfe55, 0xfe55,
	0xfeff, 0xfeff,
	0xff07, 0xff07,
	0xff0e, 0xff0e,
	0xff1a, 0xff1a,
	0xff3e, 0xff3e,
	0xff40, 0xff40,
	0xff70, 0xff70,
	0xff9e, 0xff9f,
	0xffe3, 0xffe3,
	0xfff9, 0xfffb,
	0x101fd, 0x101fd,
	0x10a01, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a0f,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a3f,
	0x11001, 0x11001,
	0x11038, 0x11046,
	0x11080, 0x11081,
	0x110b3, 0x110b6,
	0x110b9, 0x110ba,
	0x110bd, 0x110bd,
	0x1d167, 0x1d169,
	0x1d173, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1d242, 0x1d244,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
}; /* CR_Case_Ignorable */

/* 'Changes_When_Lowercased': Derived Property */
static const OnigCodePoint CR_Changes_When_Lowercased[] = {
	566,
	0x0041, 0x005a,
	0x00c0, 0x00d6,
	0x00d8, 0x00de,
	0x0100, 0x0100,
	0x0102, 0x0102,
	0x0104, 0x0104,
	0x0106, 0x0106,
	0x0108, 0x0108,
	0x010a, 0x010a,
	0x010c, 0x010c,
	0x010e, 0x010e,
	0x0110, 0x0110,
	0x0112, 0x0112,
	0x0114, 0x0114,
	0x0116, 0x0116,
	0x0118, 0x0118,
	0x011a, 0x011a,
	0x011c, 0x011c,
	0x011e, 0x011e,
	0x0120, 0x0120,
	0x0122, 0x0122,
	0x0124, 0x0124,
	0x0126, 0x0126,
	0x0128, 0x0128,
	0x012a, 0x012a,
	0x012c, 0x012c,
	0x012e, 0x012e,
	0x0130, 0x0130,
	0x0132, 0x0132,
	0x0134, 0x0134,
	0x0136, 0x0136,
	0x0139, 0x0139,
	0x013b, 0x013b,
	0x013d, 0x013d,
	0x013f, 0x013f,
	0x0141, 0x0141,
	0x0143, 0x0143,
	0x0145, 0x0145,
	0x0147, 0x0147,
	0x014a, 0x014a,
	0x014c, 0x014c,
	0x014e, 0x014e,
	0x0150, 0x0150,
	0x0152, 0x0152,
	0x0154, 0x0154,
	0x0156, 0x0156,
	0x0158, 0x0158,
	0x015a, 0x015a,
	0x015c, 0x015c,
	0x015e, 0x015e,
	0x0160, 0x0160,
	0x0162, 0x0162,
	0x0164, 0x0164,
	0x0166, 0x0166,
	0x0168, 0x0168,
	0x016a, 0x016a,
	0x016c, 0x016c,
	0x016e, 0x016e,
	0x0170, 0x0170,
	0x0172, 0x0172,
	0x0174, 0x0174,
	0x0176, 0x0176,
	0x0178, 0x0179,
	0x017b, 0x017b,
	0x017d, 0x017d,
	0x0181, 0x0182,
	0x0184, 0x0184,
	0x0186, 0x0187,
	0x0189, 0x018b,
	0x018e, 0x0191,
	0x0193, 0x0194,
	0x0196, 0x0198,
	0x019c, 0x019d,
	0x019f, 0x01a0,
	0x01a2, 0x01a2,
	0x01a4, 0x01a4,
	0x01a6, 0x01a7,
	0x01a9, 0x01a9,
	0x01ac, 0x01ac,
	0x01ae, 0x01af,
	0x01b1, 0x01b3,
	0x01b5, 0x01b5,
	0x01b7, 0x01b8,
	0x01bc, 0x01bc,
	0x01c4, 0x01c5,
	0x01c7, 0x01c8,
	0x01ca, 0x01cb,
	0x01cd, 0x01cd,
	0x01cf, 0x01cf,
	0x01d1, 0x01d1,
	0x01d3, 0x01d3,
	0x01d5, 0x01d5,
	0x01d7, 0x01d7,
	0x01d9, 0x01d9,
	0x01db, 0x01db,
	0x01de, 0x01de,
	0x01e0, 0x01e0,
	0x01e2, 0x01e2,
	0x01e4, 0x01e4,
	0x01e6, 0x01e6,
	0x01e8, 0x01e8,
	0x01ea, 0x01ea,
	0x01ec, 0x01ec,
	0x01ee, 0x01ee,
	0x01f1, 0x01f2,
	0x01f4, 0x01f4,
	0x01f6, 0x01f8,
	0x01fa, 0x01fa,
	0x01fc, 0x01fc,
	0x01fe, 0x01fe,
	0x0200, 0x0200,
	0x0202, 0x0202,
	0x0204, 0x0204,
	0x0206, 0x0206,
	0x0208, 0x0208,
	0x020a, 0x020a,
	0x020c, 0x020c,
	0x020e, 0x020e,
	0x0210, 0x0210,
	0x0212, 0x0212,
	0x0214, 0x0214,
	0x0216, 0x0216,
	0x0218, 0x0218,
	0x021a, 0x021a,
	0x021c, 0x021c,
	0x021e, 0x021e,
	0x0220, 0x0220,
	0x0222, 0x0222,
	0x0224, 0x0224,
	0x0226, 0x0226,
	0x0228, 0x0228,
	0x022a, 0x022a,
	0x022c, 0x022c,
	0x022e, 0x022e,
	0x0230, 0x0230,
	0x0232, 0x0232,
	0x023a, 0x023b,
	0x023d, 0x023e,
	0x0241, 0x0241,
	0x0243, 0x0246,
	0x0248, 0x0248,
	0x024a, 0x024a,
	0x024c, 0x024c,
	0x024e, 0x024e,
	0x0370, 0x0370,
	0x0372, 0x0372,
	0x0376, 0x0376,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x038f,
	0x0391, 0x03a1,
	0x03a3, 0x03ab,
	0x03cf, 0x03cf,
	0x03d8, 0x03d8,
	0x03da, 0x03da,
	0x03dc, 0x03dc,
	0x03de, 0x03de,
	0x03e0, 0x03e0,
	0x03e2, 0x03e2,
	0x03e4, 0x03e4,
	0x03e6, 0x03e6,
	0x03e8, 0x03e8,
	0x03ea, 0x03ea,
	0x03ec, 0x03ec,
	0x03ee, 0x03ee,
	0x03f4, 0x03f4,
	0x03f7, 0x03f7,
	0x03f9, 0x03fa,
	0x03fd, 0x042f,
	0x0460, 0x0460,
	0x0462, 0x0462,
	0x0464, 0x0464,
	0x0466, 0x0466,
	0x0468, 0x0468,
	0x046a, 0x046a,
	0x046c, 0x046c,
	0x046e, 0x046e,
	0x0470, 0x0470,
	0x0472, 0x0472,
	0x0474, 0x0474,
	0x0476, 0x0476,
	0x0478, 0x0478,
	0x047a, 0x047a,
	0x047c, 0x047c,
	0x047e, 0x047e,
	0x0480, 0x0480,
	0x048a, 0x048a,
	0x048c, 0x048c,
	0x048e, 0x048e,
	0x0490, 0x0490,
	0x0492, 0x0492,
	0x0494, 0x0494,
	0x0496, 0x0496,
	0x0498, 0x0498,
	0x049a, 0x049a,
	0x049c, 0x049c,
	0x049e, 0x049e,
	0x04a0, 0x04a0,
	0x04a2, 0x04a2,
	0x04a4, 0x04a4,
	0x04a6, 0x04a6,
	0x04a8, 0x04a8,
	0x04aa, 0x04aa,
	0x04ac, 0x04ac,
	0x04ae, 0x04ae,
	0x04b0, 0x04b0,
	0x04b2, 0x04b2,
	0x04b4, 0x04b4,
	0x04b6, 0x04b6,
	0x04b8, 0x04b8,
	0x04ba, 0x04ba,
	0x04bc, 0x04bc,
	0x04be, 0x04be,
	0x04c0, 0x04c1,
	0x04c3, 0x04c3,
	0x04c5, 0x04c5,
	0x04c7, 0x04c7,
	0x04c9, 0x04c9,
	0x04cb, 0x04cb,
	0x04cd, 0x04cd,
	0x04d0, 0x04d0,
	0x04d2, 0x04d2,
	0x04d4, 0x04d4,
	0x04d6, 0x04d6,
	0x04d8, 0x04d8,
	0x04da, 0x04da,
	0x04dc, 0x04dc,
	0x04de, 0x04de,
	0x04e0, 0x04e0,
	0x04e2, 0x04e2,
	0x04e4, 0x04e4,
	0x04e6, 0x04e6,
	0x04e8, 0x04e8,
	0x04ea, 0x04ea,
	0x04ec, 0x04ec,
	0x04ee, 0x04ee,
	0x04f0, 0x04f0,
	0x04f2, 0x04f2,
	0x04f4, 0x04f4,
	0x04f6, 0x04f6,
	0x04f8, 0x04f8,
	0x04fa, 0x04fa,
	0x04fc, 0x04fc,
	0x04fe, 0x04fe,
	0x0500, 0x0500,
	0x0502, 0x0502,
	0x0504, 0x0504,
	0x0506, 0x0506,
	0x0508, 0x0508,
	0x050a, 0x050a,
	0x050c, 0x050c,
	0x050e, 0x050e,
	0x0510, 0x0510,
	0x0512, 0x0512,
	0x0514, 0x0514,
	0x0516, 0x0516,
	0x0518, 0x0518,
	0x051a, 0x051a,
	0x051c, 0x051c,
	0x051e, 0x051e,
	0x0520, 0x0520,
	0x0522, 0x0522,
	0x0524, 0x0524,
	0x0526, 0x0526,
	0x0531, 0x0556,
	0x10a0, 0x10c5,
	0x1e00, 0x1e00,
	0x1e02, 0x1e02,
	0x1e04, 0x1e04,
	0x1e06, 0x1e06,
	0x1e08, 0x1e08,
	0x1e0a, 0x1e0a,
	0x1e0c, 0x1e0c,
	0x1e0e, 0x1e0e,
	0x1e10, 0x1e10,
	0x1e12, 0x1e12,
	0x1e14, 0x1e14,
	0x1e16, 0x1e16,
	0x1e18, 0x1e18,
	0x1e1a, 0x1e1a,
	0x1e1c, 0x1e1c,
	0x1e1e, 0x1e1e,
	0x1e20, 0x1e20,
	0x1e22, 0x1e22,
	0x1e24, 0x1e24,
	0x1e26, 0x1e26,
	0x1e28, 0x1e28,
	0x1e2a, 0x1e2a,
	0x1e2c, 0x1e2c,
	0x1e2e, 0x1e2e,
	0x1e30, 0x1e30,
	0x1e32, 0x1e32,
	0x1e34, 0x1e34,
	0x1e36, 0x1e36,
	0x1e38, 0x1e38,
	0x1e3a, 0x1e3a,
	0x1e3c, 0x1e3c,
	0x1e3e, 0x1e3e,
	0x1e40, 0x1e40,
	0x1e42, 0x1e42,
	0x1e44, 0x1e44,
	0x1e46, 0x1e46,
	0x1e48, 0x1e48,
	0x1e4a, 0x1e4a,
	0x1e4c, 0x1e4c,
	0x1e4e, 0x1e4e,
	0x1e50, 0x1e50,
	0x1e52, 0x1e52,
	0x1e54, 0x1e54,
	0x1e56, 0x1e56,
	0x1e58, 0x1e58,
	0x1e5a, 0x1e5a,
	0x1e5c, 0x1e5c,
	0x1e5e, 0x1e5e,
	0x1e60, 0x1e60,
	0x1e62, 0x1e62,
	0x1e64, 0x1e64,
	0x1e66, 0x1e66,
	0x1e68, 0x1e68,
	0x1e6a, 0x1e6a,
	0x1e6c, 0x1e6c,
	0x1e6e, 0x1e6e,
	0x1e70, 0x1e70,
	0x1e72, 0x1e72,
	0x1e74, 0x1e74,
	0x1e76, 0x1e76,
	0x1e78, 0x1e78,
	0x1e7a, 0x1e7a,
	0x1e7c, 0x1e7c,
	0x1e7e, 0x1e7e,
	0x1e80, 0x1e80,
	0x1e82, 0x1e82,
	0x1e84, 0x1e84,
	0x1e86, 0x1e86,
	0x1e88, 0x1e88,
	0x1e8a, 0x1e8a,
	0x1e8c, 0x1e8c,
	0x1e8e, 0x1e8e,
	0x1e90, 0x1e90,
	0x1e92, 0x1e92,
	0x1e94, 0x1e94,
	0x1e9e, 0x1e9e,
	0x1ea0, 0x1ea0,
	0x1ea2, 0x1ea2,
	0x1ea4, 0x1ea4,
	0x1ea6, 0x1ea6,
	0x1ea8, 0x1ea8,
	0x1eaa, 0x1eaa,
	0x1eac, 0x1eac,
	0x1eae, 0x1eae,
	0x1eb0, 0x1eb0,
	0x1eb2, 0x1eb2,
	0x1eb4, 0x1eb4,
	0x1eb6, 0x1eb6,
	0x1eb8, 0x1eb8,
	0x1eba, 0x1eba,
	0x1ebc, 0x1ebc,
	0x1ebe, 0x1ebe,
	0x1ec0, 0x1ec0,
	0x1ec2, 0x1ec2,
	0x1ec4, 0x1ec4,
	0x1ec6, 0x1ec6,
	0x1ec8, 0x1ec8,
	0x1eca, 0x1eca,
	0x1ecc, 0x1ecc,
	0x1ece, 0x1ece,
	0x1ed0, 0x1ed0,
	0x1ed2, 0x1ed2,
	0x1ed4, 0x1ed4,
	0x1ed6, 0x1ed6,
	0x1ed8, 0x1ed8,
	0x1eda, 0x1eda,
	0x1edc, 0x1edc,
	0x1ede, 0x1ede,
	0x1ee0, 0x1ee0,
	0x1ee2, 0x1ee2,
	0x1ee4, 0x1ee4,
	0x1ee6, 0x1ee6,
	0x1ee8, 0x1ee8,
	0x1eea, 0x1eea,
	0x1eec, 0x1eec,
	0x1eee, 0x1eee,
	0x1ef0, 0x1ef0,
	0x1ef2, 0x1ef2,
	0x1ef4, 0x1ef4,
	0x1ef6, 0x1ef6,
	0x1ef8, 0x1ef8,
	0x1efa, 0x1efa,
	0x1efc, 0x1efc,
	0x1efe, 0x1efe,
	0x1f08, 0x1f0f,
	0x1f18, 0x1f1d,
	0x1f28, 0x1f2f,
	0x1f38, 0x1f3f,
	0x1f48, 0x1f4d,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f5f,
	0x1f68, 0x1f6f,
	0x1f88, 0x1f8f,
	0x1f98, 0x1f9f,
	0x1fa8, 0x1faf,
	0x1fb8, 0x1fbc,
	0x1fc8, 0x1fcc,
	0x1fd8, 0x1fdb,
	0x1fe8, 0x1fec,
	0x1ff8, 0x1ffc,
	0x2126, 0x2126,
	0x212a, 0x212b,
	0x2132, 0x2132,
	0x2160, 0x216f,
	0x2183, 0x2183,
	0x24b6, 0x24cf,
	0x2c00, 0x2c2e,
	0x2c60, 0x2c60,
	0x2c62, 0x2c64,
	0x2c67, 0x2c67,
	0x2c69, 0x2c69,
	0x2c6b, 0x2c6b,
	0x2c6d, 0x2c70,
	0x2c72, 0x2c72,
	0x2c75, 0x2c75,
	0x2c7e, 0x2c80,
	0x2c82, 0x2c82,
	0x2c84, 0x2c84,
	0x2c86, 0x2c86,
	0x2c88, 0x2c88,
	0x2c8a, 0x2c8a,
	0x2c8c, 0x2c8c,
	0x2c8e, 0x2c8e,
	0x2c90, 0x2c90,
	0x2c92, 0x2c92,
	0x2c94, 0x2c94,
	0x2c96, 0x2c96,
	0x2c98, 0x2c98,
	0x2c9a, 0x2c9a,
	0x2c9c, 0x2c9c,
	0x2c9e, 0x2c9e,
	0x2ca0, 0x2ca0,
	0x2ca2, 0x2ca2,
	0x2ca4, 0x2ca4,
	0x2ca6, 0x2ca6,
	0x2ca8, 0x2ca8,
	0x2caa, 0x2caa,
	0x2cac, 0x2cac,
	0x2cae, 0x2cae,
	0x2cb0, 0x2cb0,
	0x2cb2, 0x2cb2,
	0x2cb4, 0x2cb4,
	0x2cb6, 0x2cb6,
	0x2cb8, 0x2cb8,
	0x2cba, 0x2cba,
	0x2cbc, 0x2cbc,
	0x2cbe, 0x2cbe,
	0x2cc0, 0x2cc0,
	0x2cc2, 0x2cc2,
	0x2cc4, 0x2cc4,
	0x2cc6, 0x2cc6,
	0x2cc8, 0x2cc8,
	0x2cca, 0x2cca,
	0x2ccc, 0x2ccc,
	0x2cce, 0x2cce,
	0x2cd0, 0x2cd0,
	0x2cd2, 0x2cd2,
	0x2cd4, 0x2cd4,
	0x2cd6, 0x2cd6,
	0x2cd8, 0x2cd8,
	0x2cda, 0x2cda,
	0x2cdc, 0x2cdc,
	0x2cde, 0x2cde,
	0x2ce0, 0x2ce0,
	0x2ce2, 0x2ce2,
	0x2ceb, 0x2ceb,
	0x2ced, 0x2ced,
	0xa640, 0xa640,
	0xa642, 0xa642,
	0xa644, 0xa644,
	0xa646, 0xa646,
	0xa648, 0xa648,
	0xa64a, 0xa64a,
	0xa64c, 0xa64c,
	0xa64e, 0xa64e,
	0xa650, 0xa650,
	0xa652, 0xa652,
	0xa654, 0xa654,
	0xa656, 0xa656,
	0xa658, 0xa658,
	0xa65a, 0xa65a,
	0xa65c, 0xa65c,
	0xa65e, 0xa65e,
	0xa660, 0xa660,
	0xa662, 0xa662,
	0xa664, 0xa664,
	0xa666, 0xa666,
	0xa668, 0xa668,
	0xa66a, 0xa66a,
	0xa66c, 0xa66c,
	0xa680, 0xa680,
	0xa682, 0xa682,
	0xa684, 0xa684,
	0xa686, 0xa686,
	0xa688, 0xa688,
	0xa68a, 0xa68a,
	0xa68c, 0xa68c,
	0xa68e, 0xa68e,
	0xa690, 0xa690,
	0xa692, 0xa692,
	0xa694, 0xa694,
	0xa696, 0xa696,
	0xa722, 0xa722,
	0xa724, 0xa724,
	0xa726, 0xa726,
	0xa728, 0xa728,
	0xa72a, 0xa72a,
	0xa72c, 0xa72c,
	0xa72e, 0xa72e,
	0xa732, 0xa732,
	0xa734, 0xa734,
	0xa736, 0xa736,
	0xa738, 0xa738,
	0xa73a, 0xa73a,
	0xa73c, 0xa73c,
	0xa73e, 0xa73e,
	0xa740, 0xa740,
	0xa742, 0xa742,
	0xa744, 0xa744,
	0xa746, 0xa746,
	0xa748, 0xa748,
	0xa74a, 0xa74a,
	0xa74c, 0xa74c,
	0xa74e, 0xa74e,
	0xa750, 0xa750,
	0xa752, 0xa752,
	0xa754, 0xa754,
	0xa756, 0xa756,
	0xa758, 0xa758,
	0xa75a, 0xa75a,
	0xa75c, 0xa75c,
	0xa75e, 0xa75e,
	0xa760, 0xa760,
	0xa762, 0xa762,
	0xa764, 0xa764,
	0xa766, 0xa766,
	0xa768, 0xa768,
	0xa76a, 0xa76a,
	0xa76c, 0xa76c,
	0xa76e, 0xa76e,
	0xa779, 0xa779,
	0xa77b, 0xa77b,
	0xa77d, 0xa77e,
	0xa780, 0xa780,
	0xa782, 0xa782,
	0xa784, 0xa784,
	0xa786, 0xa786,
	0xa78b, 0xa78b,
	0xa78d, 0xa78d,
	0xa790, 0xa790,
	0xa7a0, 0xa7a0,
	0xa7a2, 0xa7a2,
	0xa7a4, 0xa7a4,
	0xa7a6, 0xa7a6,
	0xa7a8, 0xa7a8,
	0xff21, 0xff3a,
	0x10400, 0x10427,
}; /* CR_Changes_When_Lowercased */

/* 'Changes_When_Uppercased': Derived Property */
static const OnigCodePoint CR_Changes_When_Uppercased[] = {
	582,
	0x0061, 0x007a,
	0x00b5, 0x00b5,
	0x00df, 0x00f6,
	0x00f8, 0x00ff,
	0x0101, 0x0101,
	0x0103, 0x0103,
	0x0105, 0x0105,
	0x0107, 0x0107,
	0x0109, 0x0109,
	0x010b, 0x010b,
	0x010d, 0x010d,
	0x010f, 0x010f,
	0x0111, 0x0111,
	0x0113, 0x0113,
	0x0115, 0x0115,
	0x0117, 0x0117,
	0x0119, 0x0119,
	0x011b, 0x011b,
	0x011d, 0x011d,
	0x011f, 0x011f,
	0x0121, 0x0121,
	0x0123, 0x0123,
	0x0125, 0x0125,
	0x0127, 0x0127,
	0x0129, 0x0129,
	0x012b, 0x012b,
	0x012d, 0x012d,
	0x012f, 0x012f,
	0x0131, 0x0131,
	0x0133, 0x0133,
	0x0135, 0x0135,
	0x0137, 0x0137,
	0x013a, 0x013a,
	0x013c, 0x013c,
	0x013e, 0x013e,
	0x0140, 0x0140,
	0x0142, 0x0142,
	0x0144, 0x0144,
	0x0146, 0x0146,
	0x0148, 0x0149,
	0x014b, 0x014b,
	0x014d, 0x014d,
	0x014f, 0x014f,
	0x0151, 0x0151,
	0x0153, 0x0153,
	0x0155, 0x0155,
	0x0157, 0x0157,
	0x0159, 0x0159,
	0x015b, 0x015b,
	0x015d, 0x015d,
	0x015f, 0x015f,
	0x0161, 0x0161,
	0x0163, 0x0163,
	0x0165, 0x0165,
	0x0167, 0x0167,
	0x0169, 0x0169,
	0x016b, 0x016b,
	0x016d, 0x016d,
	0x016f, 0x016f,
	0x0171, 0x0171,
	0x0173, 0x0173,
	0x0175, 0x0175,
	0x0177, 0x0177,
	0x017a, 0x017a,
	0x017c, 0x017c,
	0x017e, 0x0180,
	0x0183, 0x0183,
	0x0185, 0x0185,
	0x0188, 0x0188,
	0x018c, 0x018c,
	0x0192, 0x0192,
	0x0195, 0x0195,
	0x0199, 0x019a,
	0x019e, 0x019e,
	0x01a1, 0x01a1,
	0x01a3, 0x01a3,
	0x01a5, 0x01a5,
	0x01a8, 0x01a8,
	0x01ad, 0x01ad,
	0x01b0, 0x01b0,
	0x01b4, 0x01b4,
	0x01b6, 0x01b6,
	0x01b9, 0x01b9,
	0x01bd, 0x01bd,
	0x01bf, 0x01bf,
	0x01c5, 0x01c6,
	0x01c8, 0x01c9,
	0x01cb, 0x01cc,
	0x01ce, 0x01ce,
	0x01d0, 0x01d0,
	0x01d2, 0x01d2,
	0x01d4, 0x01d4,
	0x01d6, 0x01d6,
	0x01d8, 0x01d8,
	0x01da, 0x01da,
	0x01dc, 0x01dd,
	0x01df, 0x01df,
	0x01e1, 0x01e1,
	0x01e3, 0x01e3,
	0x01e5, 0x01e5,
	0x01e7, 0x01e7,
	0x01e9, 0x01e9,
	0x01eb, 0x01eb,
	0x01ed, 0x01ed,
	0x01ef, 0x01f0,
	0x01f2, 0x01f3,
	0x01f5, 0x01f5,
	0x01f9, 0x01f9,
	0x01fb, 0x01fb,
	0x01fd, 0x01fd,
	0x01ff, 0x01ff,
	0x0201, 0x0201,
	0x0203, 0x0203,
	0x0205, 0x0205,
	0x0207, 0x0207,
	0x0209, 0x0209,
	0x020b, 0x020b,
	0x020d, 0x020d,
	0x020f, 0x020f,
	0x0211, 0x0211,
	0x0213, 0x0213,
	0x0215, 0x0215,
	0x0217, 0x0217,
	0x0219, 0x0219,
	0x021b, 0x021b,
	0x021d, 0x021d,
	0x021f, 0x021f,
	0x0223, 0x0223,
	0x0225, 0x0225,
	0x0227, 0x0227,
	0x0229, 0x0229,
	0x022b, 0x022b,
	0x022d, 0x022d,
	0x022f, 0x022f,
	0x0231, 0x0231,
	0x0233, 0x0233,
	0x023c, 0x023c,
	0x023f, 0x0240,
	0x0242, 0x0242,
	0x0247, 0x0247,
	0x0249, 0x0249,
	0x024b, 0x024b,
	0x024d, 0x024d,
	0x024f, 0x0254,
	0x0256, 0x0257,
	0x0259, 0x0259,
	0x025b, 0x025b,
	0x0260, 0x0260,
	0x0263, 0x0263,
	0x0265, 0x0265,
	0x0268, 0x0269,
	0x026b, 0x026b,
	0x026f, 0x026f,
	0x0271, 0x0272,
	0x0275, 0x0275,
	0x027d, 0x027d,
	0x0280, 0x0280,
	0x0283, 0x0283,
	0x0288, 0x028c,
	0x0292, 0x0292,
	0x0345, 0x0345,
	0x0371, 0x0371,
	0x0373, 0x0373,
	0x0377, 0x0377,
	0x037b, 0x037d,
	0x0390, 0x0390,
	0x03ac, 0x03ce,
	0x03d0, 0x03d1,
	0x03d5, 0x03d7,
	0x03d9, 0x03d9,
	0x03db, 0x03db,
	0x03dd, 0x03dd,
	0x03df, 0x03df,
	0x03e1, 0x03e1,
	0x03e3, 0x03e3,
	0x03e5, 0x03e5,
	0x03e7, 0x03e7,
	0x03e9, 0x03e9,
	0x03eb, 0x03eb,
	0x03ed, 0x03ed,
	0x03ef, 0x03f2,
	0x03f5, 0x03f5,
	0x03f8, 0x03f8,
	0x03fb, 0x03fb,
	0x0430, 0x045f,
	0x0461, 0x0461,
	0x0463, 0x0463,
	0x0465, 0x0465,
	0x0467, 0x0467,
	0x0469, 0x0469,
	0x046b, 0x046b,
	0x046d, 0x046d,
	0x046f, 0x046f,
	0x0471, 0x0471,
	0x0473, 0x0473,
	0x0475, 0x0475,
	0x0477, 0x0477,
	0x0479, 0x0479,
	0x047b, 0x047b,
	0x047d, 0x047d,
	0x047f, 0x047f,
	0x0481, 0x0481,
	0x048b, 0x048b,
	0x048d, 0x048d,
	0x048f, 0x048f,
	0x0491, 0x0491,
	0x0493, 0x0493,
	0x0495, 0x0495,
	0x0497, 0x0497,
	0x0499, 0x0499,
	0x049b, 0x049b,
	0x049d, 0x049d,
	0x049f, 0x049f,
	0x04a1, 0x04a1,
	0x04a3, 0x04a3,
	0x04a5, 0x04a5,
	0x04a7, 0x04a7,
	0x04a9, 0x04a9,
	0x04ab, 0x04ab,
	0x04ad, 0x04ad,
	0x04af, 0x04af,
	0x04b1, 0x04b1,
	0x04b3, 0x04b3,
	0x04b5, 0x04b5,
	0x04b7, 0x04b7,
	0x04b9, 0x04b9,
	0x04bb, 0x04bb,
	0x04bd, 0x04bd,
	0x04bf, 0x04bf,
	0x04c2, 0x04c2,
	0x04c4, 0x04c4,
	0x04c6, 0x04c6,
	0x04c8, 0x04c8,
	0x04ca, 0x04ca,
	0x04cc, 0x04cc,
	0x04ce, 0x04cf,
	0x04d1, 0x04d1,
	0x04d3, 0x04d3,
	0x04d5, 0x04d5,
	0x04d7, 0x04d7,
	0x04d9, 0x04d9,
	0x04db, 0x04db,
	0x04dd, 0x04dd,
	0x04df, 0x04df,
	0x04e1, 0x04e1,
	0x04e3, 0x04e3,
	0x04e5, 0x04e5,
	0x04e7, 0x04e7,
	0x04e9, 0x04e9,
	0x04eb, 0x04eb,
	0x04ed, 0x04ed,
	0x04ef, 0x04ef,
	0x04f1, 0x04f1,
	0x04f3, 0x04f3,
	0x04f5, 0x04f5,
	0x04f7, 0x04f7,
	0x04f9, 0x04f9,
	0x04fb, 0x04fb,
	0x04fd, 0x04fd,
	0x04ff, 0x04ff,
	0x0501, 0x0501,
	0x0503, 0x0503,
	0x0505, 0x0505,
	0x0507, 0x0507,
	0x0509, 0x0509,
	0x050b, 0x050b,
	0x050d, 0x050d,
	0x050f, 0x050f,
	0x0511, 0x0511,
	0x0513, 0x0513,
	0x0515, 0x0515,
	0x0517, 0x0517,
	0x0519, 0x0519,
	0x051b, 0x051b,
	0x051d, 0x051d,
	0x051f, 0x051f,
	0x0521, 0x0521,
	0x0523, 0x0523,
	0x0525, 0x0525,
	0x0527, 0x0527,
	0x0561, 0x0587,
	0x1d79, 0x1d79,
	0x1d7d, 0x1d7d,
	0x1e01, 0x1e01,
	0x1e03, 0x1e03,
	0x1e05, 0x1e05,
	0x1e07, 0x1e07,
	0x1e09, 0x1e09,
	0x1e0b, 0x1e0b,
	0x1e0d, 0x1e0d,
	0x1e0f, 0x1e0f,
	0x1e11, 0x1e11,
	0x1e13, 0x1e13,
	0x1e15, 0x1e15,
	0x1e17, 0x1e17,
	0x1e19, 0x1e19,
	0x1e1b, 0x1e1b,
	0x1e1d, 0x1e1d,
	0x1e1f, 0x1e1f,
	0x1e21, 0x1e21,
	0x1e23, 0x1e23,
	0x1e25, 0x1e25,
	0x1e27, 0x1e27,
	0x1e29, 0x1e29,
	0x1e2b, 0x1e2b,
	0x1e2d, 0x1e2d,
	0x1e2f, 0x1e2f,
	0x1e31, 0x1e31,
	0x1e33, 0x1e33,
	0x1e35, 0x1e35,
	0x1e37, 0x1e37,
	0x1e39, 0x1e39,
	0x1e3b, 0x1e3b,
	0x1e3d, 0x1e3d,
	0x1e3f, 0x1e3f,
	0x1e41, 0x1e41,
	0x1e43, 0x1e43,
	0x1e45, 0x1e45,
	0x1e47, 0x1e47,
	0x1e49, 0x1e49,
	0x1e4b, 0x1e4b,
	0x1e4d, 0x1e4d,
	0x1e4f, 0x1e4f,
	0x1e51, 0x1e51,
	0x1e53, 0x1e53,
	0x1e55, 0x1e55,
	0x1e57, 0x1e57,
	0x1e59, 0x1e59,
	0x1e5b, 0x1e5b,
	0x1e5d, 0x1e5d,
	0x1e5f, 0x1e5f,
	0x1e61, 0x1e61,
	0x1e63, 0x1e63,
	0x1e65, 0x1e65,
	0x1e67, 0x1e67,
	0x1e69, 0x1e69,
	0x1e6b, 0x1e6b,
	0x1e6d, 0x1e6d,
	0x1e6f, 0x1e6f,
	0x1e71, 0x1e71,
	0x1e73, 0x1e73,
	0x1e75, 0x1e75,
	0x1e77, 0x1e77,
	0x1e79, 0x1e79,
	0x1e7b, 0x1e7b,
	0x1e7d, 0x1e7d,
	0x1e7f, 0x1e7f,
	0x1e81, 0x1e81,
	0x1e83, 0x1e83,
	0x1e85, 0x1e85,
	0x1e87, 0x1e87,
	0x1e89, 0x1e89,
	0x1e8b, 0x1e8b,
	0x1e8d, 0x1e8d,
	0x1e8f, 0x1e8f,
	0x1e91, 0x1e91,
	0x1e93, 0x1e93,
	0x1e95, 0x1e9b,
	0x1ea1, 0x1ea1,
	0x1ea3, 0x1ea3,
	0x1ea5, 0x1ea5,
	0x1ea7, 0x1ea7,
	0x1ea9, 0x1ea9,
	0x1eab, 0x1eab,
	0x1ead, 0x1ead,
	0x1eaf, 0x1eaf,
	0x1eb1, 0x1eb1,
	0x1eb3, 0x1eb3,
	0x1eb5, 0x1eb5,
	0x1eb7, 0x1eb7,
	0x1eb9, 0x1eb9,
	0x1ebb, 0x1ebb,
	0x1ebd, 0x1ebd,
	0x1ebf, 0x1ebf,
	0x1ec1, 0x1ec1,
	0x1ec3, 0x1ec3,
	0x1ec5, 0x1ec5,
	0x1ec7, 0x1ec7,
	0x1ec9, 0x1ec9,
	0x1ecb, 0x1ecb,
	0x1ecd, 0x1ecd,
	0x1ecf, 0x1ecf,
	0x1ed1, 0x1ed1,
	0x1ed3, 0x1ed3,
	0x1ed5, 0x1ed5,
	0x1ed7, 0x1ed7,
	0x1ed9, 0x1ed9,
	0x1edb, 0x1edb,
	0x1edd, 0x1edd,
	0x1edf, 0x1edf,
	0x1ee1, 0x1ee1,
	0x1ee3, 0x1ee3,
	0x1ee5, 0x1ee5,
	0x1ee7, 0x1ee7,
	0x1ee9, 0x1ee9,
	0x1eeb, 0x1eeb,
	0x1eed, 0x1eed,
	0x1eef, 0x1eef,
	0x1ef1, 0x1ef1,
	0x1ef3, 0x1ef3,
	0x1ef5, 0x1ef5,
	0x1ef7, 0x1ef7,
	0x1ef9, 0x1ef9,
	0x1efb, 0x1efb,
	0x1efd, 0x1efd,
	0x1eff, 0x1f07,
	0x1f10, 0x1f15,
	0x1f20, 0x1f27,
	0x1f30, 0x1f37,
	0x1f40, 0x1f45,
	0x1f50, 0x1f57,
	0x1f60, 0x1f67,
	0x1f70, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fb7,
	0x1fbc, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fc7,
	0x1fcc, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fd7,
	0x1fe0, 0x1fe7,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ff7,
	0x1ffc, 0x1ffc,
	0x214e, 0x214e,
	0x2170, 0x217f,
	0x2184, 0x2184,
	0x24d0, 0x24e9,
	0x2c30, 0x2c5e,
	0x2c61, 0x2c61,
	0x2c65, 0x2c66,
	0x2c68, 0x2c68,
	0x2c6a, 0x2c6a,
	0x2c6c, 0x2c6c,
	0x2c73, 0x2c73,
	0x2c76, 0x2c76,
	0x2c81, 0x2c81,
	0x2c83, 0x2c83,
	0x2c85, 0x2c85,
	0x2c87, 0x2c87,
	0x2c89, 0x2c89,
	0x2c8b, 0x2c8b,
	0x2c8d, 0x2c8d,
	0x2c8f, 0x2c8f,
	0x2c91, 0x2c91,
	0x2c93, 0x2c93,
	0x2c95, 0x2c95,
	0x2c97, 0x2c97,
	0x2c99, 0x2c99,
	0x2c9b, 0x2c9b,
	0x2c9d, 0x2c9d,
	0x2c9f, 0x2c9f,
	0x2ca1, 0x2ca1,
	0x2ca3, 0x2ca3,
	0x2ca5, 0x2ca5,
	0x2ca7, 0x2ca7,
	0x2ca9, 0x2ca9,
	0x2cab, 0x2cab,
	0x2cad, 0x2cad,
	0x2caf, 0x2caf,
	0x2cb1, 0x2cb1,
	0x2cb3, 0x2cb3,
	0x2cb5, 0x2cb5,
	0x2cb7, 0x2cb7,
	0x2cb9, 0x2cb9,
	0x2cbb, 0x2cbb,
	0x2cbd, 0x2cbd,
	0x2cbf, 0x2cbf,
	0x2cc1, 0x2cc1,
	0x2cc3, 0x2cc3,
	0x2cc5, 0x2cc5,
	0x2cc7, 0x2cc7,
	0x2cc9, 0x2cc9,
	0x2ccb, 0x2ccb,
	0x2ccd, 0x2ccd,
	0x2ccf, 0x2ccf,
	0x2cd1, 0x2cd1,
	0x2cd3, 0x2cd3,
	0x2cd5, 0x2cd5,
	0x2cd7, 0x2cd7,
	0x2cd9, 0x2cd9,
	0x2cdb, 0x2cdb,
	0x2cdd, 0x2cdd,
	0x2cdf, 0x2cdf,
	0x2ce1, 0x2ce1,
	0x2ce3, 0x2ce3,
	0x2cec, 0x2cec,
	0x2cee, 0x2cee,
	0x2d00, 0x2d25,
	0xa641, 0xa641,
	0xa643, 0xa643,
	0xa645, 0xa645,
	0xa647, 0xa647,
	0xa649, 0xa649,
	0xa64b, 0xa64b,
	0xa64d, 0xa64d,
	0xa64f, 0xa64f,
	0xa651, 0xa651,
	0xa653, 0xa653,
	0xa655, 0xa655,
	0xa657, 0xa657,
	0xa659, 0xa659,
	0xa65b, 0xa65b,
	0xa65d, 0xa65d,
	0xa65f, 0xa65f,
	0xa661, 0xa661,
	0xa663, 0xa663,
	0xa665, 0xa665,
	0xa667, 0xa667,
	0xa669, 0xa669,
	0xa66b, 0xa66b,
	0xa66d, 0xa66d,
	0xa681, 0xa681,
	0xa683, 0xa683,
	0xa685, 0xa685,
	0xa687, 0xa687,
	0xa689, 0xa689,
	0xa68b, 0xa68b,
	0xa68d, 0xa68d,
	0xa68f, 0xa68f,
	0xa691, 0xa691,
	0xa693, 0xa693,
	0xa695, 0xa695,
	0xa697, 0xa697,
	0xa723, 0xa723,
	0xa725, 0xa725,
	0xa727, 0xa727,
	0xa729, 0xa729,
	0xa72b, 0xa72b,
	0xa72d, 0xa72d,
	0xa72f, 0xa72f,
	0xa733, 0xa733,
	0xa735, 0xa735,
	0xa737, 0xa737,
	0xa739, 0xa739,
	0xa73b, 0xa73b,
	0xa73d, 0xa73d,
	0xa73f, 0xa73f,
	0xa741, 0xa741,
	0xa743, 0xa743,
	0xa745, 0xa745,
	0xa747, 0xa747,
	0xa749, 0xa749,
	0xa74b, 0xa74b,
	0xa74d, 0xa74d,
	0xa74f, 0xa74f,
	0xa751, 0xa751,
	0xa753, 0xa753,
	0xa755, 0xa755,
	0xa757, 0xa757,
	0xa759, 0xa759,
	0xa75b, 0xa75b,
	0xa75d, 0xa75d,
	0xa75f, 0xa75f,
	0xa761, 0xa761,
	0xa763, 0xa763,
	0xa765, 0xa765,
	0xa767, 0xa767,
	0xa769, 0xa769,
	0xa76b, 0xa76b,
	0xa76d, 0xa76d,
	0xa76f, 0xa76f,
	0xa77a, 0xa77a,
	0xa77c, 0xa77c,
	0xa77f, 0xa77f,
	0xa781, 0xa781,
	0xa783, 0xa783,
	0xa785, 0xa785,
	0xa787, 0xa787,
	0xa78c, 0xa78c,
	0xa791, 0xa791,
	0xa7a1, 0xa7a1,
	0xa7a3, 0xa7a3,
	0xa7a5, 0xa7a5,
	0xa7a7, 0xa7a7,
	0xa7a9, 0xa7a9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff41, 0xff5a,
	0x10428, 0x1044f,
}; /* CR_Changes_When_Uppercased */

/* 'Changes_When_Titlecased': Derived Property */
static const OnigCodePoint CR_Changes_When_Titlecased[] = {
	583,
	0x0061, 0x007a,
	0x00b5, 0x00b5,
	0x00df, 0x00f6,
	0x00f8, 0x00ff,
	0x0101, 0x0101,
	0x0103, 0x0103,
	0x0105, 0x0105,
	0x0107, 0x0107,
	0x0109, 0x0109,
	0x010b, 0x010b,
	0x010d, 0x010d,
	0x010f, 0x010f,
	0x0111, 0x0111,
	0x0113, 0x0113,
	0x0115, 0x0115,
	0x0117, 0x0117,
	0x0119, 0x0119,
	0x011b, 0x011b,
	0x011d, 0x011d,
	0x011f, 0x011f,
	0x0121, 0x0121,
	0x0123, 0x0123,
	0x0125, 0x0125,
	0x0127, 0x0127,
	0x0129, 0x0129,
	0x012b, 0x012b,
	0x012d, 0x012d,
	0x012f, 0x012f,
	0x0131, 0x0131,
	0x0133, 0x0133,
	0x0135, 0x0135,
	0x0137, 0x0137,
	0x013a, 0x013a,
	0x013c, 0x013c,
	0x013e, 0x013e,
	0x0140, 0x0140,
	0x0142, 0x0142,
	0x0144, 0x0144,
	0x0146, 0x0146,
	0x0148, 0x0149,
	0x014b, 0x014b,
	0x014d, 0x014d,
	0x014f, 0x014f,
	0x0151, 0x0151,
	0x0153, 0x0153,
	0x0155, 0x0155,
	0x0157, 0x0157,
	0x0159, 0x0159,
	0x015b, 0x015b,
	0x015d, 0x015d,
	0x015f, 0x015f,
	0x0161, 0x0161,
	0x0163, 0x0163,
	0x0165, 0x0165,
	0x0167, 0x0167,
	0x0169, 0x0169,
	0x016b, 0x016b,
	0x016d, 0x016d,
	0x016f, 0x016f,
	0x0171, 0x0171,
	0x0173, 0x0173,
	0x0175, 0x0175,
	0x0177, 0x0177,
	0x017a, 0x017a,
	0x017c, 0x017c,
	0x017e, 0x0180,
	0x0183, 0x0183,
	0x0185, 0x0185,
	0x0188, 0x0188,
	0x018c, 0x018c,
	0x0192, 0x0192,
	0x0195, 0x0195,
	0x0199, 0x019a,
	0x019e, 0x019e,
	0x01a1, 0x01a1,
	0x01a3, 0x01a3,
	0x01a5, 0x01a5,
	0x01a8, 0x01a8,
	0x01ad, 0x01ad,
	0x01b0, 0x01b0,
	0x01b4, 0x01b4,
	0x01b6, 0x01b6,
	0x01b9, 0x01b9,
	0x01bd, 0x01bd,
	0x01bf, 0x01bf,
	0x01c4, 0x01c4,
	0x01c6, 0x01c7,
	0x01c9, 0x01ca,
	0x01cc, 0x01cc,
	0x01ce, 0x01ce,
	0x01d0, 0x01d0,
	0x01d2, 0x01d2,
	0x01d4, 0x01d4,
	0x01d6, 0x01d6,
	0x01d8, 0x01d8,
	0x01da, 0x01da,
	0x01dc, 0x01dd,
	0x01df, 0x01df,
	0x01e1, 0x01e1,
	0x01e3, 0x01e3,
	0x01e5, 0x01e5,
	0x01e7, 0x01e7,
	0x01e9, 0x01e9,
	0x01eb, 0x01eb,
	0x01ed, 0x01ed,
	0x01ef, 0x01f1,
	0x01f3, 0x01f3,
	0x01f5, 0x01f5,
	0x01f9, 0x01f9,
	0x01fb, 0x01fb,
	0x01fd, 0x01fd,
	0x01ff, 0x01ff,
	0x0201, 0x0201,
	0x0203, 0x0203,
	0x0205, 0x0205,
	0x0207, 0x0207,
	0x0209, 0x0209,
	0x020b, 0x020b,
	0x020d, 0x020d,
	0x020f, 0x020f,
	0x0211, 0x0211,
	0x0213, 0x0213,
	0x0215, 0x0215,
	0x0217, 0x0217,
	0x0219, 0x0219,
	0x021b, 0x021b,
	0x021d, 0x021d,
	0x021f, 0x021f,
	0x0223, 0x0223,
	0x0225, 0x0225,
	0x0227, 0x0227,
	0x0229, 0x0229,
	0x022b, 0x022b,
	0x022d, 0x022d,
	0x022f, 0x022f,
	0x0231, 0x0231,
	0x0233, 0x0233,
	0x023c, 0x023c,
	0x023f, 0x0240,
	0x0242, 0x0242,
	0x0247, 0x0247,
	0x0249, 0x0249,
	0x024b, 0x024b,
	0x024d, 0x024d,
	0x024f, 0x0254,
	0x0256, 0x0257,
	0x0259, 0x0259,
	0x025b, 0x025b,
	0x0260, 0x0260,
	0x0263, 0x0263,
	0x0265, 0x0265,
	0x0268, 0x0269,
	0x026b, 0x026b,
	0x026f, 0x026f,
	0x0271, 0x0272,
	0x0275, 0x0275,
	0x027d, 0x027d,
	0x0280, 0x0280,
	0x0283, 0x0283,
	0x0288, 0x028c,
	0x0292, 0x0292,
	0x0345, 0x0345,
	0x0371, 0x0371,
	0x0373, 0x0373,
	0x0377, 0x0377,
	0x037b, 0x037d,
	0x0390, 0x0390,
	0x03ac, 0x03ce,
	0x03d0, 0x03d1,
	0x03d5, 0x03d7,
	0x03d9, 0x03d9,
	0x03db, 0x03db,
	0x03dd, 0x03dd,
	0x03df, 0x03df,
	0x03e1, 0x03e1,
	0x03e3, 0x03e3,
	0x03e5, 0x03e5,
	0x03e7, 0x03e7,
	0x03e9, 0x03e9,
	0x03eb, 0x03eb,
	0x03ed, 0x03ed,
	0x03ef, 0x03f2,
	0x03f5, 0x03f5,
	0x03f8, 0x03f8,
	0x03fb, 0x03fb,
	0x0430, 0x045f,
	0x0461, 0x0461,
	0x0463, 0x0463,
	0x0465, 0x0465,
	0x0467, 0x0467,
	0x0469, 0x0469,
	0x046b, 0x046b,
	0x046d, 0x046d,
	0x046f, 0x046f,
	0x0471, 0x0471,
	0x0473, 0x0473,
	0x0475, 0x0475,
	0x0477, 0x0477,
	0x0479, 0x0479,
	0x047b, 0x047b,
	0x047d, 0x047d,
	0x047f, 0x047f,
	0x0481, 0x0481,
	0x048b, 0x048b,
	0x048d, 0x048d,
	0x048f, 0x048f,
	0x0491, 0x0491,
	0x0493, 0x0493,
	0x0495, 0x0495,
	0x0497, 0x0497,
	0x0499, 0x0499,
	0x049b, 0x049b,
	0x049d, 0x049d,
	0x049f, 0x049f,
	0x04a1, 0x04a1,
	0x04a3, 0x04a3,
	0x04a5, 0x04a5,
	0x04a7, 0x04a7,
	0x04a9, 0x04a9,
	0x04ab, 0x04ab,
	0x04ad, 0x04ad,
	0x04af, 0x04af,
	0x04b1, 0x04b1,
	0x04b3, 0x04b3,
	0x04b5, 0x04b5,
	0x04b7, 0x04b7,
	0x04b9, 0x04b9,
	0x04bb, 0x04bb,
	0x04bd, 0x04bd,
	0x04bf, 0x04bf,
	0x04c2, 0x04c2,
	0x04c4, 0x04c4,
	0x04c6, 0x04c6,
	0x04c8, 0x04c8,
	0x04ca, 0x04ca,
	0x04cc, 0x04cc,
	0x04ce, 0x04cf,
	0x04d1, 0x04d1,
	0x04d3, 0x04d3,
	0x04d5, 0x04d5,
	0x04d7, 0x04d7,
	0x04d9, 0x04d9,
	0x04db, 0x04db,
	0x04dd, 0x04dd,
	0x04df, 0x04df,
	0x04e1, 0x04e1,
	0x04e3, 0x04e3,
	0x04e5, 0x04e5,
	0x04e7, 0x04e7,
	0x04e9, 0x04e9,
	0x04eb, 0x04eb,
	0x04ed, 0x04ed,
	0x04ef, 0x04ef,
	0x04f1, 0x04f1,
	0x04f3, 0x04f3,
	0x04f5, 0x04f5,
	0x04f7, 0x04f7,
	0x04f9, 0x04f9,
	0x04fb, 0x04fb,
	0x04fd, 0x04fd,
	0x04ff, 0x04ff,
	0x0501, 0x0501,
	0x0503, 0x0503,
	0x0505, 0x0505,
	0x0507, 0x0507,
	0x0509, 0x0509,
	0x050b, 0x050b,
	0x050d, 0x050d,
	0x050f, 0x050f,
	0x0511, 0x0511,
	0x0513, 0x0513,
	0x0515, 0x0515,
	0x0517, 0x0517,
	0x0519, 0x0519,
	0x051b, 0x051b,
	0x051d, 0x051d,
	0x051f, 0x051f,
	0x0521, 0x0521,
	0x0523, 0x0523,
	0x0525, 0x0525,
	0x0527, 0x0527,
	0x0561, 0x0587,
	0x1d79, 0x1d79,
	0x1d7d, 0x1d7d,
	0x1e01, 0x1e01,
	0x1e03, 0x1e03,
	0x1e05, 0x1e05,
	0x1e07, 0x1e07,
	0x1e09, 0x1e09,
	0x1e0b, 0x1e0b,
	0x1e0d, 0x1e0d,
	0x1e0f, 0x1e0f,
	0x1e11, 0x1e11,
	0x1e13, 0x1e13,
	0x1e15, 0x1e15,
	0x1e17, 0x1e17,
	0x1e19, 0x1e19,
	0x1e1b, 0x1e1b,
	0x1e1d, 0x1e1d,
	0x1e1f, 0x1e1f,
	0x1e21, 0x1e21,
	0x1e23, 0x1e23,
	0x1e25, 0x1e25,
	0x1e27, 0x1e27,
	0x1e29, 0x1e29,
	0x1e2b, 0x1e2b,
	0x1e2d, 0x1e2d,
	0x1e2f, 0x1e2f,
	0x1e31, 0x1e31,
	0x1e33, 0x1e33,
	0x1e35, 0x1e35,
	0x1e37, 0x1e37,
	0x1e39, 0x1e39,
	0x1e3b, 0x1e3b,
	0x1e3d, 0x1e3d,
	0x1e3f, 0x1e3f,
	0x1e41, 0x1e41,
	0x1e43, 0x1e43,
	0x1e45, 0x1e45,
	0x1e47, 0x1e47,
	0x1e49, 0x1e49,
	0x1e4b, 0x1e4b,
	0x1e4d, 0x1e4d,
	0x1e4f, 0x1e4f,
	0x1e51, 0x1e51,
	0x1e53, 0x1e53,
	0x1e55, 0x1e55,
	0x1e57, 0x1e57,
	0x1e59, 0x1e59,
	0x1e5b, 0x1e5b,
	0x1e5d, 0x1e5d,
	0x1e5f, 0x1e5f,
	0x1e61, 0x1e61,
	0x1e63, 0x1e63,
	0x1e65, 0x1e65,
	0x1e67, 0x1e67,
	0x1e69, 0x1e69,
	0x1e6b, 0x1e6b,
	0x1e6d, 0x1e6d,
	0x1e6f, 0x1e6f,
	0x1e71, 0x1e71,
	0x1e73, 0x1e73,
	0x1e75, 0x1e75,
	0x1e77, 0x1e77,
	0x1e79, 0x1e79,
	0x1e7b, 0x1e7b,
	0x1e7d, 0x1e7d,
	0x1e7f, 0x1e7f,
	0x1e81, 0x1e81,
	0x1e83, 0x1e83,
	0x1e85, 0x1e85,
	0x1e87, 0x1e87,
	0x1e89, 0x1e89,
	0x1e8b, 0x1e8b,
	0x1e8d, 0x1e8d,
	0x1e8f, 0x1e8f,
	0x1e91, 0x1e91,
	0x1e93, 0x1e93,
	0x1e95, 0x1e9b,
	0x1ea1, 0x1ea1,
	0x1ea3, 0x1ea3,
	0x1ea5, 0x1ea5,
	0x1ea7, 0x1ea7,
	0x1ea9, 0x1ea9,
	0x1eab, 0x1eab,
	0x1ead, 0x1ead,
	0x1eaf, 0x1eaf,
	0x1eb1, 0x1eb1,
	0x1eb3, 0x1eb3,
	0x1eb5, 0x1eb5,
	0x1eb7, 0x1eb7,
	0x1eb9, 0x1eb9,
	0x1ebb, 0x1ebb,
	0x1ebd, 0x1ebd,
	0x1ebf, 0x1ebf,
	0x1ec1, 0x1ec1,
	0x1ec3, 0x1ec3,
	0x1ec5, 0x1ec5,
	0x1ec7, 0x1ec7,
	0x1ec9, 0x1ec9,
	0x1ecb, 0x1ecb,
	0x1ecd, 0x1ecd,
	0x1ecf, 0x1ecf,
	0x1ed1, 0x1ed1,
	0x1ed3, 0x1ed3,
	0x1ed5, 0x1ed5,
	0x1ed7, 0x1ed7,
	0x1ed9, 0x1ed9,
	0x1edb, 0x1edb,
	0x1edd, 0x1edd,
	0x1edf, 0x1edf,
	0x1ee1, 0x1ee1,
	0x1ee3, 0x1ee3,
	0x1ee5, 0x1ee5,
	0x1ee7, 0x1ee7,
	0x1ee9, 0x1ee9,
	0x1eeb, 0x1eeb,
	0x1eed, 0x1eed,
	0x1eef, 0x1eef,
	0x1ef1, 0x1ef1,
	0x1ef3, 0x1ef3,
	0x1ef5, 0x1ef5,
	0x1ef7, 0x1ef7,
	0x1ef9, 0x1ef9,
	0x1efb, 0x1efb,
	0x1efd, 0x1efd,
	0x1eff, 0x1f07,
	0x1f10, 0x1f15,
	0x1f20, 0x1f27,
	0x1f30, 0x1f37,
	0x1f40, 0x1f45,
	0x1f50, 0x1f57,
	0x1f60, 0x1f67,
	0x1f70, 0x1f7d,
	0x1f80, 0x1f87,
	0x1f90, 0x1f97,
	0x1fa0, 0x1fa7,
	0x1fb0, 0x1fb4,
	0x1fb6, 0x1fb7,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fc7,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fd7,
	0x1fe0, 0x1fe7,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ff7,
	0x214e, 0x214e,
	0x2170, 0x217f,
	0x2184, 0x2184,
	0x24d0, 0x24e9,
	0x2c30, 0x2c5e,
	0x2c61, 0x2c61,
	0x2c65, 0x2c66,
	0x2c68, 0x2c68,
	0x2c6a, 0x2c6a,
	0x2c6c, 0x2c6c,
	0x2c73, 0x2c73,
	0x2c76, 0x2c76,
	0x2c81, 0x2c81,
	0x2c83, 0x2c83,
	0x2c85, 0x2c85,
	0x2c87, 0x2c87,
	0x2c89, 0x2c89,
	0x2c8b, 0x2c8b,
	0x2c8d, 0x2c8d,
	0x2c8f, 0x2c8f,
	0x2c91, 0x2c91,
	0x2c93, 0x2c93,
	0x2c95, 0x2c95,
	0x2c97, 0x2c97,
	0x2c99, 0x2c99,
	0x2c9b, 0x2c9b,
	0x2c9d, 0x2c9d,
	0x2c9f, 0x2c9f,
	0x2ca1, 0x2ca1,
	0x2ca3, 0x2ca3,
	0x2ca5, 0x2ca5,
	0x2ca7, 0x2ca7,
	0x2ca9, 0x2ca9,
	0x2cab, 0x2cab,
	0x2cad, 0x2cad,
	0x2caf, 0x2caf,
	0x2cb1, 0x2cb1,
	0x2cb3, 0x2cb3,
	0x2cb5, 0x2cb5,
	0x2cb7, 0x2cb7,
	0x2cb9, 0x2cb9,
	0x2cbb, 0x2cbb,
	0x2cbd, 0x2cbd,
	0x2cbf, 0x2cbf,
	0x2cc1, 0x2cc1,
	0x2cc3, 0x2cc3,
	0x2cc5, 0x2cc5,
	0x2cc7, 0x2cc7,
	0x2cc9, 0x2cc9,
	0x2ccb, 0x2ccb,
	0x2ccd, 0x2ccd,
	0x2ccf, 0x2ccf,
	0x2cd1, 0x2cd1,
	0x2cd3, 0x2cd3,
	0x2cd5, 0x2cd5,
	0x2cd7, 0x2cd7,
	0x2cd9, 0x2cd9,
	0x2cdb, 0x2cdb,
	0x2cdd, 0x2cdd,
	0x2cdf, 0x2cdf,
	0x2ce1, 0x2ce1,
	0x2ce3, 0x2ce3,
	0x2cec, 0x2cec,
	0x2cee, 0x2cee,
	0x2d00, 0x2d25,
	0xa641, 0xa641,
	0xa643, 0xa643,
	0xa645, 0xa645,
	0xa647, 0xa647,
	0xa649, 0xa649,
	0xa64b, 0xa64b,
	0xa64d, 0xa64d,
	0xa64f, 0xa64f,
	0xa651, 0xa651,
	0xa653, 0xa653,
	0xa655, 0xa655,
	0xa657, 0xa657,
	0xa659, 0xa659,
	0xa65b, 0xa65b,
	0xa65d, 0xa65d,
	0xa65f, 0xa65f,
	0xa661, 0xa661,
	0xa663, 0xa663,
	0xa665, 0xa665,
	0xa667, 0xa667,
	0xa669, 0xa669,
	0xa66b, 0xa66b,
	0xa66d, 0xa66d,
	0xa681, 0xa681,
	0xa683, 0xa683,
	0xa685, 0xa685,
	0xa687, 0xa687,
	0xa689, 0xa689,
	0xa68b, 0xa68b,
	0xa68d, 0xa68d,
	0xa68f, 0xa68f,
	0xa691, 0xa691,
	0xa693, 0xa693,
	0xa695, 0xa695,
	0xa697, 0xa697,
	0xa723, 0xa723,
	0xa725, 0xa725,
	0xa727, 0xa727,
	0xa729, 0xa729,
	0xa72b, 0xa72b,
	0xa72d, 0xa72d,
	0xa72f, 0xa72f,
	0xa733, 0xa733,
	0xa735, 0xa735,
	0xa737, 0xa737,
	0xa739, 0xa739,
	0xa73b, 0xa73b,
	0xa73d, 0xa73d,
	0xa73f, 0xa73f,
	0xa741, 0xa741,
	0xa743, 0xa743,
	0xa745, 0xa745,
	0xa747, 0xa747,
	0xa749, 0xa749,
	0xa74b, 0xa74b,
	0xa74d, 0xa74d,
	0xa74f, 0xa74f,
	0xa751, 0xa751,
	0xa753, 0xa753,
	0xa755, 0xa755,
	0xa757, 0xa757,
	0xa759, 0xa759,
	0xa75b, 0xa75b,
	0xa75d, 0xa75d,
	0xa75f, 0xa75f,
	0xa761, 0xa761,
	0xa763, 0xa763,
	0xa765, 0xa765,
	0xa767, 0xa767,
	0xa769, 0xa769,
	0xa76b, 0xa76b,
	0xa76d, 0xa76d,
	0xa76f, 0xa76f,
	0xa77a, 0xa77a,
	0xa77c, 0xa77c,
	0xa77f, 0xa77f,
	0xa781, 0xa781,
	0xa783, 0xa783,
	0xa785, 0xa785,
	0xa787, 0xa787,
	0xa78c, 0xa78c,
	0xa791, 0xa791,
	0xa7a1, 0xa7a1,
	0xa7a3, 0xa7a3,
	0xa7a5, 0xa7a5,
	0xa7a7, 0xa7a7,
	0xa7a9, 0xa7a9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff41, 0xff5a,
	0x10428, 0x1044f,
}; /* CR_Changes_When_Titlecased */

/* 'Changes_When_Casefolded': Derived Property */
static const OnigCodePoint CR_Changes_When_Casefolded[] = {
	577,
	0x0041, 0x005a,
	0x00b5, 0x00b5,
	0x00c0, 0x00d6,
	0x00d8, 0x00df,
	0x0100, 0x0100,
	0x0102, 0x0102,
	0x0104, 0x0104,
	0x0106, 0x0106,
	0x0108, 0x0108,
	0x010a, 0x010a,
	0x010c, 0x010c,
	0x010e, 0x010e,
	0x0110, 0x0110,
	0x0112, 0x0112,
	0x0114, 0x0114,
	0x0116, 0x0116,
	0x0118, 0x0118,
	0x011a, 0x011a,
	0x011c, 0x011c,
	0x011e, 0x011e,
	0x0120, 0x0120,
	0x0122, 0x0122,
	0x0124, 0x0124,
	0x0126, 0x0126,
	0x0128, 0x0128,
	0x012a, 0x012a,
	0x012c, 0x012c,
	0x012e, 0x012e,
	0x0130, 0x0130,
	0x0132, 0x0132,
	0x0134, 0x0134,
	0x0136, 0x0136,
	0x0139, 0x0139,
	0x013b, 0x013b,
	0x013d, 0x013d,
	0x013f, 0x013f,
	0x0141, 0x0141,
	0x0143, 0x0143,
	0x0145, 0x0145,
	0x0147, 0x0147,
	0x0149, 0x014a,
	0x014c, 0x014c,
	0x014e, 0x014e,
	0x0150, 0x0150,
	0x0152, 0x0152,
	0x0154, 0x0154,
	0x0156, 0x0156,
	0x0158, 0x0158,
	0x015a, 0x015a,
	0x015c, 0x015c,
	0x015e, 0x015e,
	0x0160, 0x0160,
	0x0162, 0x0162,
	0x0164, 0x0164,
	0x0166, 0x0166,
	0x0168, 0x0168,
	0x016a, 0x016a,
	0x016c, 0x016c,
	0x016e, 0x016e,
	0x0170, 0x0170,
	0x0172, 0x0172,
	0x0174, 0x0174,
	0x0176, 0x0176,
	0x0178, 0x0179,
	0x017b, 0x017b,
	0x017d, 0x017d,
	0x017f, 0x017f,
	0x0181, 0x0182,
	0x0184, 0x0184,
	0x0186, 0x0187,
	0x0189, 0x018b,
	0x018e, 0x0191,
	0x0193, 0x0194,
	0x0196, 0x0198,
	0x019c, 0x019d,
	0x019f, 0x01a0,
	0x01a2, 0x01a2,
	0x01a4, 0x01a4,
	0x01a6, 0x01a7,
	0x01a9, 0x01a9,
	0x01ac, 0x01ac,
	0x01ae, 0x01af,
	0x01b1, 0x01b3,
	0x01b5, 0x01b5,
	0x01b7, 0x01b8,
	0x01bc, 0x01bc,
	0x01c4, 0x01c5,
	0x01c7, 0x01c8,
	0x01ca, 0x01cb,
	0x01cd, 0x01cd,
	0x01cf, 0x01cf,
	0x01d1, 0x01d1,
	0x01d3, 0x01d3,
	0x01d5, 0x01d5,
	0x01d7, 0x01d7,
	0x01d9, 0x01d9,
	0x01db, 0x01db,
	0x01de, 0x01de,
	0x01e0, 0x01e0,
	0x01e2, 0x01e2,
	0x01e4, 0x01e4,
	0x01e6, 0x01e6,
	0x01e8, 0x01e8,
	0x01ea, 0x01ea,
	0x01ec, 0x01ec,
	0x01ee, 0x01ee,
	0x01f1, 0x01f2,
	0x01f4, 0x01f4,
	0x01f6, 0x01f8,
	0x01fa, 0x01fa,
	0x01fc, 0x01fc,
	0x01fe, 0x01fe,
	0x0200, 0x0200,
	0x0202, 0x0202,
	0x0204, 0x0204,
	0x0206, 0x0206,
	0x0208, 0x0208,
	0x020a, 0x020a,
	0x020c, 0x020c,
	0x020e, 0x020e,
	0x0210, 0x0210,
	0x0212, 0x0212,
	0x0214, 0x0214,
	0x0216, 0x0216,
	0x0218, 0x0218,
	0x021a, 0x021a,
	0x021c, 0x021c,
	0x021e, 0x021e,
	0x0220, 0x0220,
	0x0222, 0x0222,
	0x0224, 0x0224,
	0x0226, 0x0226,
	0x0228, 0x0228,
	0x022a, 0x022a,
	0x022c, 0x022c,
	0x022e, 0x022e,
	0x0230, 0x0230,
	0x0232, 0x0232,
	0x023a, 0x023b,
	0x023d, 0x023e,
	0x0241, 0x0241,
	0x0243, 0x0246,
	0x0248, 0x0248,
	0x024a, 0x024a,
	0x024c, 0x024c,
	0x024e, 0x024e,
	0x0345, 0x0345,
	0x0370, 0x0370,
	0x0372, 0x0372,
	0x0376, 0x0376,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x038f,
	0x0391, 0x03a1,
	0x03a3, 0x03ab,
	0x03c2, 0x03c2,
	0x03cf, 0x03d1,
	0x03d5, 0x03d6,
	0x03d8, 0x03d8,
	0x03da, 0x03da,
	0x03dc, 0x03dc,
	0x03de, 0x03de,
	0x03e0, 0x03e0,
	0x03e2, 0x03e2,
	0x03e4, 0x03e4,
	0x03e6, 0x03e6,
	0x03e8, 0x03e8,
	0x03ea, 0x03ea,
	0x03ec, 0x03ec,
	0x03ee, 0x03ee,
	0x03f0, 0x03f1,
	0x03f4, 0x03f5,
	0x03f7, 0x03f7,
	0x03f9, 0x03fa,
	0x03fd, 0x042f,
	0x0460, 0x0460,
	0x0462, 0x0462,
	0x0464, 0x0464,
	0x0466, 0x0466,
	0x0468, 0x0468,
	0x046a, 0x046a,
	0x046c, 0x046c,
	0x046e, 0x046e,
	0x0470, 0x0470,
	0x0472, 0x0472,
	0x0474, 0x0474,
	0x0476, 0x0476,
	0x0478, 0x0478,
	0x047a, 0x047a,
	0x047c, 0x047c,
	0x047e, 0x047e,
	0x0480, 0x0480,
	0x048a, 0x048a,
	0x048c, 0x048c,
	0x048e, 0x048e,
	0x0490, 0x0490,
	0x0492, 0x0492,
	0x0494, 0x0494,
	0x0496, 0x0496,
	0x0498, 0x0498,
	0x049a, 0x049a,
	0x049c, 0x049c,
	0x049e, 0x049e,
	0x04a0, 0x04a0,
	0x04a2, 0x04a2,
	0x04a4, 0x04a4,
	0x04a6, 0x04a6,
	0x04a8, 0x04a8,
	0x04aa, 0x04aa,
	0x04ac, 0x04ac,
	0x04ae, 0x04ae,
	0x04b0, 0x04b0,
	0x04b2, 0x04b2,
	0x04b4, 0x04b4,
	0x04b6, 0x04b6,
	0x04b8, 0x04b8,
	0x04ba, 0x04ba,
	0x04bc, 0x04bc,
	0x04be, 0x04be,
	0x04c0, 0x04c1,
	0x04c3, 0x04c3,
	0x04c5, 0x04c5,
	0x04c7, 0x04c7,
	0x04c9, 0x04c9,
	0x04cb, 0x04cb,
	0x04cd, 0x04cd,
	0x04d0, 0x04d0,
	0x04d2, 0x04d2,
	0x04d4, 0x04d4,
	0x04d6, 0x04d6,
	0x04d8, 0x04d8,
	0x04da, 0x04da,
	0x04dc, 0x04dc,
	0x04de, 0x04de,
	0x04e0, 0x04e0,
	0x04e2, 0x04e2,
	0x04e4, 0x04e4,
	0x04e6, 0x04e6,
	0x04e8, 0x04e8,
	0x04ea, 0x04ea,
	0x04ec, 0x04ec,
	0x04ee, 0x04ee,
	0x04f0, 0x04f0,
	0x04f2, 0x04f2,
	0x04f4, 0x04f4,
	0x04f6, 0x04f6,
	0x04f8, 0x04f8,
	0x04fa, 0x04fa,
	0x04fc, 0x04fc,
	0x04fe, 0x04fe,
	0x0500, 0x0500,
	0x0502, 0x0502,
	0x0504, 0x0504,
	0x0506, 0x0506,
	0x0508, 0x0508,
	0x050a, 0x050a,
	0x050c, 0x050c,
	0x050e, 0x050e,
	0x0510, 0x0510,
	0x0512, 0x0512,
	0x0514, 0x0514,
	0x0516, 0x0516,
	0x0518, 0x0518,
	0x051a, 0x051a,
	0x051c, 0x051c,
	0x051e, 0x051e,
	0x0520, 0x0520,
	0x0522, 0x0522,
	0x0524, 0x0524,
	0x0526, 0x0526,
	0x0531, 0x0556,
	0x0587, 0x0587,
	0x10a0, 0x10c5,
	0x1e00, 0x1e00,
	0x1e02, 0x1e02,
	0x1e04, 0x1e04,
	0x1e06, 0x1e06,
	0x1e08, 0x1e08,
	0x1e0a, 0x1e0a,
	0x1e0c, 0x1e0c,
	0x1e0e, 0x1e0e,
	0x1e10, 0x1e10,
	0x1e12, 0x1e12,
	0x1e14, 0x1e14,
	0x1e16, 0x1e16,
	0x1e18, 0x1e18,
	0x1e1a, 0x1e1a,
	0x1e1c, 0x1e1c,
	0x1e1e, 0x1e1e,
	0x1e20, 0x1e20,
	0x1e22, 0x1e22,
	0x1e24, 0x1e24,
	0x1e26, 0x1e26,
	0x1e28, 0x1e28,
	0x1e2a, 0x1e2a,
	0x1e2c, 0x1e2c,
	0x1e2e, 0x1e2e,
	0x1e30, 0x1e30,
	0x1e32, 0x1e32,
	0x1e34, 0x1e34,
	0x1e36, 0x1e36,
	0x1e38, 0x1e38,
	0x1e3a, 0x1e3a,
	0x1e3c, 0x1e3c,
	0x1e3e, 0x1e3e,
	0x1e40, 0x1e40,
	0x1e42, 0x1e42,
	0x1e44, 0x1e44,
	0x1e46, 0x1e46,
	0x1e48, 0x1e48,
	0x1e4a, 0x1e4a,
	0x1e4c, 0x1e4c,
	0x1e4e, 0x1e4e,
	0x1e50, 0x1e50,
	0x1e52, 0x1e52,
	0x1e54, 0x1e54,
	0x1e56, 0x1e56,
	0x1e58, 0x1e58,
	0x1e5a, 0x1e5a,
	0x1e5c, 0x1e5c,
	0x1e5e, 0x1e5e,
	0x1e60, 0x1e60,
	0x1e62, 0x1e62,
	0x1e64, 0x1e64,
	0x1e66, 0x1e66,
	0x1e68, 0x1e68,
	0x1e6a, 0x1e6a,
	0x1e6c, 0x1e6c,
	0x1e6e, 0x1e6e,
	0x1e70, 0x1e70,
	0x1e72, 0x1e72,
	0x1e74, 0x1e74,
	0x1e76, 0x1e76,
	0x1e78, 0x1e78,
	0x1e7a, 0x1e7a,
	0x1e7c, 0x1e7c,
	0x1e7e, 0x1e7e,
	0x1e80, 0x1e80,
	0x1e82, 0x1e82,
	0x1e84, 0x1e84,
	0x1e86, 0x1e86,
	0x1e88, 0x1e88,
	0x1e8a, 0x1e8a,
	0x1e8c, 0x1e8c,
	0x1e8e, 0x1e8e,
	0x1e90, 0x1e90,
	0x1e92, 0x1e92,
	0x1e94, 0x1e94,
	0x1e9a, 0x1e9b,
	0x1e9e, 0x1e9e,
	0x1ea0, 0x1ea0,
	0x1ea2, 0x1ea2,
	0x1ea4, 0x1ea4,
	0x1ea6, 0x1ea6,
	0x1ea8, 0x1ea8,
	0x1eaa, 0x1eaa,
	0x1eac, 0x1eac,
	0x1eae, 0x1eae,
	0x1eb0, 0x1eb0,
	0x1eb2, 0x1eb2,
	0x1eb4, 0x1eb4,
	0x1eb6, 0x1eb6,
	0x1eb8, 0x1eb8,
	0x1eba, 0x1eba,
	0x1ebc, 0x1ebc,
	0x1ebe, 0x1ebe,
	0x1ec0, 0x1ec0,
	0x1ec2, 0x1ec2,
	0x1ec4, 0x1ec4,
	0x1ec6, 0x1ec6,
	0x1ec8, 0x1ec8,
	0x1eca, 0x1eca,
	0x1ecc, 0x1ecc,
	0x1ece, 0x1ece,
	0x1ed0, 0x1ed0,
	0x1ed2, 0x1ed2,
	0x1ed4, 0x1ed4,
	0x1ed6, 0x1ed6,
	0x1ed8, 0x1ed8,
	0x1eda, 0x1eda,
	0x1edc, 0x1edc,
	0x1ede, 0x1ede,
	0x1ee0, 0x1ee0,
	0x1ee2, 0x1ee2,
	0x1ee4, 0x1ee4,
	0x1ee6, 0x1ee6,
	0x1ee8, 0x1ee8,
	0x1eea, 0x1eea,
	0x1eec, 0x1eec,
	0x1eee, 0x1eee,
	0x1ef0, 0x1ef0,
	0x1ef2, 0x1ef2,
	0x1ef4, 0x1ef4,
	0x1ef6, 0x1ef6,
	0x1ef8, 0x1ef8,
	0x1efa, 0x1efa,
	0x1efc, 0x1efc,
	0x1efe, 0x1efe,
	0x1f08, 0x1f0f,
	0x1f18, 0x1f1d,
	0x1f28, 0x1f2f,
	0x1f38, 0x1f3f,
	0x1f48, 0x1f4d,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f5f,
	0x1f68, 0x1f6f,
	0x1f80, 0x1faf,
	0x1fb2, 0x1fb4,
	0x1fb7, 0x1fbc,
	0x1fc2, 0x1fc4,
	0x1fc7, 0x1fcc,
	0x1fd8, 0x1fdb,
	0x1fe8, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff7, 0x1ffc,
	0x2126, 0x2126,
	0x212a, 0x212b,
	0x2132, 0x2132,
	0x2160, 0x216f,
	0x2183, 0x2183,
	0x24b6, 0x24cf,
	0x2c00, 0x2c2e,
	0x2c60, 0x2c60,
	0x2c62, 0x2c64,
	0x2c67, 0x2c67,
	0x2c69, 0x2c69,
	0x2c6b, 0x2c6b,
	0x2c6d, 0x2c70,
	0x2c72, 0x2c72,
	0x2c75, 0x2c75,
	0x2c7e, 0x2c80,
	0x2c82, 0x2c82,
	0x2c84, 0x2c84,
	0x2c86, 0x2c86,
	0x2c88, 0x2c88,
	0x2c8a, 0x2c8a,
	0x2c8c, 0x2c8c,
	0x2c8e, 0x2c8e,
	0x2c90, 0x2c90,
	0x2c92, 0x2c92,
	0x2c94, 0x2c94,
	0x2c96, 0x2c96,
	0x2c98, 0x2c98,
	0x2c9a, 0x2c9a,
	0x2c9c, 0x2c9c,
	0x2c9e, 0x2c9e,
	0x2ca0, 0x2ca0,
	0x2ca2, 0x2ca2,
	0x2ca4, 0x2ca4,
	0x2ca6, 0x2ca6,
	0x2ca8, 0x2ca8,
	0x2caa, 0x2caa,
	0x2cac, 0x2cac,
	0x2cae, 0x2cae,
	0x2cb0, 0x2cb0,
	0x2cb2, 0x2cb2,
	0x2cb4, 0x2cb4,
	0x2cb6, 0x2cb6,
	0x2cb8, 0x2cb8,
	0x2cba, 0x2cba,
	0x2cbc, 0x2cbc,
	0x2cbe, 0x2cbe,
	0x2cc0, 0x2cc0,
	0x2cc2, 0x2cc2,
	0x2cc4, 0x2cc4,
	0x2cc6, 0x2cc6,
	0x2cc8, 0x2cc8,
	0x2cca, 0x2cca,
	0x2ccc, 0x2ccc,
	0x2cce, 0x2cce,
	0x2cd0, 0x2cd0,
	0x2cd2, 0x2cd2,
	0x2cd4, 0x2cd4,
	0x2cd6, 0x2cd6,
	0x2cd8, 0x2cd8,
	0x2cda, 0x2cda,
	0x2cdc, 0x2cdc,
	0x2cde, 0x2cde,
	0x2ce0, 0x2ce0,
	0x2ce2, 0x2ce2,
	0x2ceb, 0x2ceb,
	0x2ced, 0x2ced,
	0xa640, 0xa640,
	0xa642, 0xa642,
	0xa644, 0xa644,
	0xa646, 0xa646,
	0xa648, 0xa648,
	0xa64a, 0xa64a,
	0xa64c, 0xa64c,
	0xa64e, 0xa64e,
	0xa650, 0xa650,
	0xa652, 0xa652,
	0xa654, 0xa654,
	0xa656, 0xa656,
	0xa658, 0xa658,
	0xa65a, 0xa65a,
	0xa65c, 0xa65c,
	0xa65e, 0xa65e,
	0xa660, 0xa660,
	0xa662, 0xa662,
	0xa664, 0xa664,
	0xa666, 0xa666,
	0xa668, 0xa668,
	0xa66a, 0xa66a,
	0xa66c, 0xa66c,
	0xa680, 0xa680,
	0xa682, 0xa682,
	0xa684, 0xa684,
	0xa686, 0xa686,
	0xa688, 0xa688,
	0xa68a, 0xa68a,
	0xa68c, 0xa68c,
	0xa68e, 0xa68e,
	0xa690, 0xa690,
	0xa692, 0xa692,
	0xa694, 0xa694,
	0xa696, 0xa696,
	0xa722, 0xa722,
	0xa724, 0xa724,
	0xa726, 0xa726,
	0xa728, 0xa728,
	0xa72a, 0xa72a,
	0xa72c, 0xa72c,
	0xa72e, 0xa72e,
	0xa732, 0xa732,
	0xa734, 0xa734,
	0xa736, 0xa736,
	0xa738, 0xa738,
	0xa73a, 0xa73a,
	0xa73c, 0xa73c,
	0xa73e, 0xa73e,
	0xa740, 0xa740,
	0xa742, 0xa742,
	0xa744, 0xa744,
	0xa746, 0xa746,
	0xa748, 0xa748,
	0xa74a, 0xa74a,
	0xa74c, 0xa74c,
	0xa74e, 0xa74e,
	0xa750, 0xa750,
	0xa752, 0xa752,
	0xa754, 0xa754,
	0xa756, 0xa756,
	0xa758, 0xa758,
	0xa75a, 0xa75a,
	0xa75c, 0xa75c,
	0xa75e, 0xa75e,
	0xa760, 0xa760,
	0xa762, 0xa762,
	0xa764, 0xa764,
	0xa766, 0xa766,
	0xa768, 0xa768,
	0xa76a, 0xa76a,
	0xa76c, 0xa76c,
	0xa76e, 0xa76e,
	0xa779, 0xa779,
	0xa77b, 0xa77b,
	0xa77d, 0xa77e,
	0xa780, 0xa780,
	0xa782, 0xa782,
	0xa784, 0xa784,
	0xa786, 0xa786,
	0xa78b, 0xa78b,
	0xa78d, 0xa78d,
	0xa790, 0xa790,
	0xa7a0, 0xa7a0,
	0xa7a2, 0xa7a2,
	0xa7a4, 0xa7a4,
	0xa7a6, 0xa7a6,
	0xa7a8, 0xa7a8,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff21, 0xff3a,
	0x10400, 0x10427,
}; /* CR_Changes_When_Casefolded */

/* 'Changes_When_Casemapped': Derived Property */
static const OnigCodePoint CR_Changes_When_Casemapped[] = {
	99,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00b5, 0x00b5,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x0137,
	0x0139, 0x018c,
	0x018e, 0x019a,
	0x019c, 0x01a9,
	0x01ac, 0x01b9,
	0x01bc, 0x01bd,
	0x01bf, 0x01bf,
	0x01c4, 0x0220,
	0x0222, 0x0233,
	0x023a, 0x0254,
	0x0256, 0x0257,
	0x0259, 0x0259,
	0x025b, 0x025b,
	0x0260, 0x0260,
	0x0263, 0x0263,
	0x0265, 0x0265,
	0x0268, 0x0269,
	0x026b, 0x026b,
	0x026f, 0x026f,
	0x0271, 0x0272,
	0x0275, 0x0275,
	0x027d, 0x027d,
	0x0280, 0x0280,
	0x0283, 0x0283,
	0x0288, 0x028c,
	0x0292, 0x0292,
	0x0345, 0x0345,
	0x0370, 0x0373,
	0x0376, 0x0377,
	0x037b, 0x037d,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03d1,
	0x03d5, 0x03f2,
	0x03f4, 0x03f5,
	0x03f7, 0x03fb,
	0x03fd, 0x0481,
	0x048a, 0x0527,
	0x0531, 0x0556,
	0x0561, 0x0587,
	0x10a0, 0x10c5,
	0x1d79, 0x1d79,
	0x1d7d, 0x1d7d,
	0x1e00, 0x1e9b,
	0x1e9e, 0x1e9e,
	0x1ea0, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2126, 0x2126,
	0x212a, 0x212b,
	0x2132, 0x2132,
	0x214e, 0x214e,
	0x2160, 0x217f,
	0x2183, 0x2184,
	0x24b6, 0x24e9,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2c70,
	0x2c72, 0x2c73,
	0x2c75, 0x2c76,
	0x2c7e, 0x2ce3,
	0x2ceb, 0x2cee,
	0x2d00, 0x2d25,
	0xa640, 0xa66d,
	0xa680, 0xa697,
	0xa722, 0xa72f,
	0xa732, 0xa76f,
	0xa779, 0xa787,
	0xa78b, 0xa78d,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0x10400, 0x1044f,
}; /* CR_Changes_When_Casemapped */

/* 'ID_Start': Derived Property */
static const OnigCodePoint CR_ID_Start[] = {
	437,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0370, 0x0374,
	0x0376, 0x0377,
	0x037a, 0x037d,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x048a, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0620, 0x064a,
	0x066e, 0x066f,
	0x0671, 0x06d3,
	0x06d5, 0x06d5,
	0x06e5, 0x06e6,
	0x06ee, 0x06ef,
	0x06fa, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x0710,
	0x0712, 0x072f,
	0x074d, 0x07a5,
	0x07b1, 0x07b1,
	0x07ca, 0x07ea,
	0x07f4, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x0815,
	0x081a, 0x081a,
	0x0824, 0x0824,
	0x0828, 0x0828,
	0x0840, 0x0858,
	0x0904, 0x0939,
	0x093d, 0x093d,
	0x0950, 0x0950,
	0x0958, 0x0961,
	0x0971, 0x0977,
	0x0979, 0x097f,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bd, 0x09bd,
	0x09ce, 0x09ce,
	0x09dc, 0x09dd,
	0x09df, 0x09e1,
	0x09f0, 0x09f1,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a72, 0x0a74,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abd, 0x0abd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae1,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3d, 0x0b3d,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b71, 0x0b71,
	0x0b83, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bd0, 0x0bd0,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c3d,
	0x0c58, 0x0c59,
	0x0c60, 0x0c61,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbd, 0x0cbd,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0cf1, 0x0cf2,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d3d,
	0x0d4e, 0x0d4e,
	0x0d60, 0x0d61,
	0x0d7a, 0x0d7f,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0e01, 0x0e30,
	0x0e32, 0x0e33,
	0x0e40, 0x0e46,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb0,
	0x0eb2, 0x0eb3,
	0x0ebd, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0edc, 0x0edd,
	0x0f00, 0x0f00,
	0x0f40, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f88, 0x0f8c,
	0x1000, 0x102a,
	0x103f, 0x103f,
	0x1050, 0x1055,
	0x105a, 0x105d,
	0x1061, 0x1061,
	0x1065, 0x1066,
	0x106e, 0x1070,
	0x1075, 0x1081,
	0x108e, 0x108e,
	0x10a0, 0x10c5,
	0x10d0, 0x10fa,
	0x10fc, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16ee, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1711,
	0x1720, 0x1731,
	0x1740, 0x1751,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1780, 0x17b3,
	0x17d7, 0x17d7,
	0x17dc, 0x17dc,
	0x1820, 0x1877,
	0x1880, 0x18a8,
	0x18aa, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1950, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19c1, 0x19c7,
	0x1a00, 0x1a16,
	0x1a20, 0x1a54,
	0x1aa7, 0x1aa7,
	0x1b05, 0x1b33,
	0x1b45, 0x1b4b,
	0x1b83, 0x1ba0,
	0x1bae, 0x1baf,
	0x1bc0, 0x1be5,
	0x1c00, 0x1c23,
	0x1c4d, 0x1c4f,
	0x1c5a, 0x1c7d,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf1,
	0x1d00, 0x1dbf,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2118, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cee,
	0x2d00, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x3005, 0x3007,
	0x3021, 0x3029,
	0x3031, 0x3035,
	0x3038, 0x303c,
	0x3041, 0x3096,
	0x309b, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcb,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa61f,
	0xa62a, 0xa62b,
	0xa640, 0xa66e,
	0xa67f, 0xa697,
	0xa6a0, 0xa6ef,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa801,
	0xa803, 0xa805,
	0xa807, 0xa80a,
	0xa80c, 0xa822,
	0xa840, 0xa873,
	0xa882, 0xa8b3,
	0xa8f2, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa90a, 0xa925,
	0xa930, 0xa946,
	0xa960, 0xa97c,
	0xa984, 0xa9b2,
	0xa9cf, 0xa9cf,
	0xaa00, 0xaa28,
	0xaa40, 0xaa42,
	0xaa44, 0xaa4b,
	0xaa60, 0xaa76,
	0xaa7a, 0xaa7a,
	0xaa80, 0xaaaf,
	0xaab1, 0xaab1,
	0xaab5, 0xaab6,
	0xaab9, 0xaabd,
	0xaac0, 0xaac0,
	0xaac2, 0xaac2,
	0xaadb, 0xaadd,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabe2,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb1d,
	0xfb1f, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0xff66, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10140, 0x10174,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x103d1, 0x103d5,
	0x10400, 0x1049d,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10a00, 0x10a00,
	0x10a10, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a60, 0x10a7c,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10c00, 0x10c48,
	0x11003, 0x11037,
	0x11083, 0x110af,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_ID_Start */

/* 'ID_Continue': Derived Property */
static const OnigCodePoint CR_ID_Continue[] = {
	514,
	0x0030, 0x0039,
	0x0041, 0x005a,
	0x005f, 0x005f,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00b7, 0x00b7,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0300, 0x0374,
	0x0376, 0x0377,
	0x037a, 0x037d,
	0x0386, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x0483, 0x0487,
	0x048a, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x0591, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0610, 0x061a,
	0x0620, 0x0669,
	0x066e, 0x06d3,
	0x06d5, 0x06dc,
	0x06df, 0x06e8,
	0x06ea, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x082d,
	0x0840, 0x085b,
	0x0900, 0x0963,
	0x0966, 0x096f,
	0x0971, 0x0977,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09f1,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b6f,
	0x0b71, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bef,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d6f,
	0x0d7a, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df3,
	0x0e01, 0x0e3a,
	0x0e40, 0x0e4e,
	0x0e50, 0x0e59,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f00,
	0x0f18, 0x0f19,
	0x0f20, 0x0f29,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f3e, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f84,
	0x0f86, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fc6, 0x0fc6,
	0x1000, 0x1049,
	0x1050, 0x109d,
	0x10a0, 0x10c5,
	0x10d0, 0x10fa,
	0x10fc, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x135f,
	0x1369, 0x1371,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16ee, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1734,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17b3,
	0x17b6, 0x17d3,
	0x17d7, 0x17d7,
	0x17dc, 0x17dd,
	0x17e0, 0x17e9,
	0x180b, 0x180d,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1946, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x1a00, 0x1a1b,
	0x1a20, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa7, 0x1aa7,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b59,
	0x1b6b, 0x1b73,
	0x1b80, 0x1baa,
	0x1bae, 0x1bb9,
	0x1bc0, 0x1bf3,
	0x1c00, 0x1c37,
	0x1c40, 0x1c49,
	0x1c4d, 0x1c7d,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1cf2,
	0x1d00, 0x1de6,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x203f, 0x2040,
	0x2054, 0x2054,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x20d0, 0x20dc,
	0x20e1, 0x20e1,
	0x20e5, 0x20f0,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2118, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cf1,
	0x2d00, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2dff,
	0x3005, 0x3007,
	0x3021, 0x302f,
	0x3031, 0x3035,
	0x3038, 0x303c,
	0x3041, 0x3096,
	0x3099, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcb,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa62b,
	0xa640, 0xa66f,
	0xa67c, 0xa67d,
	0xa67f, 0xa697,
	0xa6a0, 0xa6f1,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa827,
	0xa840, 0xa873,
	0xa880, 0xa8c4,
	0xa8d0, 0xa8d9,
	0xa8e0, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa900, 0xa92d,
	0xa930, 0xa953,
	0xa960, 0xa97c,
	0xa980, 0xa9c0,
	0xa9cf, 0xa9d9,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa60, 0xaa76,
	0xaa7a, 0xaa7b,
	0xaa80, 0xaac2,
	0xaadb, 0xaadd,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabea,
	0xabec, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe26,
	0xfe33, 0xfe34,
	0xfe4d, 0xfe4f,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff10, 0xff19,
	0xff21, 0xff3a,
	0xff3f, 0xff3f,
	0xff41, 0xff5a,
	0xff66, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10140, 0x10174,
	0x101fd, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x103d1, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a3f,
	0x10a60, 0x10a7c,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10c00, 0x10c48,
	0x11000, 0x11046,
	0x11066, 0x1106f,
	0x11080, 0x110ba,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x1d165, 0x1d169,
	0x1d16d, 0x1d172,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1d242, 0x1d244,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0xe0100, 0xe01ef,
}; /* CR_ID_Continue */

/* 'XID_Start': Derived Property */
static const OnigCodePoint CR_XID_Start[] = {
	444,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0370, 0x0374,
	0x0376, 0x0377,
	0x037b, 0x037d,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x048a, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0620, 0x064a,
	0x066e, 0x066f,
	0x0671, 0x06d3,
	0x06d5, 0x06d5,
	0x06e5, 0x06e6,
	0x06ee, 0x06ef,
	0x06fa, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x0710,
	0x0712, 0x072f,
	0x074d, 0x07a5,
	0x07b1, 0x07b1,
	0x07ca, 0x07ea,
	0x07f4, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x0815,
	0x081a, 0x081a,
	0x0824, 0x0824,
	0x0828, 0x0828,
	0x0840, 0x0858,
	0x0904, 0x0939,
	0x093d, 0x093d,
	0x0950, 0x0950,
	0x0958, 0x0961,
	0x0971, 0x0977,
	0x0979, 0x097f,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bd, 0x09bd,
	0x09ce, 0x09ce,
	0x09dc, 0x09dd,
	0x09df, 0x09e1,
	0x09f0, 0x09f1,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a72, 0x0a74,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abd, 0x0abd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae1,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3d, 0x0b3d,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b71, 0x0b71,
	0x0b83, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bd0, 0x0bd0,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c3d,
	0x0c58, 0x0c59,
	0x0c60, 0x0c61,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbd, 0x0cbd,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0cf1, 0x0cf2,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d3d,
	0x0d4e, 0x0d4e,
	0x0d60, 0x0d61,
	0x0d7a, 0x0d7f,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0e01, 0x0e30,
	0x0e32, 0x0e32,
	0x0e40, 0x0e46,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb0,
	0x0eb2, 0x0eb2,
	0x0ebd, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0edc, 0x0edd,
	0x0f00, 0x0f00,
	0x0f40, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f88, 0x0f8c,
	0x1000, 0x102a,
	0x103f, 0x103f,
	0x1050, 0x1055,
	0x105a, 0x105d,
	0x1061, 0x1061,
	0x1065, 0x1066,
	0x106e, 0x1070,
	0x1075, 0x1081,
	0x108e, 0x108e,
	0x10a0, 0x10c5,
	0x10d0, 0x10fa,
	0x10fc, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16ee, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1711,
	0x1720, 0x1731,
	0x1740, 0x1751,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1780, 0x17b3,
	0x17d7, 0x17d7,
	0x17dc, 0x17dc,
	0x1820, 0x1877,
	0x1880, 0x18a8,
	0x18aa, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1950, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19c1, 0x19c7,
	0x1a00, 0x1a16,
	0x1a20, 0x1a54,
	0x1aa7, 0x1aa7,
	0x1b05, 0x1b33,
	0x1b45, 0x1b4b,
	0x1b83, 0x1ba0,
	0x1bae, 0x1baf,
	0x1bc0, 0x1be5,
	0x1c00, 0x1c23,
	0x1c4d, 0x1c4f,
	0x1c5a, 0x1c7d,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf1,
	0x1d00, 0x1dbf,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2118, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cee,
	0x2d00, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x3005, 0x3007,
	0x3021, 0x3029,
	0x3031, 0x3035,
	0x3038, 0x303c,
	0x3041, 0x3096,
	0x309d, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcb,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa61f,
	0xa62a, 0xa62b,
	0xa640, 0xa66e,
	0xa67f, 0xa697,
	0xa6a0, 0xa6ef,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa801,
	0xa803, 0xa805,
	0xa807, 0xa80a,
	0xa80c, 0xa822,
	0xa840, 0xa873,
	0xa882, 0xa8b3,
	0xa8f2, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa90a, 0xa925,
	0xa930, 0xa946,
	0xa960, 0xa97c,
	0xa984, 0xa9b2,
	0xa9cf, 0xa9cf,
	0xaa00, 0xaa28,
	0xaa40, 0xaa42,
	0xaa44, 0xaa4b,
	0xaa60, 0xaa76,
	0xaa7a, 0xaa7a,
	0xaa80, 0xaaaf,
	0xaab1, 0xaab1,
	0xaab5, 0xaab6,
	0xaab9, 0xaabd,
	0xaac0, 0xaac0,
	0xaac2, 0xaac2,
	0xaadb, 0xaadd,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabe2,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb1d,
	0xfb1f, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfc5d,
	0xfc64, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdf9,
	0xfe71, 0xfe71,
	0xfe73, 0xfe73,
	0xfe77, 0xfe77,
	0xfe79, 0xfe79,
	0xfe7b, 0xfe7b,
	0xfe7d, 0xfe7d,
	0xfe7f, 0xfefc,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
	0xff66, 0xff9d,
	0xffa0, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10140, 0x10174,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x103d1, 0x103d5,
	0x10400, 0x1049d,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10a00, 0x10a00,
	0x10a10, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a60, 0x10a7c,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10c00, 0x10c48,
	0x11003, 0x11037,
	0x11083, 0x110af,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_XID_Start */

/* 'XID_Continue': Derived Property */
static const OnigCodePoint CR_XID_Continue[] = {
	521,
	0x0030, 0x0039,
	0x0041, 0x005a,
	0x005f, 0x005f,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00b5, 0x00b5,
	0x00b7, 0x00b7,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02c1,
	0x02c6, 0x02d1,
	0x02e0, 0x02e4,
	0x02ec, 0x02ec,
	0x02ee, 0x02ee,
	0x0300, 0x0374,
	0x0376, 0x0377,
	0x037b, 0x037d,
	0x0386, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03f5,
	0x03f7, 0x0481,
	0x0483, 0x0487,
	0x048a, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x0559,
	0x0561, 0x0587,
	0x0591, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f2,
	0x0610, 0x061a,
	0x0620, 0x0669,
	0x066e, 0x06d3,
	0x06d5, 0x06dc,
	0x06df, 0x06e8,
	0x06ea, 0x06fc,
	0x06ff, 0x06ff,
	0x0710, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07f5,
	0x07fa, 0x07fa,
	0x0800, 0x082d,
	0x0840, 0x085b,
	0x0900, 0x0963,
	0x0966, 0x096f,
	0x0971, 0x0977,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09f1,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b6f,
	0x0b71, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bef,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d6f,
	0x0d7a, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df3,
	0x0e01, 0x0e3a,
	0x0e40, 0x0e4e,
	0x0e50, 0x0e59,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f00,
	0x0f18, 0x0f19,
	0x0f20, 0x0f29,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f3e, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f84,
	0x0f86, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fc6, 0x0fc6,
	0x1000, 0x1049,
	0x1050, 0x109d,
	0x10a0, 0x10c5,
	0x10d0, 0x10fa,
	0x10fc, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x135f,
	0x1369, 0x1371,
	0x1380, 0x138f,
	0x13a0, 0x13f4,
	0x1401, 0x166c,
	0x166f, 0x167f,
	0x1681, 0x169a,
	0x16a0, 0x16ea,
	0x16ee, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1734,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17b3,
	0x17b6, 0x17d3,
	0x17d7, 0x17d7,
	0x17dc, 0x17dd,
	0x17e0, 0x17e9,
	0x180b, 0x180d,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1946, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x1a00, 0x1a1b,
	0x1a20, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa7, 0x1aa7,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b59,
	0x1b6b, 0x1b73,
	0x1b80, 0x1baa,
	0x1bae, 0x1bb9,
	0x1bc0, 0x1bf3,
	0x1c00, 0x1c37,
	0x1c40, 0x1c49,
	0x1c4d, 0x1c7d,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1cf2,
	0x1d00, 0x1de6,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fbc,
	0x1fbe, 0x1fbe,
	0x1fc2, 0x1fc4,
	0x1fc6, 0x1fcc,
	0x1fd0, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fe0, 0x1fec,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffc,
	0x203f, 0x2040,
	0x2054, 0x2054,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x20d0, 0x20dc,
	0x20e1, 0x20e1,
	0x20e5, 0x20f0,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2118, 0x211d,
	0x2124, 0x2124,
	0x2126, 0x2126,
	0x2128, 0x2128,
	0x212a, 0x2139,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2ce4,
	0x2ceb, 0x2cf1,
	0x2d00, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2dff,
	0x3005, 0x3007,
	0x3021, 0x302f,
	0x3031, 0x3035,
	0x3038, 0x303c,
	0x3041, 0x3096,
	0x3099, 0x309a,
	0x309d, 0x309f,
	0x30a1, 0x30fa,
	0x30fc, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x31a0, 0x31ba,
	0x31f0, 0x31ff,
	0x3400, 0x4db5,
	0x4e00, 0x9fcb,
	0xa000, 0xa48c,
	0xa4d0, 0xa4fd,
	0xa500, 0xa60c,
	0xa610, 0xa62b,
	0xa640, 0xa66f,
	0xa67c, 0xa67d,
	0xa67f, 0xa697,
	0xa6a0, 0xa6f1,
	0xa717, 0xa71f,
	0xa722, 0xa788,
	0xa78b, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa827,
	0xa840, 0xa873,
	0xa880, 0xa8c4,
	0xa8d0, 0xa8d9,
	0xa8e0, 0xa8f7,
	0xa8fb, 0xa8fb,
	0xa900, 0xa92d,
	0xa930, 0xa953,
	0xa960, 0xa97c,
	0xa980, 0xa9c0,
	0xa9cf, 0xa9d9,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa60, 0xaa76,
	0xaa7a, 0xaa7b,
	0xaa80, 0xaac2,
	0xaadb, 0xaadd,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabea,
	0xabec, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb28,
	0xfb2a, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfc5d,
	0xfc64, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdf9,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe26,
	0xfe33, 0xfe34,
	0xfe4d, 0xfe4f,
	0xfe71, 0xfe71,
	0xfe73, 0xfe73,
	0xfe77, 0xfe77,
	0xfe79, 0xfe79,
	0xfe7b, 0xfe7b,
	0xfe7d, 0xfe7d,
	0xfe7f, 0xfefc,
	0xff10, 0xff19,
	0xff21, 0xff3a,
	0xff3f, 0xff3f,
	0xff41, 0xff5a,
	0xff66, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10140, 0x10174,
	0x101fd, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x103a0, 0x103c3,
	0x103c8, 0x103cf,
	0x103d1, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10900, 0x10915,
	0x10920, 0x10939,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a3f,
	0x10a60, 0x10a7c,
	0x10b00, 0x10b35,
	0x10b40, 0x10b55,
	0x10b60, 0x10b72,
	0x10c00, 0x10c48,
	0x11000, 0x11046,
	0x11066, 0x1106f,
	0x11080, 0x110ba,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x1d165, 0x1d169,
	0x1d16d, 0x1d172,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1d242, 0x1d244,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0xe0100, 0xe01ef,
}; /* CR_XID_Continue */

/* 'Default_Ignorable_Code_Point': Derived Property */
static const OnigCodePoint CR_Default_Ignorable_Code_Point[] = {
	15,
	0x00ad, 0x00ad,
	0x034f, 0x034f,
	0x115f, 0x1160,
	0x17b4, 0x17b5,
	0x180b, 0x180d,
	0x200b, 0x200f,
	0x202a, 0x202e,
	0x2060, 0x206f,
	0x3164, 0x3164,
	0xfe00, 0xfe0f,
	0xfeff, 0xfeff,
	0xffa0, 0xffa0,
	0xfff0, 0xfff8,
	0x1d173, 0x1d17a,
	0xe0000, 0xe0fff,
}; /* CR_Default_Ignorable_Code_Point */

/* 'Grapheme_Extend': Derived Property */
static const OnigCodePoint CR_Grapheme_Extend[] = {
	215,
	0x0300, 0x036f,
	0x0483, 0x0489,
	0x0591, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x0610, 0x061a,
	0x064b, 0x065f,
	0x0670, 0x0670,
	0x06d6, 0x06dc,
	0x06df, 0x06e4,
	0x06e7, 0x06e8,
	0x06ea, 0x06ed,
	0x0711, 0x0711,
	0x0730, 0x074a,
	0x07a6, 0x07b0,
	0x07eb, 0x07f3,
	0x0816, 0x0819,
	0x081b, 0x0823,
	0x0825, 0x0827,
	0x0829, 0x082d,
	0x0859, 0x085b,
	0x0900, 0x0902,
	0x093a, 0x093a,
	0x093c, 0x093c,
	0x0941, 0x0948,
	0x094d, 0x094d,
	0x0951, 0x0957,
	0x0962, 0x0963,
	0x0981, 0x0981,
	0x09bc, 0x09bc,
	0x09be, 0x09be,
	0x09c1, 0x09c4,
	0x09cd, 0x09cd,
	0x09d7, 0x09d7,
	0x09e2, 0x09e3,
	0x0a01, 0x0a02,
	0x0a3c, 0x0a3c,
	0x0a41, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a70, 0x0a71,
	0x0a75, 0x0a75,
	0x0a81, 0x0a82,
	0x0abc, 0x0abc,
	0x0ac1, 0x0ac5,
	0x0ac7, 0x0ac8,
	0x0acd, 0x0acd,
	0x0ae2, 0x0ae3,
	0x0b01, 0x0b01,
	0x0b3c, 0x0b3c,
	0x0b3e, 0x0b3f,
	0x0b41, 0x0b44,
	0x0b4d, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b62, 0x0b63,
	0x0b82, 0x0b82,
	0x0bbe, 0x0bbe,
	0x0bc0, 0x0bc0,
	0x0bcd, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0c3e, 0x0c40,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c62, 0x0c63,
	0x0cbc, 0x0cbc,
	0x0cbf, 0x0cbf,
	0x0cc2, 0x0cc2,
	0x0cc6, 0x0cc6,
	0x0ccc, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0ce2, 0x0ce3,
	0x0d3e, 0x0d3e,
	0x0d41, 0x0d44,
	0x0d4d, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d62, 0x0d63,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dcf,
	0x0dd2, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0ddf, 0x0ddf,
	0x0e31, 0x0e31,
	0x0e34, 0x0e3a,
	0x0e47, 0x0e4e,
	0x0eb1, 0x0eb1,
	0x0eb4, 0x0eb9,
	0x0ebb, 0x0ebc,
	0x0ec8, 0x0ecd,
	0x0f18, 0x0f19,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f71, 0x0f7e,
	0x0f80, 0x0f84,
	0x0f86, 0x0f87,
	0x0f8d, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fc6, 0x0fc6,
	0x102d, 0x1030,
	0x1032, 0x1037,
	0x1039, 0x103a,
	0x103d, 0x103e,
	0x1058, 0x1059,
	0x105e, 0x1060,
	0x1071, 0x1074,
	0x1082, 0x1082,
	0x1085, 0x1086,
	0x108d, 0x108d,
	0x109d, 0x109d,
	0x135d, 0x135f,
	0x1712, 0x1714,
	0x1732, 0x1734,
	0x1752, 0x1753,
	0x1772, 0x1773,
	0x17b7, 0x17bd,
	0x17c6, 0x17c6,
	0x17c9, 0x17d3,
	0x17dd, 0x17dd,
	0x180b, 0x180d,
	0x18a9, 0x18a9,
	0x1920, 0x1922,
	0x1927, 0x1928,
	0x1932, 0x1932,
	0x1939, 0x193b,
	0x1a17, 0x1a18,
	0x1a56, 0x1a56,
	0x1a58, 0x1a5e,
	0x1a60, 0x1a60,
	0x1a62, 0x1a62,
	0x1a65, 0x1a6c,
	0x1a73, 0x1a7c,
	0x1a7f, 0x1a7f,
	0x1b00, 0x1b03,
	0x1b34, 0x1b34,
	0x1b36, 0x1b3a,
	0x1b3c, 0x1b3c,
	0x1b42, 0x1b42,
	0x1b6b, 0x1b73,
	0x1b80, 0x1b81,
	0x1ba2, 0x1ba5,
	0x1ba8, 0x1ba9,
	0x1be6, 0x1be6,
	0x1be8, 0x1be9,
	0x1bed, 0x1bed,
	0x1bef, 0x1bf1,
	0x1c2c, 0x1c33,
	0x1c36, 0x1c37,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1ce0,
	0x1ce2, 0x1ce8,
	0x1ced, 0x1ced,
	0x1dc0, 0x1de6,
	0x1dfc, 0x1dff,
	0x200c, 0x200d,
	0x20d0, 0x20f0,
	0x2cef, 0x2cf1,
	0x2d7f, 0x2d7f,
	0x2de0, 0x2dff,
	0x302a, 0x302f,
	0x3099, 0x309a,
	0xa66f, 0xa672,
	0xa67c, 0xa67d,
	0xa6f0, 0xa6f1,
	0xa802, 0xa802,
	0xa806, 0xa806,
	0xa80b, 0xa80b,
	0xa825, 0xa826,
	0xa8c4, 0xa8c4,
	0xa8e0, 0xa8f1,
	0xa926, 0xa92d,
	0xa947, 0xa951,
	0xa980, 0xa982,
	0xa9b3, 0xa9b3,
	0xa9b6, 0xa9b9,
	0xa9bc, 0xa9bc,
	0xaa29, 0xaa2e,
	0xaa31, 0xaa32,
	0xaa35, 0xaa36,
	0xaa43, 0xaa43,
	0xaa4c, 0xaa4c,
	0xaab0, 0xaab0,
	0xaab2, 0xaab4,
	0xaab7, 0xaab8,
	0xaabe, 0xaabf,
	0xaac1, 0xaac1,
	0xabe5, 0xabe5,
	0xabe8, 0xabe8,
	0xabed, 0xabed,
	0xfb1e, 0xfb1e,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe26,
	0xff9e, 0xff9f,
	0x101fd, 0x101fd,
	0x10a01, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a0f,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a3f,
	0x11001, 0x11001,
	0x11038, 0x11046,
	0x11080, 0x11081,
	0x110b3, 0x110b6,
	0x110b9, 0x110ba,
	0x1d165, 0x1d165,
	0x1d167, 0x1d169,
	0x1d16e, 0x1d172,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0x1d242, 0x1d244,
	0xe0100, 0xe01ef,
}; /* CR_Grapheme_Extend */

/* 'Grapheme_Base': Derived Property */
static const OnigCodePoint CR_Grapheme_Base[] = {
	596,
	0x0020, 0x007e,
	0x00a0, 0x00ac,
	0x00ae, 0x02ff,
	0x0370, 0x0377,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x0482,
	0x048a, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x05be, 0x05be,
	0x05c0, 0x05c0,
	0x05c3, 0x05c3,
	0x05c6, 0x05c6,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0606, 0x060f,
	0x061b, 0x061b,
	0x061e, 0x064a,
	0x0660, 0x066f,
	0x0671, 0x06d5,
	0x06de, 0x06de,
	0x06e5, 0x06e6,
	0x06e9, 0x06e9,
	0x06ee, 0x070d,
	0x0710, 0x0710,
	0x0712, 0x072f,
	0x074d, 0x07a5,
	0x07b1, 0x07b1,
	0x07c0, 0x07ea,
	0x07f4, 0x07fa,
	0x0800, 0x0815,
	0x081a, 0x081a,
	0x0824, 0x0824,
	0x0828, 0x0828,
	0x0830, 0x083e,
	0x0840, 0x0858,
	0x085e, 0x085e,
	0x0903, 0x0939,
	0x093b, 0x093b,
	0x093d, 0x0940,
	0x0949, 0x094c,
	0x094e, 0x0950,
	0x0958, 0x0961,
	0x0964, 0x0977,
	0x0979, 0x097f,
	0x0982, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bd, 0x09bd,
	0x09bf, 0x09c0,
	0x09c7, 0x09c8,
	0x09cb, 0x09cc,
	0x09ce, 0x09ce,
	0x09dc, 0x09dd,
	0x09df, 0x09e1,
	0x09e6, 0x09fb,
	0x0a03, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3e, 0x0a40,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a6f,
	0x0a72, 0x0a74,
	0x0a83, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abd, 0x0ac0,
	0x0ac9, 0x0ac9,
	0x0acb, 0x0acc,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae1,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b02, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3d, 0x0b3d,
	0x0b40, 0x0b40,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4c,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b77,
	0x0b83, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbf, 0x0bbf,
	0x0bc1, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcc,
	0x0bd0, 0x0bd0,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c3d,
	0x0c41, 0x0c44,
	0x0c58, 0x0c59,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbd, 0x0cbe,
	0x0cc0, 0x0cc1,
	0x0cc3, 0x0cc4,
	0x0cc7, 0x0cc8,
	0x0cca, 0x0ccb,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d3d,
	0x0d3f, 0x0d40,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4c,
	0x0d4e, 0x0d4e,
	0x0d60, 0x0d61,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dd0, 0x0dd1,
	0x0dd8, 0x0dde,
	0x0df2, 0x0df4,
	0x0e01, 0x0e30,
	0x0e32, 0x0e33,
	0x0e3f, 0x0e46,
	0x0e4f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb0,
	0x0eb2, 0x0eb3,
	0x0ebd, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f17,
	0x0f1a, 0x0f34,
	0x0f36, 0x0f36,
	0x0f38, 0x0f38,
	0x0f3a, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f7f, 0x0f7f,
	0x0f85, 0x0f85,
	0x0f88, 0x0f8c,
	0x0fbe, 0x0fc5,
	0x0fc7, 0x0fcc,
	0x0fce, 0x0fda,
	0x1000, 0x102c,
	0x1031, 0x1031,
	0x1038, 0x1038,
	0x103b, 0x103c,
	0x103f, 0x1057,
	0x105a, 0x105d,
	0x1061, 0x1070,
	0x1075, 0x1081,
	0x1083, 0x1084,
	0x1087, 0x108c,
	0x108e, 0x109c,
	0x109e, 0x10c5,
	0x10d0, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x1360, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1711,
	0x1720, 0x1731,
	0x1735, 0x1736,
	0x1740, 0x1751,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1780, 0x17b3,
	0x17b6, 0x17b6,
	0x17be, 0x17c5,
	0x17c7, 0x17c8,
	0x17d4, 0x17dc,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180a,
	0x180e, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18a8,
	0x18aa, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1923, 0x1926,
	0x1929, 0x192b,
	0x1930, 0x1931,
	0x1933, 0x1938,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a16,
	0x1a19, 0x1a1b,
	0x1a1e, 0x1a55,
	0x1a57, 0x1a57,
	0x1a61, 0x1a61,
	0x1a63, 0x1a64,
	0x1a6d, 0x1a72,
	0x1a80, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1b04, 0x1b33,
	0x1b35, 0x1b35,
	0x1b3b, 0x1b3b,
	0x1b3d, 0x1b41,
	0x1b43, 0x1b4b,
	0x1b50, 0x1b6a,
	0x1b74, 0x1b7c,
	0x1b82, 0x1ba1,
	0x1ba6, 0x1ba7,
	0x1baa, 0x1baa,
	0x1bae, 0x1bb9,
	0x1bc0, 0x1be5,
	0x1be7, 0x1be7,
	0x1bea, 0x1bec,
	0x1bee, 0x1bee,
	0x1bf2, 0x1bf3,
	0x1bfc, 0x1c2b,
	0x1c34, 0x1c35,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cd3, 0x1cd3,
	0x1ce1, 0x1ce1,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf2,
	0x1d00, 0x1dbf,
	0x1e00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x200a,
	0x2010, 0x2027,
	0x202f, 0x205f,
	0x2070, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x209c,
	0x20a0, 0x20b9,
	0x2100, 0x2189,
	0x2190, 0x23f3,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x26ff,
	0x2701, 0x27ca,
	0x27cc, 0x27cc,
	0x27ce, 0x2b4c,
	0x2b50, 0x2b59,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cee,
	0x2cf9, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d70,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2e00, 0x2e31,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x3029,
	0x3030, 0x303f,
	0x3041, 0x3096,
	0x309b, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31ba,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcb,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa66e,
	0xa673, 0xa673,
	0xa67e, 0xa697,
	0xa6a0, 0xa6ef,
	0xa6f2, 0xa6f7,
	0xa700, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa801,
	0xa803, 0xa805,
	0xa807, 0xa80a,
	0xa80c, 0xa824,
	0xa827, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c3,
	0xa8ce, 0xa8d9,
	0xa8f2, 0xa8fb,
	0xa900, 0xa925,
	0xa92e, 0xa946,
	0xa952, 0xa953,
	0xa95f, 0xa97c,
	0xa983, 0xa9b2,
	0xa9b4, 0xa9b5,
	0xa9ba, 0xa9bb,
	0xa9bd, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9df,
	0xaa00, 0xaa28,
	0xaa2f, 0xaa30,
	0xaa33, 0xaa34,
	0xaa40, 0xaa42,
	0xaa44, 0xaa4b,
	0xaa4d, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa7b,
	0xaa80, 0xaaaf,
	0xaab1, 0xaab1,
	0xaab5, 0xaab6,
	0xaab9, 0xaabd,
	0xaac0, 0xaac0,
	0xaac2, 0xaac2,
	0xaadb, 0xaadf,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabe4,
	0xabe6, 0xabe7,
	0xabe9, 0xabec,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xf900, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb1d,
	0xfb1f, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbc1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfd,
	0xfe10, 0xfe19,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xff01, 0xff9d,
	0xffa0, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfffc, 0xfffd,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10190, 0x1019b,
	0x101d0, 0x101fc,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1085f,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10a00, 0x10a00,
	0x10a10, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a40, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a7f,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b7f,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11000, 0x11000,
	0x11002, 0x11037,
	0x11047, 0x1104d,
	0x11052, 0x1106f,
	0x11082, 0x110b2,
	0x110b7, 0x110b8,
	0x110bb, 0x110bc,
	0x110be, 0x110c1,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d164,
	0x1d166, 0x1d166,
	0x1d16a, 0x1d16d,
	0x1d183, 0x1d184,
	0x1d18c, 0x1d1a9,
	0x1d1ae, 0x1d1dd,
	0x1d200, 0x1d241,
	0x1d245, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0be,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0df,
	0x1f100, 0x1f10a,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f169,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f320,
	0x1f330, 0x1f335,
	0x1f337, 0x1f37c,
	0x1f380, 0x1f393,
	0x1f3a0, 0x1f3c4,
	0x1f3c6, 0x1f3ca,
	0x1f3e0, 0x1f3f0,
	0x1f400, 0x1f43e,
	0x1f440, 0x1f440,
	0x1f442, 0x1f4f7,
	0x1f4f9, 0x1f4fc,
	0x1f500, 0x1f53d,
	0x1f550, 0x1f567,
	0x1f5fb, 0x1f5ff,
	0x1f601, 0x1f610,
	0x1f612, 0x1f614,
	0x1f616, 0x1f616,
	0x1f618, 0x1f618,
	0x1f61a, 0x1f61a,
	0x1f61c, 0x1f61e,
	0x1f620, 0x1f625,
	0x1f628, 0x1f62b,
	0x1f62d, 0x1f62d,
	0x1f630, 0x1f633,
	0x1f635, 0x1f640,
	0x1f645, 0x1f64f,
	0x1f680, 0x1f6c5,
	0x1f700, 0x1f773,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_Grapheme_Base */

/* 'Grapheme_Link': Derived Property */
static const OnigCodePoint CR_Grapheme_Link[] = {
	29,
	0x094d, 0x094d,
	0x09cd, 0x09cd,
	0x0a4d, 0x0a4d,
	0x0acd, 0x0acd,
	0x0b4d, 0x0b4d,
	0x0bcd, 0x0bcd,
	0x0c4d, 0x0c4d,
	0x0ccd, 0x0ccd,
	0x0d4d, 0x0d4d,
	0x0dca, 0x0dca,
	0x0e3a, 0x0e3a,
	0x0f84, 0x0f84,
	0x1039, 0x103a,
	0x1714, 0x1714,
	0x1734, 0x1734,
	0x17d2, 0x17d2,
	0x1a60, 0x1a60,
	0x1b44, 0x1b44,
	0x1baa, 0x1baa,
	0x1bf2, 0x1bf3,
	0x2d7f, 0x2d7f,
	0xa806, 0xa806,
	0xa8c4, 0xa8c4,
	0xa953, 0xa953,
	0xa9c0, 0xa9c0,
	0xabed, 0xabed,
	0x10a3f, 0x10a3f,
	0x11046, 0x11046,
	0x110b9, 0x110b9,
}; /* CR_Grapheme_Link */

/* 'Common': Script */
static const OnigCodePoint CR_Common[] = {
	169,
	0x0000, 0x0040,
	0x005b, 0x0060,
	0x007b, 0x00a9,
	0x00ab, 0x00b9,
	0x00bb, 0x00bf,
	0x00d7, 0x00d7,
	0x00f7, 0x00f7,
	0x02b9, 0x02df,
	0x02e5, 0x02e9,
	0x02ec, 0x02ff,
	0x0374, 0x0374,
	0x037e, 0x037e,
	0x0385, 0x0385,
	0x0387, 0x0387,
	0x0589, 0x0589,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0640, 0x0640,
	0x0660, 0x0669,
	0x06dd, 0x06dd,
	0x0964, 0x0965,
	0x0970, 0x0970,
	0x0e3f, 0x0e3f,
	0x0fd5, 0x0fd8,
	0x10fb, 0x10fb,
	0x16eb, 0x16ed,
	0x1735, 0x1736,
	0x1802, 0x1803,
	0x1805, 0x1805,
	0x1cd3, 0x1cd3,
	0x1ce1, 0x1ce1,
	0x1ce9, 0x1cec,
	0x1cee, 0x1cf2,
	0x2000, 0x200b,
	0x200e, 0x2064,
	0x206a, 0x2070,
	0x2074, 0x207e,
	0x2080, 0x208e,
	0x20a0, 0x20b9,
	0x2100, 0x2125,
	0x2127, 0x2129,
	0x212c, 0x2131,
	0x2133, 0x214d,
	0x214f, 0x215f,
	0x2189, 0x2189,
	0x2190, 0x23f3,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x26ff,
	0x2701, 0x27ca,
	0x27cc, 0x27cc,
	0x27ce, 0x27ff,
	0x2900, 0x2b4c,
	0x2b50, 0x2b59,
	0x2e00, 0x2e31,
	0x2ff0, 0x2ffb,
	0x3000, 0x3004,
	0x3006, 0x3006,
	0x3008, 0x3020,
	0x3030, 0x3037,
	0x303c, 0x303f,
	0x309b, 0x309c,
	0x30a0, 0x30a0,
	0x30fb, 0x30fc,
	0x3190, 0x319f,
	0x31c0, 0x31e3,
	0x3220, 0x325f,
	0x327f, 0x32cf,
	0x3358, 0x33ff,
	0x4dc0, 0x4dff,
	0xa700, 0xa721,
	0xa788, 0xa78a,
	0xa830, 0xa839,
	0xfd3e, 0xfd3f,
	0xfdfd, 0xfdfd,
	0xfe10, 0xfe19,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfeff, 0xfeff,
	0xff01, 0xff20,
	0xff3b, 0xff40,
	0xff5b, 0xff65,
	0xff70, 0xff70,
	0xff9e, 0xff9f,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0xfffd,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1013f,
	0x10190, 0x1019b,
	0x101d0, 0x101fc,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d166,
	0x1d16a, 0x1d17a,
	0x1d183, 0x1d184,
	0x1d18c, 0x1d1a9,
	0x1d1ae, 0x1d1dd,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0be,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0df,
	0x1f100, 0x1f10a,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f169,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f1ff,
	0x1f201, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f320,
	0x1f330, 0x1f335,
	0x1f337, 0x1f37c,
	0x1f380, 0x1f393,
	0x1f3a0, 0x1f3c4,
	0x1f3c6, 0x1f3ca,
	0x1f3e0, 0x1f3f0,
	0x1f400, 0x1f43e,
	0x1f440, 0x1f440,
	0x1f442, 0x1f4f7,
	0x1f4f9, 0x1f4fc,
	0x1f500, 0x1f53d,
	0x1f550, 0x1f567,
	0x1f5fb, 0x1f5ff,
	0x1f601, 0x1f610,
	0x1f612, 0x1f614,
	0x1f616, 0x1f616,
	0x1f618, 0x1f618,
	0x1f61a, 0x1f61a,
	0x1f61c, 0x1f61e,
	0x1f620, 0x1f625,
	0x1f628, 0x1f62b,
	0x1f62d, 0x1f62d,
	0x1f630, 0x1f633,
	0x1f635, 0x1f640,
	0x1f645, 0x1f64f,
	0x1f680, 0x1f6c5,
	0x1f700, 0x1f773,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
}; /* CR_Common */

/* 'Latin': Script */
static const OnigCodePoint CR_Latin[] = {
	30,
	0x0041, 0x005a,
	0x0061, 0x007a,
	0x00aa, 0x00aa,
	0x00ba, 0x00ba,
	0x00c0, 0x00d6,
	0x00d8, 0x00f6,
	0x00f8, 0x02b8,
	0x02e0, 0x02e4,
	0x1d00, 0x1d25,
	0x1d2c, 0x1d5c,
	0x1d62, 0x1d65,
	0x1d6b, 0x1d77,
	0x1d79, 0x1dbe,
	0x1e00, 0x1eff,
	0x2071, 0x2071,
	0x207f, 0x207f,
	0x2090, 0x209c,
	0x212a, 0x212b,
	0x2132, 0x2132,
	0x214e, 0x214e,
	0x2160, 0x2188,
	0x2c60, 0x2c7f,
	0xa722, 0xa787,
	0xa78b, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa7ff,
	0xfb00, 0xfb06,
	0xff21, 0xff3a,
	0xff41, 0xff5a,
}; /* CR_Latin */

/* 'Greek': Script */
static const OnigCodePoint CR_Greek[] = {
	33,
	0x0370, 0x0373,
	0x0375, 0x0377,
	0x037a, 0x037d,
	0x0384, 0x0384,
	0x0386, 0x0386,
	0x0388, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03e1,
	0x03f0, 0x03ff,
	0x1d26, 0x1d2a,
	0x1d5d, 0x1d61,
	0x1d66, 0x1d6a,
	0x1dbf, 0x1dbf,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2126, 0x2126,
	0x10140, 0x1018a,
	0x1d200, 0x1d245,
}; /* CR_Greek */

/* 'Cyrillic': Script */
static const OnigCodePoint CR_Cyrillic[] = {
	7,
	0x0400, 0x0484,
	0x0487, 0x0527,
	0x1d2b, 0x1d2b,
	0x1d78, 0x1d78,
	0x2de0, 0x2dff,
	0xa640, 0xa673,
	0xa67c, 0xa697,
}; /* CR_Cyrillic */

/* 'Armenian': Script */
static const OnigCodePoint CR_Armenian[] = {
	5,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x058a, 0x058a,
	0xfb13, 0xfb17,
}; /* CR_Armenian */

/* 'Hebrew': Script */
static const OnigCodePoint CR_Hebrew[] = {
	9,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfb4f,
}; /* CR_Hebrew */

/* 'Arabic': Script */
static const OnigCodePoint CR_Arabic[] = {
	19,
	0x0600, 0x0603,
	0x0606, 0x060b,
	0x060d, 0x061a,
	0x061e, 0x061e,
	0x0620, 0x063f,
	0x0641, 0x064a,
	0x0656, 0x065e,
	0x066a, 0x066f,
	0x0671, 0x06dc,
	0x06de, 0x06ff,
	0x0750, 0x077f,
	0xfb50, 0xfbc1,
	0xfbd3, 0xfd3d,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfc,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0x10e60, 0x10e7e,
}; /* CR_Arabic */

/* 'Syriac': Script */
static const OnigCodePoint CR_Syriac[] = {
	3,
	0x0700, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x074f,
}; /* CR_Syriac */

/* 'Thaana': Script */
static const OnigCodePoint CR_Thaana[] = {
	1,
	0x0780, 0x07b1,
}; /* CR_Thaana */

/* 'Devanagari': Script */
static const OnigCodePoint CR_Devanagari[] = {
	6,
	0x0900, 0x0950,
	0x0953, 0x0963,
	0x0966, 0x096f,
	0x0971, 0x0977,
	0x0979, 0x097f,
	0xa8e0, 0xa8fb,
}; /* CR_Devanagari */

/* 'Bengali': Script */
static const OnigCodePoint CR_Bengali[] = {
	14,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
}; /* CR_Bengali */

/* 'Gurmukhi': Script */
static const OnigCodePoint CR_Gurmukhi[] = {
	16,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
}; /* CR_Gurmukhi */

/* 'Gujarati': Script */
static const OnigCodePoint CR_Gujarati[] = {
	14,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
}; /* CR_Gujarati */

/* 'Oriya': Script */
static const OnigCodePoint CR_Oriya[] = {
	14,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b77,
}; /* CR_Oriya */

/* 'Tamil': Script */
static const OnigCodePoint CR_Tamil[] = {
	16,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
}; /* CR_Tamil */

/* 'Telugu': Script */
static const OnigCodePoint CR_Telugu[] = {
	14,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
}; /* CR_Telugu */

/* 'Kannada': Script */
static const OnigCodePoint CR_Kannada[] = {
	14,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
}; /* CR_Kannada */

/* 'Malayalam': Script */
static const OnigCodePoint CR_Malayalam[] = {
	11,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
}; /* CR_Malayalam */

/* 'Sinhala': Script */
static const OnigCodePoint CR_Sinhala[] = {
	11,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
}; /* CR_Sinhala */

/* 'Thai': Script */
static const OnigCodePoint CR_Thai[] = {
	2,
	0x0e01, 0x0e3a,
	0x0e40, 0x0e5b,
}; /* CR_Thai */

/* 'Lao': Script */
static const OnigCodePoint CR_Lao[] = {
	18,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
}; /* CR_Lao */

/* 'Tibetan': Script */
static const OnigCodePoint CR_Tibetan[] = {
	7,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fd4,
	0x0fd9, 0x0fda,
}; /* CR_Tibetan */

/* 'Myanmar': Script */
static const OnigCodePoint CR_Myanmar[] = {
	2,
	0x1000, 0x109f,
	0xaa60, 0xaa7b,
}; /* CR_Myanmar */

/* 'Georgian': Script */
static const OnigCodePoint CR_Georgian[] = {
	4,
	0x10a0, 0x10c5,
	0x10d0, 0x10fa,
	0x10fc, 0x10fc,
	0x2d00, 0x2d25,
}; /* CR_Georgian */

/* 'Hangul': Script */
static const OnigCodePoint CR_Hangul[] = {
	14,
	0x1100, 0x11ff,
	0x302e, 0x302f,
	0x3131, 0x318e,
	0x3200, 0x321e,
	0x3260, 0x327e,
	0xa960, 0xa97c,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xffa0, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
}; /* CR_Hangul */

/* 'Ethiopic': Script */
static const OnigCodePoint CR_Ethiopic[] = {
	32,
	0x1200, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x137c,
	0x1380, 0x1399,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
}; /* CR_Ethiopic */

/* 'Cherokee': Script */
static const OnigCodePoint CR_Cherokee[] = {
	1,
	0x13a0, 0x13f4,
}; /* CR_Cherokee */

/* 'Canadian_Aboriginal': Script */
static const OnigCodePoint CR_Canadian_Aboriginal[] = {
	2,
	0x1400, 0x167f,
	0x18b0, 0x18f5,
}; /* CR_Canadian_Aboriginal */

/* 'Ogham': Script */
static const OnigCodePoint CR_Ogham[] = {
	1,
	0x1680, 0x169c,
}; /* CR_Ogham */

/* 'Runic': Script */
static const OnigCodePoint CR_Runic[] = {
	2,
	0x16a0, 0x16ea,
	0x16ee, 0x16f0,
}; /* CR_Runic */

/* 'Khmer': Script */
static const OnigCodePoint CR_Khmer[] = {
	4,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x19e0, 0x19ff,
}; /* CR_Khmer */

/* 'Mongolian': Script */
static const OnigCodePoint CR_Mongolian[] = {
	6,
	0x1800, 0x1801,
	0x1804, 0x1804,
	0x1806, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
}; /* CR_Mongolian */

/* 'Hiragana': Script */
static const OnigCodePoint CR_Hiragana[] = {
	4,
	0x3041, 0x3096,
	0x309d, 0x309f,
	0x1b001, 0x1b001,
	0x1f200, 0x1f200,
}; /* CR_Hiragana */

/* 'Katakana': Script */
static const OnigCodePoint CR_Katakana[] = {
	8,
	0x30a1, 0x30fa,
	0x30fd, 0x30ff,
	0x31f0, 0x31ff,
	0x32d0, 0x32fe,
	0x3300, 0x3357,
	0xff66, 0xff6f,
	0xff71, 0xff9d,
	0x1b000, 0x1b000,
}; /* CR_Katakana */

/* 'Bopomofo': Script */
static const OnigCodePoint CR_Bopomofo[] = {
	3,
	0x02ea, 0x02eb,
	0x3105, 0x312d,
	0x31a0, 0x31ba,
}; /* CR_Bopomofo */

/* 'Han': Script */
static const OnigCodePoint CR_Han[] = {
	16,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x3005, 0x3005,
	0x3007, 0x3007,
	0x3021, 0x3029,
	0x3038, 0x303b,
	0x3400, 0x4db5,
	0x4e00, 0x9fcb,
	0xf900, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_Han */

/* 'Yi': Script */
static const OnigCodePoint CR_Yi[] = {
	2,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
}; /* CR_Yi */

/* 'Old_Italic': Script */
static const OnigCodePoint CR_Old_Italic[] = {
	2,
	0x10300, 0x1031e,
	0x10320, 0x10323,
}; /* CR_Old_Italic */

/* 'Gothic': Script */
static const OnigCodePoint CR_Gothic[] = {
	1,
	0x10330, 0x1034a,
}; /* CR_Gothic */

/* 'Deseret': Script */
static const OnigCodePoint CR_Deseret[] = {
	1,
	0x10400, 0x1044f,
}; /* CR_Deseret */

/* 'Inherited': Script */
static const OnigCodePoint CR_Inherited[] = {
	24,
	0x0300, 0x036f,
	0x0485, 0x0486,
	0x064b, 0x0655,
	0x065f, 0x065f,
	0x0670, 0x0670,
	0x0951, 0x0952,
	0x1cd0, 0x1cd2,
	0x1cd4, 0x1ce0,
	0x1ce2, 0x1ce8,
	0x1ced, 0x1ced,
	0x1dc0, 0x1de6,
	0x1dfc, 0x1dff,
	0x200c, 0x200d,
	0x20d0, 0x20f0,
	0x302a, 0x302d,
	0x3099, 0x309a,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe26,
	0x101fd, 0x101fd,
	0x1d167, 0x1d169,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
	0xe0100, 0xe01ef,
}; /* CR_Inherited */

/* 'Tagalog': Script */
static const OnigCodePoint CR_Tagalog[] = {
	2,
	0x1700, 0x170c,
	0x170e, 0x1714,
}; /* CR_Tagalog */

/* 'Hanunoo': Script */
static const OnigCodePoint CR_Hanunoo[] = {
	1,
	0x1720, 0x1734,
}; /* CR_Hanunoo */

/* 'Buhid': Script */
static const OnigCodePoint CR_Buhid[] = {
	1,
	0x1740, 0x1753,
}; /* CR_Buhid */

/* 'Tagbanwa': Script */
static const OnigCodePoint CR_Tagbanwa[] = {
	3,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
}; /* CR_Tagbanwa */

/* 'Limbu': Script */
static const OnigCodePoint CR_Limbu[] = {
	5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x194f,
}; /* CR_Limbu */

/* 'Tai_Le': Script */
static const OnigCodePoint CR_Tai_Le[] = {
	2,
	0x1950, 0x196d,
	0x1970, 0x1974,
}; /* CR_Tai_Le */

/* 'Linear_B': Script */
static const OnigCodePoint CR_Linear_B[] = {
	7,
	0x10000, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
}; /* CR_Linear_B */

/* 'Ugaritic': Script */
static const OnigCodePoint CR_Ugaritic[] = {
	2,
	0x10380, 0x1039d,
	0x1039f, 0x1039f,
}; /* CR_Ugaritic */

/* 'Shavian': Script */
static const OnigCodePoint CR_Shavian[] = {
	1,
	0x10450, 0x1047f,
}; /* CR_Shavian */

/* 'Osmanya': Script */
static const OnigCodePoint CR_Osmanya[] = {
	2,
	0x10480, 0x1049d,
	0x104a0, 0x104a9,
}; /* CR_Osmanya */

/* 'Cypriot': Script */
static const OnigCodePoint CR_Cypriot[] = {
	6,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x1083f,
}; /* CR_Cypriot */

/* 'Braille': Script */
static const OnigCodePoint CR_Braille[] = {
	1,
	0x2800, 0x28ff,
}; /* CR_Braille */

/* 'Buginese': Script */
static const OnigCodePoint CR_Buginese[] = {
	2,
	0x1a00, 0x1a1b,
	0x1a1e, 0x1a1f,
}; /* CR_Buginese */

/* 'Coptic': Script */
static const OnigCodePoint CR_Coptic[] = {
	3,
	0x03e2, 0x03ef,
	0x2c80, 0x2cf1,
	0x2cf9, 0x2cff,
}; /* CR_Coptic */

/* 'New_Tai_Lue': Script */
static const OnigCodePoint CR_New_Tai_Lue[] = {
	4,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x19df,
}; /* CR_New_Tai_Lue */

/* 'Glagolitic': Script */
static const OnigCodePoint CR_Glagolitic[] = {
	2,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
}; /* CR_Glagolitic */

/* 'Tifinagh': Script */
static const OnigCodePoint CR_Tifinagh[] = {
	3,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d70,
	0x2d7f, 0x2d7f,
}; /* CR_Tifinagh */

/* 'Syloti_Nagri': Script */
static const OnigCodePoint CR_Syloti_Nagri[] = {
	1,
	0xa800, 0xa82b,
}; /* CR_Syloti_Nagri */

/* 'Old_Persian': Script */
static const OnigCodePoint CR_Old_Persian[] = {
	2,
	0x103a0, 0x103c3,
	0x103c8, 0x103d5,
}; /* CR_Old_Persian */

/* 'Kharoshthi': Script */
static const OnigCodePoint CR_Kharoshthi[] = {
	8,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
}; /* CR_Kharoshthi */

/* 'Balinese': Script */
static const OnigCodePoint CR_Balinese[] = {
	2,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
}; /* CR_Balinese */

/* 'Cuneiform': Script */
static const OnigCodePoint CR_Cuneiform[] = {
	3,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
}; /* CR_Cuneiform */

/* 'Phoenician': Script */
static const OnigCodePoint CR_Phoenician[] = {
	2,
	0x10900, 0x1091b,
	0x1091f, 0x1091f,
}; /* CR_Phoenician */

/* 'Phags_Pa': Script */
static const OnigCodePoint CR_Phags_Pa[] = {
	1,
	0xa840, 0xa877,
}; /* CR_Phags_Pa */

/* 'Nko': Script */
static const OnigCodePoint CR_Nko[] = {
	1,
	0x07c0, 0x07fa,
}; /* CR_Nko */

/* 'Sundanese': Script */
static const OnigCodePoint CR_Sundanese[] = {
	2,
	0x1b80, 0x1baa,
	0x1bae, 0x1bb9,
}; /* CR_Sundanese */

/* 'Lepcha': Script */
static const OnigCodePoint CR_Lepcha[] = {
	3,
	0x1c00, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c4f,
}; /* CR_Lepcha */

/* 'Ol_Chiki': Script */
static const OnigCodePoint CR_Ol_Chiki[] = {
	1,
	0x1c50, 0x1c7f,
}; /* CR_Ol_Chiki */

/* 'Vai': Script */
static const OnigCodePoint CR_Vai[] = {
	1,
	0xa500, 0xa62b,
}; /* CR_Vai */

/* 'Saurashtra': Script */
static const OnigCodePoint CR_Saurashtra[] = {
	2,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
}; /* CR_Saurashtra */

/* 'Kayah_Li': Script */
static const OnigCodePoint CR_Kayah_Li[] = {
	1,
	0xa900, 0xa92f,
}; /* CR_Kayah_Li */

/* 'Rejang': Script */
static const OnigCodePoint CR_Rejang[] = {
	2,
	0xa930, 0xa953,
	0xa95f, 0xa95f,
}; /* CR_Rejang */

/* 'Lycian': Script */
static const OnigCodePoint CR_Lycian[] = {
	1,
	0x10280, 0x1029c,
}; /* CR_Lycian */

/* 'Carian': Script */
static const OnigCodePoint CR_Carian[] = {
	1,
	0x102a0, 0x102d0,
}; /* CR_Carian */

/* 'Lydian': Script */
static const OnigCodePoint CR_Lydian[] = {
	2,
	0x10920, 0x10939,
	0x1093f, 0x1093f,
}; /* CR_Lydian */

/* 'Cham': Script */
static const OnigCodePoint CR_Cham[] = {
	4,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa5f,
}; /* CR_Cham */

/* 'Tai_Tham': Script */
static const OnigCodePoint CR_Tai_Tham[] = {
	5,
	0x1a20, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
}; /* CR_Tai_Tham */

/* 'Tai_Viet': Script */
static const OnigCodePoint CR_Tai_Viet[] = {
	2,
	0xaa80, 0xaac2,
	0xaadb, 0xaadf,
}; /* CR_Tai_Viet */

/* 'Avestan': Script */
static const OnigCodePoint CR_Avestan[] = {
	2,
	0x10b00, 0x10b35,
	0x10b39, 0x10b3f,
}; /* CR_Avestan */

/* 'Egyptian_Hieroglyphs': Script */
static const OnigCodePoint CR_Egyptian_Hieroglyphs[] = {
	1,
	0x13000, 0x1342e,
}; /* CR_Egyptian_Hieroglyphs */

/* 'Samaritan': Script */
static const OnigCodePoint CR_Samaritan[] = {
	2,
	0x0800, 0x082d,
	0x0830, 0x083e,
}; /* CR_Samaritan */

/* 'Lisu': Script */
static const OnigCodePoint CR_Lisu[] = {
	1,
	0xa4d0, 0xa4ff,
}; /* CR_Lisu */

/* 'Bamum': Script */
static const OnigCodePoint CR_Bamum[] = {
	2,
	0xa6a0, 0xa6f7,
	0x16800, 0x16a38,
}; /* CR_Bamum */

/* 'Javanese': Script */
static const OnigCodePoint CR_Javanese[] = {
	3,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9df,
}; /* CR_Javanese */

/* 'Meetei_Mayek': Script */
static const OnigCodePoint CR_Meetei_Mayek[] = {
	2,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
}; /* CR_Meetei_Mayek */

/* 'Imperial_Aramaic': Script */
static const OnigCodePoint CR_Imperial_Aramaic[] = {
	2,
	0x10840, 0x10855,
	0x10857, 0x1085f,
}; /* CR_Imperial_Aramaic */

/* 'Old_South_Arabian': Script */
static const OnigCodePoint CR_Old_South_Arabian[] = {
	1,
	0x10a60, 0x10a7f,
}; /* CR_Old_South_Arabian */

/* 'Inscriptional_Parthian': Script */
static const OnigCodePoint CR_Inscriptional_Parthian[] = {
	2,
	0x10b40, 0x10b55,
	0x10b58, 0x10b5f,
}; /* CR_Inscriptional_Parthian */

/* 'Inscriptional_Pahlavi': Script */
static const OnigCodePoint CR_Inscriptional_Pahlavi[] = {
	2,
	0x10b60, 0x10b72,
	0x10b78, 0x10b7f,
}; /* CR_Inscriptional_Pahlavi */

/* 'Old_Turkic': Script */
static const OnigCodePoint CR_Old_Turkic[] = {
	1,
	0x10c00, 0x10c48,
}; /* CR_Old_Turkic */

/* 'Kaithi': Script */
static const OnigCodePoint CR_Kaithi[] = {
	1,
	0x11080, 0x110c1,
}; /* CR_Kaithi */

/* 'Batak': Script */
static const OnigCodePoint CR_Batak[] = {
	2,
	0x1bc0, 0x1bf3,
	0x1bfc, 0x1bff,
}; /* CR_Batak */

/* 'Brahmi': Script */
static const OnigCodePoint CR_Brahmi[] = {
	2,
	0x11000, 0x1104d,
	0x11052, 0x1106f,
}; /* CR_Brahmi */

/* 'Mandaic': Script */
static const OnigCodePoint CR_Mandaic[] = {
	2,
	0x0840, 0x085b,
	0x085e, 0x085e,
}; /* CR_Mandaic */

/* 'White_Space': Binary Property */
#define CR_White_Space CR_Space

/* 'Bidi_Control': Binary Property */
static const OnigCodePoint CR_Bidi_Control[] = {
	2,
	0x200e, 0x200f,
	0x202a, 0x202e,
}; /* CR_Bidi_Control */

/* 'Join_Control': Binary Property */
static const OnigCodePoint CR_Join_Control[] = {
	1,
	0x200c, 0x200d,
}; /* CR_Join_Control */

/* 'Dash': Binary Property */
static const OnigCodePoint CR_Dash[] = {
	19,
	0x002d, 0x002d,
	0x058a, 0x058a,
	0x05be, 0x05be,
	0x1400, 0x1400,
	0x1806, 0x1806,
	0x2010, 0x2015,
	0x2053, 0x2053,
	0x207b, 0x207b,
	0x208b, 0x208b,
	0x2212, 0x2212,
	0x2e17, 0x2e17,
	0x2e1a, 0x2e1a,
	0x301c, 0x301c,
	0x3030, 0x3030,
	0x30a0, 0x30a0,
	0xfe31, 0xfe32,
	0xfe58, 0xfe58,
	0xfe63, 0xfe63,
	0xff0d, 0xff0d,
}; /* CR_Dash */

/* 'Hyphen': Binary Property */
static const OnigCodePoint CR_Hyphen[] = {
	10,
	0x002d, 0x002d,
	0x00ad, 0x00ad,
	0x058a, 0x058a,
	0x1806, 0x1806,
	0x2010, 0x2011,
	0x2e17, 0x2e17,
	0x30fb, 0x30fb,
	0xfe63, 0xfe63,
	0xff0d, 0xff0d,
	0xff65, 0xff65,
}; /* CR_Hyphen */

/* 'Quotation_Mark': Binary Property */
static const OnigCodePoint CR_Quotation_Mark[] = {
	12,
	0x0022, 0x0022,
	0x0027, 0x0027,
	0x00ab, 0x00ab,
	0x00bb, 0x00bb,
	0x2018, 0x201f,
	0x2039, 0x203a,
	0x300c, 0x300f,
	0x301d, 0x301f,
	0xfe41, 0xfe44,
	0xff02, 0xff02,
	0xff07, 0xff07,
	0xff62, 0xff63,
}; /* CR_Quotation_Mark */

/* 'Terminal_Punctuation': Binary Property */
static const OnigCodePoint CR_Terminal_Punctuation[] = {
	67,
	0x0021, 0x0021,
	0x002c, 0x002c,
	0x002e, 0x002e,
	0x003a, 0x003b,
	0x003f, 0x003f,
	0x037e, 0x037e,
	0x0387, 0x0387,
	0x0589, 0x0589,
	0x05c3, 0x05c3,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x06d4, 0x06d4,
	0x0700, 0x070a,
	0x070c, 0x070c,
	0x07f8, 0x07f9,
	0x0830, 0x083e,
	0x085e, 0x085e,
	0x0964, 0x0965,
	0x0e5a, 0x0e5b,
	0x0f08, 0x0f08,
	0x0f0d, 0x0f12,
	0x104a, 0x104b,
	0x1361, 0x1368,
	0x166d, 0x166e,
	0x16eb, 0x16ed,
	0x17d4, 0x17d6,
	0x17da, 0x17da,
	0x1802, 0x1805,
	0x1808, 0x1809,
	0x1944, 0x1945,
	0x1aa8, 0x1aab,
	0x1b5a, 0x1b5b,
	0x1b5d, 0x1b5f,
	0x1c3b, 0x1c3f,
	0x1c7e, 0x1c7f,
	0x203c, 0x203d,
	0x2047, 0x2049,
	0x2e2e, 0x2e2e,
	0x3001, 0x3002,
	0xa4fe, 0xa4ff,
	0xa60d, 0xa60f,
	0xa6f3, 0xa6f7,
	0xa876, 0xa877,
	0xa8ce, 0xa8cf,
	0xa92f, 0xa92f,
	0xa9c7, 0xa9c9,
	0xaa5d, 0xaa5f,
	0xaadf, 0xaadf,
	0xabeb, 0xabeb,
	0xfe50, 0xfe52,
	0xfe54, 0xfe57,
	0xff01, 0xff01,
	0xff0c, 0xff0c,
	0xff0e, 0xff0e,
	0xff1a, 0xff1b,
	0xff1f, 0xff1f,
	0xff61, 0xff61,
	0xff64, 0xff64,
	0x1039f, 0x1039f,
	0x103d0, 0x103d0,
	0x10857, 0x10857,
	0x1091f, 0x1091f,
	0x10b3a, 0x10b3f,
	0x11047, 0x1104d,
	0x110be, 0x110c1,
	0x12470, 0x12473,
}; /* CR_Terminal_Punctuation */

/* 'Other_Math': Binary Property */
static const OnigCodePoint CR_Other_Math[] = {
	100,
	0x005e, 0x005e,
	0x03d0, 0x03d2,
	0x03d5, 0x03d5,
	0x03f0, 0x03f1,
	0x03f4, 0x03f5,
	0x2016, 0x2016,
	0x2032, 0x2034,
	0x2040, 0x2040,
	0x2061, 0x2064,
	0x207d, 0x207e,
	0x208d, 0x208e,
	0x20d0, 0x20dc,
	0x20e1, 0x20e1,
	0x20e5, 0x20e6,
	0x20eb, 0x20ef,
	0x2102, 0x2102,
	0x2107, 0x2107,
	0x210a, 0x2113,
	0x2115, 0x2115,
	0x2119, 0x211d,
	0x2124, 0x2124,
	0x2128, 0x2129,
	0x212c, 0x212d,
	0x212f, 0x2131,
	0x2133, 0x2138,
	0x213c, 0x213f,
	0x2145, 0x2149,
	0x2195, 0x2199,
	0x219c, 0x219f,
	0x21a1, 0x21a2,
	0x21a4, 0x21a5,
	0x21a7, 0x21a7,
	0x21a9, 0x21ad,
	0x21b0, 0x21b1,
	0x21b6, 0x21b7,
	0x21bc, 0x21cd,
	0x21d0, 0x21d1,
	0x21d3, 0x21d3,
	0x21d5, 0x21db,
	0x21dd, 0x21dd,
	0x21e4, 0x21e5,
	0x23b4, 0x23b5,
	0x23b7, 0x23b7,
	0x23d0, 0x23d0,
	0x23e2, 0x23e2,
	0x25a0, 0x25a1,
	0x25ae, 0x25b6,
	0x25bc, 0x25c0,
	0x25c6, 0x25c7,
	0x25ca, 0x25cb,
	0x25cf, 0x25d3,
	0x25e2, 0x25e2,
	0x25e4, 0x25e4,
	0x25e7, 0x25ec,
	0x2605, 0x2606,
	0x2640, 0x2640,
	0x2642, 0x2642,
	0x2660, 0x2663,
	0x266d, 0x266e,
	0x27c5, 0x27c6,
	0x27e6, 0x27ef,
	0x2983, 0x2998,
	0x29d8, 0x29db,
	0x29fc, 0x29fd,
	0xfe61, 0xfe61,
	0xfe63, 0xfe63,
	0xfe68, 0xfe68,
	0xff3c, 0xff3c,
	0xff3e, 0xff3e,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d6c0,
	0x1d6c2, 0x1d6da,
	0x1d6dc, 0x1d6fa,
	0x1d6fc, 0x1d714,
	0x1d716, 0x1d734,
	0x1d736, 0x1d74e,
	0x1d750, 0x1d76e,
	0x1d770, 0x1d788,
	0x1d78a, 0x1d7a8,
	0x1d7aa, 0x1d7c2,
	0x1d7c4, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
}; /* CR_Other_Math */

/* 'Hex_Digit': Binary Property */
static const OnigCodePoint CR_Hex_Digit[] = {
	6,
	0x0030, 0x0039,
	0x0041, 0x0046,
	0x0061, 0x0066,
	0xff10, 0xff19,
	0xff21, 0xff26,
	0xff41, 0xff46,
}; /* CR_Hex_Digit */

/* 'ASCII_Hex_Digit': Binary Property */
#define CR_ASCII_Hex_Digit CR_XDigit

/* 'Other_Alphabetic': Binary Property */
static const OnigCodePoint CR_Other_Alphabetic[] = {
	145,
	0x0345, 0x0345,
	0x05b0, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c5,
	0x05c7, 0x05c7,
	0x0610, 0x061a,
	0x064b, 0x0657,
	0x0659, 0x065f,
	0x0670, 0x0670,
	0x06d6, 0x06dc,
	0x06e1, 0x06e4,
	0x06e7, 0x06e8,
	0x06ed, 0x06ed,
	0x0711, 0x0711,
	0x0730, 0x073f,
	0x07a6, 0x07b0,
	0x0816, 0x0817,
	0x081b, 0x0823,
	0x0825, 0x0827,
	0x0829, 0x082c,
	0x0900, 0x0903,
	0x093a, 0x093b,
	0x093e, 0x094c,
	0x094e, 0x094f,
	0x0955, 0x0957,
	0x0962, 0x0963,
	0x0981, 0x0983,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cc,
	0x09d7, 0x09d7,
	0x09e2, 0x09e3,
	0x0a01, 0x0a03,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4c,
	0x0a51, 0x0a51,
	0x0a70, 0x0a71,
	0x0a75, 0x0a75,
	0x0a81, 0x0a83,
	0x0abe, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acc,
	0x0ae2, 0x0ae3,
	0x0b01, 0x0b03,
	0x0b3e, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4c,
	0x0b56, 0x0b57,
	0x0b62, 0x0b63,
	0x0b82, 0x0b82,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcc,
	0x0bd7, 0x0bd7,
	0x0c01, 0x0c03,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4c,
	0x0c55, 0x0c56,
	0x0c62, 0x0c63,
	0x0c82, 0x0c83,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccc,
	0x0cd5, 0x0cd6,
	0x0ce2, 0x0ce3,
	0x0d02, 0x0d03,
	0x0d3e, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4c,
	0x0d57, 0x0d57,
	0x0d62, 0x0d63,
	0x0d82, 0x0d83,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df3,
	0x0e31, 0x0e31,
	0x0e34, 0x0e3a,
	0x0e4d, 0x0e4d,
	0x0eb1, 0x0eb1,
	0x0eb4, 0x0eb9,
	0x0ebb, 0x0ebc,
	0x0ecd, 0x0ecd,
	0x0f71, 0x0f81,
	0x0f8d, 0x0f97,
	0x0f99, 0x0fbc,
	0x102b, 0x1036,
	0x1038, 0x1038,
	0x103b, 0x103e,
	0x1056, 0x1059,
	0x105e, 0x1060,
	0x1062, 0x1062,
	0x1067, 0x1068,
	0x1071, 0x1074,
	0x1082, 0x1086,
	0x109c, 0x109d,
	0x135f, 0x135f,
	0x1712, 0x1713,
	0x1732, 0x1733,
	0x1752, 0x1753,
	0x1772, 0x1773,
	0x17b6, 0x17c8,
	0x18a9, 0x18a9,
	0x1920, 0x192b,
	0x1930, 0x1938,
	0x19b0, 0x19c0,
	0x19c8, 0x19c9,
	0x1a17, 0x1a1b,
	0x1a55, 0x1a5e,
	0x1a61, 0x1a74,
	0x1b00, 0x1b04,
	0x1b35, 0x1b43,
	0x1b80, 0x1b82,
	0x1ba1, 0x1ba9,
	0x1be7, 0x1bf1,
	0x1c24, 0x1c35,
	0x1cf2, 0x1cf2,
	0x24b6, 0x24e9,
	0x2de0, 0x2dff,
	0xa823, 0xa827,
	0xa880, 0xa881,
	0xa8b4, 0xa8c3,
	0xa926, 0xa92a,
	0xa947, 0xa952,
	0xa980, 0xa983,
	0xa9b4, 0xa9bf,
	0xaa29, 0xaa36,
	0xaa43, 0xaa43,
	0xaa4c, 0xaa4d,
	0xaab0, 0xaab0,
	0xaab2, 0xaab4,
	0xaab7, 0xaab8,
	0xaabe, 0xaabe,
	0xabe3, 0xabea,
	0xfb1e, 0xfb1e,
	0x10a01, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a0f,
	0x11000, 0x11002,
	0x11038, 0x11045,
	0x11082, 0x11082,
	0x110b0, 0x110b8,
}; /* CR_Other_Alphabetic */

/* 'Ideographic': Binary Property */
static const OnigCodePoint CR_Ideographic[] = {
	12,
	0x3006, 0x3007,
	0x3021, 0x3029,
	0x3038, 0x303a,
	0x3400, 0x4db5,
	0x4e00, 0x9fcb,
	0xf900, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
}; /* CR_Ideographic */

/* 'Diacritic': Binary Property */
static const OnigCodePoint CR_Diacritic[] = {
	117,
	0x005e, 0x005e,
	0x0060, 0x0060,
	0x00a8, 0x00a8,
	0x00af, 0x00af,
	0x00b4, 0x00b4,
	0x00b7, 0x00b8,
	0x02b0, 0x034e,
	0x0350, 0x0357,
	0x035d, 0x0362,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x0384, 0x0385,
	0x0483, 0x0487,
	0x0559, 0x0559,
	0x0591, 0x05a1,
	0x05a3, 0x05bd,
	0x05bf, 0x05bf,
	0x05c1, 0x05c2,
	0x05c4, 0x05c4,
	0x064b, 0x0652,
	0x0657, 0x0658,
	0x06df, 0x06e0,
	0x06e5, 0x06e6,
	0x06ea, 0x06ec,
	0x0730, 0x074a,
	0x07a6, 0x07b0,
	0x07eb, 0x07f5,
	0x0818, 0x0819,
	0x093c, 0x093c,
	0x094d, 0x094d,
	0x0951, 0x0954,
	0x0971, 0x0971,
	0x09bc, 0x09bc,
	0x09cd, 0x09cd,
	0x0a3c, 0x0a3c,
	0x0a4d, 0x0a4d,
	0x0abc, 0x0abc,
	0x0acd, 0x0acd,
	0x0b3c, 0x0b3c,
	0x0b4d, 0x0b4d,
	0x0bcd, 0x0bcd,
	0x0c4d, 0x0c4d,
	0x0cbc, 0x0cbc,
	0x0ccd, 0x0ccd,
	0x0d4d, 0x0d4d,
	0x0dca, 0x0dca,
	0x0e47, 0x0e4c,
	0x0e4e, 0x0e4e,
	0x0ec8, 0x0ecc,
	0x0f18, 0x0f19,
	0x0f35, 0x0f35,
	0x0f37, 0x0f37,
	0x0f39, 0x0f39,
	0x0f3e, 0x0f3f,
	0x0f82, 0x0f84,
	0x0f86, 0x0f87,
	0x0fc6, 0x0fc6,
	0x1037, 0x1037,
	0x1039, 0x103a,
	0x1087, 0x108d,
	0x108f, 0x108f,
	0x109a, 0x109b,
	0x17c9, 0x17d3,
	0x17dd, 0x17dd,
	0x1939, 0x193b,
	0x1a75, 0x1a7c,
	0x1a7f, 0x1a7f,
	0x1b34, 0x1b34,
	0x1b44, 0x1b44,
	0x1b6b, 0x1b73,
	0x1baa, 0x1baa,
	0x1c36, 0x1c37,
	0x1c78, 0x1c7d,
	0x1cd0, 0x1ce8,
	0x1ced, 0x1ced,
	0x1d2c, 0x1d6a,
	0x1dc4, 0x1dcf,
	0x1dfd, 0x1dff,
	0x1fbd, 0x1fbd,
	0x1fbf, 0x1fc1,
	0x1fcd, 0x1fcf,
	0x1fdd, 0x1fdf,
	0x1fed, 0x1fef,
	0x1ffd, 0x1ffe,
	0x2cef, 0x2cf1,
	0x2e2f, 0x2e2f,
	0x302a, 0x302f,
	0x3099, 0x309c,
	0x30fc, 0x30fc,
	0xa66f, 0xa66f,
	0xa67c, 0xa67d,
	0xa67f, 0xa67f,
	0xa6f0, 0xa6f1,
	0xa717, 0xa721,
	0xa788, 0xa788,
	0xa8c4, 0xa8c4,
	0xa8e0, 0xa8f1,
	0xa92b, 0xa92e,
	0xa953, 0xa953,
	0xa9b3, 0xa9b3,
	0xa9c0, 0xa9c0,
	0xaa7b, 0xaa7b,
	0xaabf, 0xaac2,
	0xabec, 0xabed,
	0xfb1e, 0xfb1e,
	0xfe20, 0xfe26,
	0xff3e, 0xff3e,
	0xff40, 0xff40,
	0xff70, 0xff70,
	0xff9e, 0xff9f,
	0xffe3, 0xffe3,
	0x110b9, 0x110ba,
	0x1d167, 0x1d169,
	0x1d16d, 0x1d172,
	0x1d17b, 0x1d182,
	0x1d185, 0x1d18b,
	0x1d1aa, 0x1d1ad,
}; /* CR_Diacritic */

/* 'Extender': Binary Property */
static const OnigCodePoint CR_Extender[] = {
	20,
	0x00b7, 0x00b7,
	0x02d0, 0x02d1,
	0x0640, 0x0640,
	0x07fa, 0x07fa,
	0x0e46, 0x0e46,
	0x0ec6, 0x0ec6,
	0x1843, 0x1843,
	0x1aa7, 0x1aa7,
	0x1c36, 0x1c36,
	0x1c7b, 0x1c7b,
	0x3005, 0x3005,
	0x3031, 0x3035,
	0x309d, 0x309e,
	0x30fc, 0x30fe,
	0xa015, 0xa015,
	0xa60c, 0xa60c,
	0xa9cf, 0xa9cf,
	0xaa70, 0xaa70,
	0xaadd, 0xaadd,
	0xff70, 0xff70,
}; /* CR_Extender */

/* 'Other_Lowercase': Binary Property */
static const OnigCodePoint CR_Other_Lowercase[] = {
	13,
	0x02b0, 0x02b8,
	0x02c0, 0x02c1,
	0x02e0, 0x02e4,
	0x0345, 0x0345,
	0x037a, 0x037a,
	0x1d2c, 0x1d61,
	0x1d78, 0x1d78,
	0x1d9b, 0x1dbf,
	0x2090, 0x2094,
	0x2170, 0x217f,
	0x24d0, 0x24e9,
	0x2c7d, 0x2c7d,
	0xa770, 0xa770,
}; /* CR_Other_Lowercase */

/* 'Other_Uppercase': Binary Property */
static const OnigCodePoint CR_Other_Uppercase[] = {
	2,
	0x2160, 0x216f,
	0x24b6, 0x24cf,
}; /* CR_Other_Uppercase */

/* 'Noncharacter_Code_Point': Binary Property */
static const OnigCodePoint CR_Noncharacter_Code_Point[] = {
	18,
	0xfdd0, 0xfdef,
	0xfffe, 0xffff,
	0x1fffe, 0x1ffff,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xefffe, 0xeffff,
	0xffffe, 0xfffff,
	0x10fffe, 0x10ffff,
}; /* CR_Noncharacter_Code_Point */

/* 'Other_Grapheme_Extend': Binary Property */
static const OnigCodePoint CR_Other_Grapheme_Extend[] = {
	16,
	0x09be, 0x09be,
	0x09d7, 0x09d7,
	0x0b3e, 0x0b3e,
	0x0b57, 0x0b57,
	0x0bbe, 0x0bbe,
	0x0bd7, 0x0bd7,
	0x0cc2, 0x0cc2,
	0x0cd5, 0x0cd6,
	0x0d3e, 0x0d3e,
	0x0d57, 0x0d57,
	0x0dcf, 0x0dcf,
	0x0ddf, 0x0ddf,
	0x200c, 0x200d,
	0xff9e, 0xff9f,
	0x1d165, 0x1d165,
	0x1d16e, 0x1d172,
}; /* CR_Other_Grapheme_Extend */

/* 'IDS_Binary_Operator': Binary Property */
static const OnigCodePoint CR_IDS_Binary_Operator[] = {
	2,
	0x2ff0, 0x2ff1,
	0x2ff4, 0x2ffb,
}; /* CR_IDS_Binary_Operator */

/* 'IDS_Trinary_Operator': Binary Property */
static const OnigCodePoint CR_IDS_Trinary_Operator[] = {
	1,
	0x2ff2, 0x2ff3,
}; /* CR_IDS_Trinary_Operator */

/* 'Radical': Binary Property */
static const OnigCodePoint CR_Radical[] = {
	3,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
}; /* CR_Radical */

/* 'Unified_Ideograph': Binary Property */
static const OnigCodePoint CR_Unified_Ideograph[] = {
	12,
	0x3400, 0x4db5,
	0x4e00, 0x9fcb,
	0xfa0e, 0xfa0f,
	0xfa11, 0xfa11,
	0xfa13, 0xfa14,
	0xfa1f, 0xfa1f,
	0xfa21, 0xfa21,
	0xfa23, 0xfa24,
	0xfa27, 0xfa29,
	0x20000, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
}; /* CR_Unified_Ideograph */

/* 'Other_Default_Ignorable_Code_Point': Binary Property */
static const OnigCodePoint CR_Other_Default_Ignorable_Code_Point[] = {
	10,
	0x034f, 0x034f,
	0x115f, 0x1160,
	0x2065, 0x2069,
	0x3164, 0x3164,
	0xffa0, 0xffa0,
	0xfff0, 0xfff8,
	0xe0000, 0xe0000,
	0xe0002, 0xe001f,
	0xe0080, 0xe00ff,
	0xe01f0, 0xe0fff,
}; /* CR_Other_Default_Ignorable_Code_Point */

/* 'Deprecated': Binary Property */
static const OnigCodePoint CR_Deprecated[] = {
	9,
	0x0149, 0x0149,
	0x0673, 0x0673,
	0x0f77, 0x0f77,
	0x0f79, 0x0f79,
	0x17a3, 0x17a4,
	0x206a, 0x206f,
	0x2329, 0x232a,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
}; /* CR_Deprecated */

/* 'Soft_Dotted': Binary Property */
static const OnigCodePoint CR_Soft_Dotted[] = {
	31,
	0x0069, 0x006a,
	0x012f, 0x012f,
	0x0249, 0x0249,
	0x0268, 0x0268,
	0x029d, 0x029d,
	0x02b2, 0x02b2,
	0x03f3, 0x03f3,
	0x0456, 0x0456,
	0x0458, 0x0458,
	0x1d62, 0x1d62,
	0x1d96, 0x1d96,
	0x1da4, 0x1da4,
	0x1da8, 0x1da8,
	0x1e2d, 0x1e2d,
	0x1ecb, 0x1ecb,
	0x2071, 0x2071,
	0x2148, 0x2149,
	0x2c7c, 0x2c7c,
	0x1d422, 0x1d423,
	0x1d456, 0x1d457,
	0x1d48a, 0x1d48b,
	0x1d4be, 0x1d4bf,
	0x1d4f2, 0x1d4f3,
	0x1d526, 0x1d527,
	0x1d55a, 0x1d55b,
	0x1d58e, 0x1d58f,
	0x1d5c2, 0x1d5c3,
	0x1d5f6, 0x1d5f7,
	0x1d62a, 0x1d62b,
	0x1d65e, 0x1d65f,
	0x1d692, 0x1d693,
}; /* CR_Soft_Dotted */

/* 'Logical_Order_Exception': Binary Property */
static const OnigCodePoint CR_Logical_Order_Exception[] = {
	5,
	0x0e40, 0x0e44,
	0x0ec0, 0x0ec4,
	0xaab5, 0xaab6,
	0xaab9, 0xaab9,
	0xaabb, 0xaabc,
}; /* CR_Logical_Order_Exception */

/* 'Other_ID_Start': Binary Property */
static const OnigCodePoint CR_Other_ID_Start[] = {
	3,
	0x2118, 0x2118,
	0x212e, 0x212e,
	0x309b, 0x309c,
}; /* CR_Other_ID_Start */

/* 'Other_ID_Continue': Binary Property */
static const OnigCodePoint CR_Other_ID_Continue[] = {
	4,
	0x00b7, 0x00b7,
	0x0387, 0x0387,
	0x1369, 0x1371,
	0x19da, 0x19da,
}; /* CR_Other_ID_Continue */

/* 'STerm': Binary Property */
static const OnigCodePoint CR_STerm[] = {
	47,
	0x0021, 0x0021,
	0x002e, 0x002e,
	0x003f, 0x003f,
	0x055c, 0x055c,
	0x055e, 0x055e,
	0x0589, 0x0589,
	0x061f, 0x061f,
	0x06d4, 0x06d4,
	0x0700, 0x0702,
	0x07f9, 0x07f9,
	0x0964, 0x0965,
	0x104a, 0x104b,
	0x1362, 0x1362,
	0x1367, 0x1368,
	0x166e, 0x166e,
	0x1735, 0x1736,
	0x1803, 0x1803,
	0x1809, 0x1809,
	0x1944, 0x1945,
	0x1aa8, 0x1aab,
	0x1b5a, 0x1b5b,
	0x1b5e, 0x1b5f,
	0x1c3b, 0x1c3c,
	0x1c7e, 0x1c7f,
	0x203c, 0x203d,
	0x2047, 0x2049,
	0x2e2e, 0x2e2e,
	0x3002, 0x3002,
	0xa4ff, 0xa4ff,
	0xa60e, 0xa60f,
	0xa6f3, 0xa6f3,
	0xa6f7, 0xa6f7,
	0xa876, 0xa877,
	0xa8ce, 0xa8cf,
	0xa92f, 0xa92f,
	0xa9c8, 0xa9c9,
	0xaa5d, 0xaa5f,
	0xabeb, 0xabeb,
	0xfe52, 0xfe52,
	0xfe56, 0xfe57,
	0xff01, 0xff01,
	0xff0e, 0xff0e,
	0xff1f, 0xff1f,
	0xff61, 0xff61,
	0x10a56, 0x10a57,
	0x11047, 0x11048,
	0x110be, 0x110c1,
}; /* CR_STerm */

/* 'Variation_Selector': Binary Property */
static const OnigCodePoint CR_Variation_Selector[] = {
	3,
	0x180b, 0x180d,
	0xfe00, 0xfe0f,
	0xe0100, 0xe01ef,
}; /* CR_Variation_Selector */

/* 'Pattern_White_Space': Binary Property */
static const OnigCodePoint CR_Pattern_White_Space[] = {
	5,
	0x0009, 0x000d,
	0x0020, 0x0020,
	0x0085, 0x0085,
	0x200e, 0x200f,
	0x2028, 0x2029,
}; /* CR_Pattern_White_Space */

/* 'Pattern_Syntax': Binary Property */
static const OnigCodePoint CR_Pattern_Syntax[] = {
	28,
	0x0021, 0x002f,
	0x003a, 0x0040,
	0x005b, 0x005e,
	0x0060, 0x0060,
	0x007b, 0x007e,
	0x00a1, 0x00a7,
	0x00a9, 0x00a9,
	0x00ab, 0x00ac,
	0x00ae, 0x00ae,
	0x00b0, 0x00b1,
	0x00b6, 0x00b6,
	0x00bb, 0x00bb,
	0x00bf, 0x00bf,
	0x00d7, 0x00d7,
	0x00f7, 0x00f7,
	0x2010, 0x2027,
	0x2030, 0x203e,
	0x2041, 0x2053,
	0x2055, 0x205e,
	0x2190, 0x245f,
	0x2500, 0x2775,
	0x2794, 0x2bff,
	0x2e00, 0x2e7f,
	0x3001, 0x3003,
	0x3008, 0x3020,
	0x3030, 0x3030,
	0xfd3e, 0xfd3f,
	0xfe45, 0xfe46,
}; /* CR_Pattern_Syntax */

/* 'Unknown': Script */
static const OnigCodePoint CR_Unknown[] = {
	499,
	0x0378, 0x0379,
	0x037f, 0x0383,
	0x038b, 0x038b,
	0x038d, 0x038d,
	0x03a2, 0x03a2,
	0x0528, 0x0530,
	0x0557, 0x0558,
	0x0560, 0x0560,
	0x0588, 0x0588,
	0x058b, 0x0590,
	0x05c8, 0x05cf,
	0x05eb, 0x05ef,
	0x05f5, 0x05ff,
	0x0604, 0x0605,
	0x061c, 0x061d,
	0x070e, 0x070e,
	0x074b, 0x074c,
	0x07b2, 0x07bf,
	0x07fb, 0x07ff,
	0x082e, 0x082f,
	0x083f, 0x083f,
	0x085c, 0x085d,
	0x085f, 0x08ff,
	0x0978, 0x0978,
	0x0980, 0x0980,
	0x0984, 0x0984,
	0x098d, 0x098e,
	0x0991, 0x0992,
	0x09a9, 0x09a9,
	0x09b1, 0x09b1,
	0x09b3, 0x09b5,
	0x09ba, 0x09bb,
	0x09c5, 0x09c6,
	0x09c9, 0x09ca,
	0x09cf, 0x09d6,
	0x09d8, 0x09db,
	0x09de, 0x09de,
	0x09e4, 0x09e5,
	0x09fc, 0x0a00,
	0x0a04, 0x0a04,
	0x0a0b, 0x0a0e,
	0x0a11, 0x0a12,
	0x0a29, 0x0a29,
	0x0a31, 0x0a31,
	0x0a34, 0x0a34,
	0x0a37, 0x0a37,
	0x0a3a, 0x0a3b,
	0x0a3d, 0x0a3d,
	0x0a43, 0x0a46,
	0x0a49, 0x0a4a,
	0x0a4e, 0x0a50,
	0x0a52, 0x0a58,
	0x0a5d, 0x0a5d,
	0x0a5f, 0x0a65,
	0x0a76, 0x0a80,
	0x0a84, 0x0a84,
	0x0a8e, 0x0a8e,
	0x0a92, 0x0a92,
	0x0aa9, 0x0aa9,
	0x0ab1, 0x0ab1,
	0x0ab4, 0x0ab4,
	0x0aba, 0x0abb,
	0x0ac6, 0x0ac6,
	0x0aca, 0x0aca,
	0x0ace, 0x0acf,
	0x0ad1, 0x0adf,
	0x0ae4, 0x0ae5,
	0x0af0, 0x0af0,
	0x0af2, 0x0b00,
	0x0b04, 0x0b04,
	0x0b0d, 0x0b0e,
	0x0b11, 0x0b12,
	0x0b29, 0x0b29,
	0x0b31, 0x0b31,
	0x0b34, 0x0b34,
	0x0b3a, 0x0b3b,
	0x0b45, 0x0b46,
	0x0b49, 0x0b4a,
	0x0b4e, 0x0b55,
	0x0b58, 0x0b5b,
	0x0b5e, 0x0b5e,
	0x0b64, 0x0b65,
	0x0b78, 0x0b81,
	0x0b84, 0x0b84,
	0x0b8b, 0x0b8d,
	0x0b91, 0x0b91,
	0x0b96, 0x0b98,
	0x0b9b, 0x0b9b,
	0x0b9d, 0x0b9d,
	0x0ba0, 0x0ba2,
	0x0ba5, 0x0ba7,
	0x0bab, 0x0bad,
	0x0bba, 0x0bbd,
	0x0bc3, 0x0bc5,
	0x0bc9, 0x0bc9,
	0x0bce, 0x0bcf,
	0x0bd1, 0x0bd6,
	0x0bd8, 0x0be5,
	0x0bfb, 0x0c00,
	0x0c04, 0x0c04,
	0x0c0d, 0x0c0d,
	0x0c11, 0x0c11,
	0x0c29, 0x0c29,
	0x0c34, 0x0c34,
	0x0c3a, 0x0c3c,
	0x0c45, 0x0c45,
	0x0c49, 0x0c49,
	0x0c4e, 0x0c54,
	0x0c57, 0x0c57,
	0x0c5a, 0x0c5f,
	0x0c64, 0x0c65,
	0x0c70, 0x0c77,
	0x0c80, 0x0c81,
	0x0c84, 0x0c84,
	0x0c8d, 0x0c8d,
	0x0c91, 0x0c91,
	0x0ca9, 0x0ca9,
	0x0cb4, 0x0cb4,
	0x0cba, 0x0cbb,
	0x0cc5, 0x0cc5,
	0x0cc9, 0x0cc9,
	0x0cce, 0x0cd4,
	0x0cd7, 0x0cdd,
	0x0cdf, 0x0cdf,
	0x0ce4, 0x0ce5,
	0x0cf0, 0x0cf0,
	0x0cf3, 0x0d01,
	0x0d04, 0x0d04,
	0x0d0d, 0x0d0d,
	0x0d11, 0x0d11,
	0x0d3b, 0x0d3c,
	0x0d45, 0x0d45,
	0x0d49, 0x0d49,
	0x0d4f, 0x0d56,
	0x0d58, 0x0d5f,
	0x0d64, 0x0d65,
	0x0d76, 0x0d78,
	0x0d80, 0x0d81,
	0x0d84, 0x0d84,
	0x0d97, 0x0d99,
	0x0db2, 0x0db2,
	0x0dbc, 0x0dbc,
	0x0dbe, 0x0dbf,
	0x0dc7, 0x0dc9,
	0x0dcb, 0x0dce,
	0x0dd5, 0x0dd5,
	0x0dd7, 0x0dd7,
	0x0de0, 0x0df1,
	0x0df5, 0x0e00,
	0x0e3b, 0x0e3e,
	0x0e5c, 0x0e80,
	0x0e83, 0x0e83,
	0x0e85, 0x0e86,
	0x0e89, 0x0e89,
	0x0e8b, 0x0e8c,
	0x0e8e, 0x0e93,
	0x0e98, 0x0e98,
	0x0ea0, 0x0ea0,
	0x0ea4, 0x0ea4,
	0x0ea6, 0x0ea6,
	0x0ea8, 0x0ea9,
	0x0eac, 0x0eac,
	0x0eba, 0x0eba,
	0x0ebe, 0x0ebf,
	0x0ec5, 0x0ec5,
	0x0ec7, 0x0ec7,
	0x0ece, 0x0ecf,
	0x0eda, 0x0edb,
	0x0ede, 0x0eff,
	0x0f48, 0x0f48,
	0x0f6d, 0x0f70,
	0x0f98, 0x0f98,
	0x0fbd, 0x0fbd,
	0x0fcd, 0x0fcd,
	0x0fdb, 0x0fff,
	0x10c6, 0x10cf,
	0x10fd, 0x10ff,
	0x1249, 0x1249,
	0x124e, 0x124f,
	0x1257, 0x1257,
	0x1259, 0x1259,
	0x125e, 0x125f,
	0x1289, 0x1289,
	0x128e, 0x128f,
	0x12b1, 0x12b1,
	0x12b6, 0x12b7,
	0x12bf, 0x12bf,
	0x12c1, 0x12c1,
	0x12c6, 0x12c7,
	0x12d7, 0x12d7,
	0x1311, 0x1311,
	0x1316, 0x1317,
	0x135b, 0x135c,
	0x137d, 0x137f,
	0x139a, 0x139f,
	0x13f5, 0x13ff,
	0x169d, 0x169f,
	0x16f1, 0x16ff,
	0x170d, 0x170d,
	0x1715, 0x171f,
	0x1737, 0x173f,
	0x1754, 0x175f,
	0x176d, 0x176d,
	0x1771, 0x1771,
	0x1774, 0x177f,
	0x17de, 0x17df,
	0x17ea, 0x17ef,
	0x17fa, 0x17ff,
	0x180f, 0x180f,
	0x181a, 0x181f,
	0x1878, 0x187f,
	0x18ab, 0x18af,
	0x18f6, 0x18ff,
	0x191d, 0x191f,
	0x192c, 0x192f,
	0x193c, 0x193f,
	0x1941, 0x1943,
	0x196e, 0x196f,
	0x1975, 0x197f,
	0x19ac, 0x19af,
	0x19ca, 0x19cf,
	0x19db, 0x19dd,
	0x1a1c, 0x1a1d,
	0x1a5f, 0x1a5f,
	0x1a7d, 0x1a7e,
	0x1a8a, 0x1a8f,
	0x1a9a, 0x1a9f,
	0x1aae, 0x1aff,
	0x1b4c, 0x1b4f,
	0x1b7d, 0x1b7f,
	0x1bab, 0x1bad,
	0x1bba, 0x1bbf,
	0x1bf4, 0x1bfb,
	0x1c38, 0x1c3a,
	0x1c4a, 0x1c4c,
	0x1c80, 0x1ccf,
	0x1cf3, 0x1cff,
	0x1de7, 0x1dfb,
	0x1f16, 0x1f17,
	0x1f1e, 0x1f1f,
	0x1f46, 0x1f47,
	0x1f4e, 0x1f4f,
	0x1f58, 0x1f58,
	0x1f5a, 0x1f5a,
	0x1f5c, 0x1f5c,
	0x1f5e, 0x1f5e,
	0x1f7e, 0x1f7f,
	0x1fb5, 0x1fb5,
	0x1fc5, 0x1fc5,
	0x1fd4, 0x1fd5,
	0x1fdc, 0x1fdc,
	0x1ff0, 0x1ff1,
	0x1ff5, 0x1ff5,
	0x1fff, 0x1fff,
	0x2065, 0x2069,
	0x2072, 0x2073,
	0x208f, 0x208f,
	0x209d, 0x209f,
	0x20ba, 0x20cf,
	0x20f1, 0x20ff,
	0x218a, 0x218f,
	0x23f4, 0x23ff,
	0x2427, 0x243f,
	0x244b, 0x245f,
	0x2700, 0x2700,
	0x27cb, 0x27cb,
	0x27cd, 0x27cd,
	0x2b4d, 0x2b4f,
	0x2b5a, 0x2bff,
	0x2c2f, 0x2c2f,
	0x2c5f, 0x2c5f,
	0x2cf2, 0x2cf8,
	0x2d26, 0x2d2f,
	0x2d66, 0x2d6e,
	0x2d71, 0x2d7e,
	0x2d97, 0x2d9f,
	0x2da7, 0x2da7,
	0x2daf, 0x2daf,
	0x2db7, 0x2db7,
	0x2dbf, 0x2dbf,
	0x2dc7, 0x2dc7,
	0x2dcf, 0x2dcf,
	0x2dd7, 0x2dd7,
	0x2ddf, 0x2ddf,
	0x2e32, 0x2e7f,
	0x2e9a, 0x2e9a,
	0x2ef4, 0x2eff,
	0x2fd6, 0x2fef,
	0x2ffc, 0x2fff,
	0x3040, 0x3040,
	0x3097, 0x3098,
	0x3100, 0x3104,
	0x312e, 0x3130,
	0x318f, 0x318f,
	0x31bb, 0x31bf,
	0x31e4, 0x31ef,
	0x321f, 0x321f,
	0x32ff, 0x32ff,
	0x4db6, 0x4dbf,
	0x9fcc, 0x9fff,
	0xa48d, 0xa48f,
	0xa4c7, 0xa4cf,
	0xa62c, 0xa63f,
	0xa674, 0xa67b,
	0xa698, 0xa69f,
	0xa6f8, 0xa6ff,
	0xa78f, 0xa78f,
	0xa792, 0xa79f,
	0xa7aa, 0xa7f9,
	0xa82c, 0xa82f,
	0xa83a, 0xa83f,
	0xa878, 0xa87f,
	0xa8c5, 0xa8cd,
	0xa8da, 0xa8df,
	0xa8fc, 0xa8ff,
	0xa954, 0xa95e,
	0xa97d, 0xa97f,
	0xa9ce, 0xa9ce,
	0xa9da, 0xa9dd,
	0xa9e0, 0xa9ff,
	0xaa37, 0xaa3f,
	0xaa4e, 0xaa4f,
	0xaa5a, 0xaa5b,
	0xaa7c, 0xaa7f,
	0xaac3, 0xaada,
	0xaae0, 0xab00,
	0xab07, 0xab08,
	0xab0f, 0xab10,
	0xab17, 0xab1f,
	0xab27, 0xab27,
	0xab2f, 0xabbf,
	0xabee, 0xabef,
	0xabfa, 0xabff,
	0xd7a4, 0xd7af,
	0xd7c7, 0xd7ca,
	0xd7fc, 0xf8ff,
	0xfa2e, 0xfa2f,
	0xfa6e, 0xfa6f,
	0xfada, 0xfaff,
	0xfb07, 0xfb12,
	0xfb18, 0xfb1c,
	0xfb37, 0xfb37,
	0xfb3d, 0xfb3d,
	0xfb3f, 0xfb3f,
	0xfb42, 0xfb42,
	0xfb45, 0xfb45,
	0xfbc2, 0xfbd2,
	0xfd40, 0xfd4f,
	0xfd90, 0xfd91,
	0xfdc8, 0xfdef,
	0xfdfe, 0xfdff,
	0xfe1a, 0xfe1f,
	0xfe27, 0xfe2f,
	0xfe53, 0xfe53,
	0xfe67, 0xfe67,
	0xfe6c, 0xfe6f,
	0xfe75, 0xfe75,
	0xfefd, 0xfefe,
	0xff00, 0xff00,
	0xffbf, 0xffc1,
	0xffc8, 0xffc9,
	0xffd0, 0xffd1,
	0xffd8, 0xffd9,
	0xffdd, 0xffdf,
	0xffe7, 0xffe7,
	0xffef, 0xfff8,
	0xfffe, 0xffff,
	0x1000c, 0x1000c,
	0x10027, 0x10027,
	0x1003b, 0x1003b,
	0x1003e, 0x1003e,
	0x1004e, 0x1004f,
	0x1005e, 0x1007f,
	0x100fb, 0x100ff,
	0x10103, 0x10106,
	0x10134, 0x10136,
	0x1018b, 0x1018f,
	0x1019c, 0x101cf,
	0x101fe, 0x1027f,
	0x1029d, 0x1029f,
	0x102d1, 0x102ff,
	0x1031f, 0x1031f,
	0x10324, 0x1032f,
	0x1034b, 0x1037f,
	0x1039e, 0x1039e,
	0x103c4, 0x103c7,
	0x103d6, 0x103ff,
	0x1049e, 0x1049f,
	0x104aa, 0x107ff,
	0x10806, 0x10807,
	0x10809, 0x10809,
	0x10836, 0x10836,
	0x10839, 0x1083b,
	0x1083d, 0x1083e,
	0x10856, 0x10856,
	0x10860, 0x108ff,
	0x1091c, 0x1091e,
	0x1093a, 0x1093e,
	0x10940, 0x109ff,
	0x10a04, 0x10a04,
	0x10a07, 0x10a0b,
	0x10a14, 0x10a14,
	0x10a18, 0x10a18,
	0x10a34, 0x10a37,
	0x10a3b, 0x10a3e,
	0x10a48, 0x10a4f,
	0x10a59, 0x10a5f,
	0x10a80, 0x10aff,
	0x10b36, 0x10b38,
	0x10b56, 0x10b57,
	0x10b73, 0x10b77,
	0x10b80, 0x10bff,
	0x10c49, 0x10e5f,
	0x10e7f, 0x10fff,
	0x1104e, 0x11051,
	0x11070, 0x1107f,
	0x110c2, 0x11fff,
	0x1236f, 0x123ff,
	0x12463, 0x1246f,
	0x12474, 0x12fff,
	0x1342f, 0x167ff,
	0x16a39, 0x1afff,
	0x1b002, 0x1cfff,
	0x1d0f6, 0x1d0ff,
	0x1d127, 0x1d128,
	0x1d1de, 0x1d1ff,
	0x1d246, 0x1d2ff,
	0x1d357, 0x1d35f,
	0x1d372, 0x1d3ff,
	0x1d455, 0x1d455,
	0x1d49d, 0x1d49d,
	0x1d4a0, 0x1d4a1,
	0x1d4a3, 0x1d4a4,
	0x1d4a7, 0x1d4a8,
	0x1d4ad, 0x1d4ad,
	0x1d4ba, 0x1d4ba,
	0x1d4bc, 0x1d4bc,
	0x1d4c4, 0x1d4c4,
	0x1d506, 0x1d506,
	0x1d50b, 0x1d50c,
	0x1d515, 0x1d515,
	0x1d51d, 0x1d51d,
	0x1d53a, 0x1d53a,
	0x1d53f, 0x1d53f,
	0x1d545, 0x1d545,
	0x1d547, 0x1d549,
	0x1d551, 0x1d551,
	0x1d6a6, 0x1d6a7,
	0x1d7cc, 0x1d7cd,
	0x1d800, 0x1efff,
	0x1f02c, 0x1f02f,
	0x1f094, 0x1f09f,
	0x1f0af, 0x1f0b0,
	0x1f0bf, 0x1f0c0,
	0x1f0d0, 0x1f0d0,
	0x1f0e0, 0x1f0ff,
	0x1f10b, 0x1f10f,
	0x1f12f, 0x1f12f,
	0x1f16a, 0x1f16f,
	0x1f19b, 0x1f1e5,
	0x1f203, 0x1f20f,
	0x1f23b, 0x1f23f,
	0x1f249, 0x1f24f,
	0x1f252, 0x1f2ff,
	0x1f321, 0x1f32f,
	0x1f336, 0x1f336,
	0x1f37d, 0x1f37f,
	0x1f394, 0x1f39f,
	0x1f3c5, 0x1f3c5,
	0x1f3cb, 0x1f3df,
	0x1f3f1, 0x1f3ff,
	0x1f43f, 0x1f43f,
	0x1f441, 0x1f441,
	0x1f4f8, 0x1f4f8,
	0x1f4fd, 0x1f4ff,
	0x1f53e, 0x1f54f,
	0x1f568, 0x1f5fa,
	0x1f600, 0x1f600,
	0x1f611, 0x1f611,
	0x1f615, 0x1f615,
	0x1f617, 0x1f617,
	0x1f619, 0x1f619,
	0x1f61b, 0x1f61b,
	0x1f61f, 0x1f61f,
	0x1f626, 0x1f627,
	0x1f62c, 0x1f62c,
	0x1f62e, 0x1f62f,
	0x1f634, 0x1f634,
	0x1f641, 0x1f644,
	0x1f650, 0x1f67f,
	0x1f6c6, 0x1f6ff,
	0x1f774, 0x1ffff,
	0x2a6d7, 0x2a6ff,
	0x2b735, 0x2b73f,
	0x2b81e, 0x2f7ff,
	0x2fa1e, 0xe0000,
	0xe0002, 0xe001f,
	0xe0080, 0xe00ff,
	0xe01f0, 0x10ffff,
}; /* CR_Unknown */

/* 'Age_1_1': Derived Age 1.1 */
static const OnigCodePoint CR_Age_1_1[] = {
	288,
	0x0000, 0x01f5,
	0x01fa, 0x0217,
	0x0250, 0x02a8,
	0x02b0, 0x02de,
	0x02e0, 0x02e9,
	0x0300, 0x0345,
	0x0360, 0x0361,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x03d6,
	0x03da, 0x03da,
	0x03dc, 0x03dc,
	0x03de, 0x03de,
	0x03e0, 0x03e0,
	0x03e2, 0x03f3,
	0x0401, 0x040c,
	0x040e, 0x044f,
	0x0451, 0x045c,
	0x045e, 0x0486,
	0x0490, 0x04c4,
	0x04c7, 0x04c8,
	0x04cb, 0x04cc,
	0x04d0, 0x04eb,
	0x04ee, 0x04f5,
	0x04f8, 0x04f9,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x0589,
	0x05b0, 0x05b9,
	0x05bb, 0x05c3,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x0652,
	0x0660, 0x066d,
	0x0670, 0x06b7,
	0x06ba, 0x06be,
	0x06c0, 0x06ce,
	0x06d0, 0x06ed,
	0x06f0, 0x06f9,
	0x0901, 0x0903,
	0x0905, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09bc,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a02, 0x0a02,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8b,
	0x0a8d, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae0,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b36, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b70,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb5,
	0x0bb7, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be7, 0x0bf2,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x10a0, 0x10c5,
	0x10d0, 0x10f6,
	0x10fb, 0x10fb,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1e00, 0x1e9a,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x202e,
	0x2030, 0x2046,
	0x206a, 0x2070,
	0x2074, 0x208e,
	0x20a0, 0x20aa,
	0x20d0, 0x20e1,
	0x2100, 0x2138,
	0x2153, 0x2182,
	0x2190, 0x21ea,
	0x2200, 0x22f1,
	0x2300, 0x2300,
	0x2302, 0x237a,
	0x2400, 0x2424,
	0x2440, 0x244a,
	0x2460, 0x24ea,
	0x2500, 0x2595,
	0x25a0, 0x25ef,
	0x2600, 0x2613,
	0x261a, 0x266f,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2767,
	0x2776, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x3000, 0x3037,
	0x303f, 0x303f,
	0x3041, 0x3094,
	0x3099, 0x309e,
	0x30a1, 0x30fe,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x319f,
	0x3200, 0x321c,
	0x3220, 0x3243,
	0x3260, 0x327b,
	0x327f, 0x32b0,
	0x32c0, 0x32cb,
	0x32d0, 0x32fe,
	0x3300, 0x3376,
	0x337b, 0x33dd,
	0x33e0, 0x33fe,
	0x4e00, 0x9fa5,
	0xe000, 0xfa2d,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1e, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe20, 0xfe23,
	0xfe30, 0xfe44,
	0xfe49, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe72,
	0xfe74, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xff5e,
	0xff61, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfffd, 0xffff,
}; /* CR_Age_1_1 */

/* 'Age_2_0': Derived Age 2.0 */
static const OnigCodePoint CR_Age_2_0[] = {
	312,
	0x0000, 0x01f5,
	0x01fa, 0x0217,
	0x0250, 0x02a8,
	0x02b0, 0x02de,
	0x02e0, 0x02e9,
	0x0300, 0x0345,
	0x0360, 0x0361,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x03d6,
	0x03da, 0x03da,
	0x03dc, 0x03dc,
	0x03de, 0x03de,
	0x03e0, 0x03e0,
	0x03e2, 0x03f3,
	0x0401, 0x040c,
	0x040e, 0x044f,
	0x0451, 0x045c,
	0x045e, 0x0486,
	0x0490, 0x04c4,
	0x04c7, 0x04c8,
	0x04cb, 0x04cc,
	0x04d0, 0x04eb,
	0x04ee, 0x04f5,
	0x04f8, 0x04f9,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x0589,
	0x0591, 0x05a1,
	0x05a3, 0x05b9,
	0x05bb, 0x05c4,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x0652,
	0x0660, 0x066d,
	0x0670, 0x06b7,
	0x06ba, 0x06be,
	0x06c0, 0x06ce,
	0x06d0, 0x06ed,
	0x06f0, 0x06f9,
	0x0901, 0x0903,
	0x0905, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09bc,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a02, 0x0a02,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8b,
	0x0a8d, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae0,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b36, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b70,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb5,
	0x0bb7, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be7, 0x0bf2,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f69,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f95,
	0x0f97, 0x0f97,
	0x0f99, 0x0fad,
	0x0fb1, 0x0fb7,
	0x0fb9, 0x0fb9,
	0x10a0, 0x10c5,
	0x10d0, 0x10f6,
	0x10fb, 0x10fb,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1e00, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x202e,
	0x2030, 0x2046,
	0x206a, 0x2070,
	0x2074, 0x208e,
	0x20a0, 0x20ab,
	0x20d0, 0x20e1,
	0x2100, 0x2138,
	0x2153, 0x2182,
	0x2190, 0x21ea,
	0x2200, 0x22f1,
	0x2300, 0x2300,
	0x2302, 0x237a,
	0x2400, 0x2424,
	0x2440, 0x244a,
	0x2460, 0x24ea,
	0x2500, 0x2595,
	0x25a0, 0x25ef,
	0x2600, 0x2613,
	0x261a, 0x266f,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2767,
	0x2776, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x3000, 0x3037,
	0x303f, 0x303f,
	0x3041, 0x3094,
	0x3099, 0x309e,
	0x30a1, 0x30fe,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x319f,
	0x3200, 0x321c,
	0x3220, 0x3243,
	0x3260, 0x327b,
	0x327f, 0x32b0,
	0x32c0, 0x32cb,
	0x32d0, 0x32fe,
	0x3300, 0x3376,
	0x337b, 0x33dd,
	0x33e0, 0x33fe,
	0x4e00, 0x9fa5,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1e, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe20, 0xfe23,
	0xfe30, 0xfe44,
	0xfe49, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe72,
	0xfe74, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xff5e,
	0xff61, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfffd, 0xffff,
	0x1fffe, 0x1ffff,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xefffe, 0x10ffff,
}; /* CR_Age_2_0 */

/* 'Age_2_1': Derived Age 2.1 */
static const OnigCodePoint CR_Age_2_1[] = {
	312,
	0x0000, 0x01f5,
	0x01fa, 0x0217,
	0x0250, 0x02a8,
	0x02b0, 0x02de,
	0x02e0, 0x02e9,
	0x0300, 0x0345,
	0x0360, 0x0361,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x03d6,
	0x03da, 0x03da,
	0x03dc, 0x03dc,
	0x03de, 0x03de,
	0x03e0, 0x03e0,
	0x03e2, 0x03f3,
	0x0401, 0x040c,
	0x040e, 0x044f,
	0x0451, 0x045c,
	0x045e, 0x0486,
	0x0490, 0x04c4,
	0x04c7, 0x04c8,
	0x04cb, 0x04cc,
	0x04d0, 0x04eb,
	0x04ee, 0x04f5,
	0x04f8, 0x04f9,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x0589,
	0x0591, 0x05a1,
	0x05a3, 0x05b9,
	0x05bb, 0x05c4,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x0652,
	0x0660, 0x066d,
	0x0670, 0x06b7,
	0x06ba, 0x06be,
	0x06c0, 0x06ce,
	0x06d0, 0x06ed,
	0x06f0, 0x06f9,
	0x0901, 0x0903,
	0x0905, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09bc,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a02, 0x0a02,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8b,
	0x0a8d, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae0,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b36, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b70,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb5,
	0x0bb7, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be7, 0x0bf2,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f69,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f95,
	0x0f97, 0x0f97,
	0x0f99, 0x0fad,
	0x0fb1, 0x0fb7,
	0x0fb9, 0x0fb9,
	0x10a0, 0x10c5,
	0x10d0, 0x10f6,
	0x10fb, 0x10fb,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1e00, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x202e,
	0x2030, 0x2046,
	0x206a, 0x2070,
	0x2074, 0x208e,
	0x20a0, 0x20ac,
	0x20d0, 0x20e1,
	0x2100, 0x2138,
	0x2153, 0x2182,
	0x2190, 0x21ea,
	0x2200, 0x22f1,
	0x2300, 0x2300,
	0x2302, 0x237a,
	0x2400, 0x2424,
	0x2440, 0x244a,
	0x2460, 0x24ea,
	0x2500, 0x2595,
	0x25a0, 0x25ef,
	0x2600, 0x2613,
	0x261a, 0x266f,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2767,
	0x2776, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x3000, 0x3037,
	0x303f, 0x303f,
	0x3041, 0x3094,
	0x3099, 0x309e,
	0x30a1, 0x30fe,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x319f,
	0x3200, 0x321c,
	0x3220, 0x3243,
	0x3260, 0x327b,
	0x327f, 0x32b0,
	0x32c0, 0x32cb,
	0x32d0, 0x32fe,
	0x3300, 0x3376,
	0x337b, 0x33dd,
	0x33e0, 0x33fe,
	0x4e00, 0x9fa5,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1e, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe20, 0xfe23,
	0xfe30, 0xfe44,
	0xfe49, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe72,
	0xfe74, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xff5e,
	0xff61, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfffc, 0xffff,
	0x1fffe, 0x1ffff,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xefffe, 0x10ffff,
}; /* CR_Age_2_1 */

/* 'Age_3_0': Derived Age 3.0 */
static const OnigCodePoint CR_Age_3_0[] = {
	369,
	0x0000, 0x021f,
	0x0222, 0x0233,
	0x0250, 0x02ad,
	0x02b0, 0x02ee,
	0x0300, 0x034e,
	0x0360, 0x0362,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x03d7,
	0x03da, 0x03f3,
	0x0400, 0x0486,
	0x0488, 0x0489,
	0x048c, 0x04c4,
	0x04c7, 0x04c8,
	0x04cb, 0x04cc,
	0x04d0, 0x04f5,
	0x04f8, 0x04f9,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05a1,
	0x05a3, 0x05b9,
	0x05bb, 0x05c4,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x0655,
	0x0660, 0x066d,
	0x0670, 0x06ed,
	0x06f0, 0x06fe,
	0x0700, 0x070d,
	0x070f, 0x072c,
	0x0730, 0x074a,
	0x0780, 0x07b0,
	0x0901, 0x0903,
	0x0905, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09bc,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a02, 0x0a02,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8b,
	0x0a8d, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae0,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b36, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b70,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb5,
	0x0bb7, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be7, 0x0bf2,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6a,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fcf, 0x0fcf,
	0x1000, 0x1021,
	0x1023, 0x1027,
	0x1029, 0x102a,
	0x102c, 0x1032,
	0x1036, 0x1039,
	0x1040, 0x1059,
	0x10a0, 0x10c5,
	0x10d0, 0x10f6,
	0x10fb, 0x10fb,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1200, 0x1206,
	0x1208, 0x1246,
	0x1248, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1286,
	0x1288, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12ae,
	0x12b0, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12ce,
	0x12d0, 0x12d6,
	0x12d8, 0x12ee,
	0x12f0, 0x130e,
	0x1310, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x131e,
	0x1320, 0x1346,
	0x1348, 0x135a,
	0x1361, 0x137c,
	0x13a0, 0x13f4,
	0x1401, 0x1676,
	0x1680, 0x169c,
	0x16a0, 0x16f0,
	0x1780, 0x17dc,
	0x17e0, 0x17e9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18a9,
	0x1e00, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2046,
	0x2048, 0x204d,
	0x206a, 0x2070,
	0x2074, 0x208e,
	0x20a0, 0x20af,
	0x20d0, 0x20e3,
	0x2100, 0x213a,
	0x2153, 0x2183,
	0x2190, 0x21f3,
	0x2200, 0x22f1,
	0x2300, 0x237b,
	0x237d, 0x239a,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x24ea,
	0x2500, 0x2595,
	0x25a0, 0x25f7,
	0x2600, 0x2613,
	0x2619, 0x2671,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2767,
	0x2776, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x2800, 0x28ff,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303a,
	0x303e, 0x303f,
	0x3041, 0x3094,
	0x3099, 0x309e,
	0x30a1, 0x30fe,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x3200, 0x321c,
	0x3220, 0x3243,
	0x3260, 0x327b,
	0x327f, 0x32b0,
	0x32c0, 0x32cb,
	0x32d0, 0x32fe,
	0x3300, 0x3376,
	0x337b, 0x33dd,
	0x33e0, 0x33fe,
	0x3400, 0x4db5,
	0x4e00, 0x9fa5,
	0xa000, 0xa48c,
	0xa490, 0xa4a1,
	0xa4a4, 0xa4b3,
	0xa4b5, 0xa4c0,
	0xa4c2, 0xa4c4,
	0xa4c6, 0xa4c6,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdf0, 0xfdfb,
	0xfe20, 0xfe23,
	0xfe30, 0xfe44,
	0xfe49, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe72,
	0xfe74, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xff5e,
	0xff61, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0xffff,
	0x1fffe, 0x1ffff,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xefffe, 0x10ffff,
}; /* CR_Age_3_0 */

/* 'Age_3_1': Derived Age 3.1 */
static const OnigCodePoint CR_Age_3_1[] = {
	402,
	0x0000, 0x021f,
	0x0222, 0x0233,
	0x0250, 0x02ad,
	0x02b0, 0x02ee,
	0x0300, 0x034e,
	0x0360, 0x0362,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x03d7,
	0x03da, 0x03f5,
	0x0400, 0x0486,
	0x0488, 0x0489,
	0x048c, 0x04c4,
	0x04c7, 0x04c8,
	0x04cb, 0x04cc,
	0x04d0, 0x04f5,
	0x04f8, 0x04f9,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05a1,
	0x05a3, 0x05b9,
	0x05bb, 0x05c4,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x0655,
	0x0660, 0x066d,
	0x0670, 0x06ed,
	0x06f0, 0x06fe,
	0x0700, 0x070d,
	0x070f, 0x072c,
	0x0730, 0x074a,
	0x0780, 0x07b0,
	0x0901, 0x0903,
	0x0905, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09bc,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a02, 0x0a02,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8b,
	0x0a8d, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae0,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b36, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b70,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb5,
	0x0bb7, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be7, 0x0bf2,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6a,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fcf, 0x0fcf,
	0x1000, 0x1021,
	0x1023, 0x1027,
	0x1029, 0x102a,
	0x102c, 0x1032,
	0x1036, 0x1039,
	0x1040, 0x1059,
	0x10a0, 0x10c5,
	0x10d0, 0x10f6,
	0x10fb, 0x10fb,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1200, 0x1206,
	0x1208, 0x1246,
	0x1248, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1286,
	0x1288, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12ae,
	0x12b0, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12ce,
	0x12d0, 0x12d6,
	0x12d8, 0x12ee,
	0x12f0, 0x130e,
	0x1310, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x131e,
	0x1320, 0x1346,
	0x1348, 0x135a,
	0x1361, 0x137c,
	0x13a0, 0x13f4,
	0x1401, 0x1676,
	0x1680, 0x169c,
	0x16a0, 0x16f0,
	0x1780, 0x17dc,
	0x17e0, 0x17e9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18a9,
	0x1e00, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2046,
	0x2048, 0x204d,
	0x206a, 0x2070,
	0x2074, 0x208e,
	0x20a0, 0x20af,
	0x20d0, 0x20e3,
	0x2100, 0x213a,
	0x2153, 0x2183,
	0x2190, 0x21f3,
	0x2200, 0x22f1,
	0x2300, 0x237b,
	0x237d, 0x239a,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x24ea,
	0x2500, 0x2595,
	0x25a0, 0x25f7,
	0x2600, 0x2613,
	0x2619, 0x2671,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2767,
	0x2776, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x2800, 0x28ff,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303a,
	0x303e, 0x303f,
	0x3041, 0x3094,
	0x3099, 0x309e,
	0x30a1, 0x30fe,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x3200, 0x321c,
	0x3220, 0x3243,
	0x3260, 0x327b,
	0x327f, 0x32b0,
	0x32c0, 0x32cb,
	0x32d0, 0x32fe,
	0x3300, 0x3376,
	0x337b, 0x33dd,
	0x33e0, 0x33fe,
	0x3400, 0x4db5,
	0x4e00, 0x9fa5,
	0xa000, 0xa48c,
	0xa490, 0xa4a1,
	0xa4a4, 0xa4b3,
	0xa4b5, 0xa4c0,
	0xa4c2, 0xa4c4,
	0xa4c6, 0xa4c6,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfb,
	0xfe20, 0xfe23,
	0xfe30, 0xfe44,
	0xfe49, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe72,
	0xfe74, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xff5e,
	0xff61, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0xffff,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10400, 0x10425,
	0x10428, 0x1044d,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d12a, 0x1d1dd,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c0,
	0x1d4c2, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a3,
	0x1d6a8, 0x1d7c9,
	0x1d7ce, 0x1d7ff,
	0x1fffe, 0x2a6d6,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xefffe, 0x10ffff,
}; /* CR_Age_3_1 */

/* 'Age_3_2': Derived Age 3.2 */
static const OnigCodePoint CR_Age_3_2[] = {
	397,
	0x0000, 0x0220,
	0x0222, 0x0233,
	0x0250, 0x02ad,
	0x02b0, 0x02ee,
	0x0300, 0x034f,
	0x0360, 0x036f,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x03f6,
	0x0400, 0x0486,
	0x0488, 0x04ce,
	0x04d0, 0x04f5,
	0x04f8, 0x04f9,
	0x0500, 0x050f,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05a1,
	0x05a3, 0x05b9,
	0x05bb, 0x05c4,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x060c, 0x060c,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x0655,
	0x0660, 0x06ed,
	0x06f0, 0x06fe,
	0x0700, 0x070d,
	0x070f, 0x072c,
	0x0730, 0x074a,
	0x0780, 0x07b1,
	0x0901, 0x0903,
	0x0905, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09bc,
	0x09be, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a02, 0x0a02,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8b,
	0x0a8d, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae0,
	0x0ae6, 0x0aef,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b36, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b70,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb5,
	0x0bb7, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be7, 0x0bf2,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbe, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6a,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fcf, 0x0fcf,
	0x1000, 0x1021,
	0x1023, 0x1027,
	0x1029, 0x102a,
	0x102c, 0x1032,
	0x1036, 0x1039,
	0x1040, 0x1059,
	0x10a0, 0x10c5,
	0x10d0, 0x10f8,
	0x10fb, 0x10fb,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1200, 0x1206,
	0x1208, 0x1246,
	0x1248, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1286,
	0x1288, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12ae,
	0x12b0, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12ce,
	0x12d0, 0x12d6,
	0x12d8, 0x12ee,
	0x12f0, 0x130e,
	0x1310, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x131e,
	0x1320, 0x1346,
	0x1348, 0x135a,
	0x1361, 0x137c,
	0x13a0, 0x13f4,
	0x1401, 0x1676,
	0x1680, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dc,
	0x17e0, 0x17e9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18a9,
	0x1e00, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2052,
	0x2057, 0x2057,
	0x205f, 0x2063,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x20a0, 0x20b1,
	0x20d0, 0x20ea,
	0x2100, 0x213a,
	0x213d, 0x214b,
	0x2153, 0x2183,
	0x2190, 0x23ce,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x24fe,
	0x2500, 0x2613,
	0x2616, 0x2617,
	0x2619, 0x267d,
	0x2680, 0x2689,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x27d0, 0x27eb,
	0x27f0, 0x2aff,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x31f0, 0x321c,
	0x3220, 0x3243,
	0x3251, 0x327b,
	0x327f, 0x32cb,
	0x32d0, 0x32fe,
	0x3300, 0x3376,
	0x337b, 0x33dd,
	0x33e0, 0x33fe,
	0x3400, 0x4db5,
	0x4e00, 0x9fa5,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6a,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfc,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe23,
	0xfe30, 0xfe46,
	0xfe49, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0xffff,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10400, 0x10425,
	0x10428, 0x1044d,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d12a, 0x1d1dd,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c0,
	0x1d4c2, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a3,
	0x1d6a8, 0x1d7c9,
	0x1d7ce, 0x1d7ff,
	0x1fffe, 0x2a6d6,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xefffe, 0x10ffff,
}; /* CR_Age_3_2 */

/* 'Age_4_0': Derived Age 4.0 */
static const OnigCodePoint CR_Age_4_0[] = {
	412,
	0x0000, 0x0236,
	0x0250, 0x0357,
	0x035d, 0x036f,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x03fb,
	0x0400, 0x0486,
	0x0488, 0x04ce,
	0x04d0, 0x04f5,
	0x04f8, 0x04f9,
	0x0500, 0x050f,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05a1,
	0x05a3, 0x05b9,
	0x05bb, 0x05c4,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x060c, 0x0615,
	0x061b, 0x061b,
	0x061f, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x0658,
	0x0660, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x074f,
	0x0780, 0x07b1,
	0x0901, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09cd,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb5,
	0x0bb7, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be7, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6a,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fcf, 0x0fcf,
	0x1000, 0x1021,
	0x1023, 0x1027,
	0x1029, 0x102a,
	0x102c, 0x1032,
	0x1036, 0x1039,
	0x1040, 0x1059,
	0x10a0, 0x10c5,
	0x10d0, 0x10f8,
	0x10fb, 0x10fb,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1200, 0x1206,
	0x1208, 0x1246,
	0x1248, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1286,
	0x1288, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12ae,
	0x12b0, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12ce,
	0x12d0, 0x12d6,
	0x12d8, 0x12ee,
	0x12f0, 0x130e,
	0x1310, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x131e,
	0x1320, 0x1346,
	0x1348, 0x135a,
	0x1361, 0x137c,
	0x13a0, 0x13f4,
	0x1401, 0x1676,
	0x1680, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18a9,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x19e0, 0x19ff,
	0x1d00, 0x1d6b,
	0x1e00, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2054,
	0x2057, 0x2057,
	0x205f, 0x2063,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x20a0, 0x20b1,
	0x20d0, 0x20ea,
	0x2100, 0x213b,
	0x213d, 0x214b,
	0x2153, 0x2183,
	0x2190, 0x23d0,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x2617,
	0x2619, 0x267d,
	0x2680, 0x2691,
	0x26a0, 0x26a1,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x27d0, 0x27eb,
	0x27f0, 0x2b0d,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x31f0, 0x321e,
	0x3220, 0x3243,
	0x3250, 0x327d,
	0x327f, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fa5,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6a,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe0f,
	0xfe20, 0xfe23,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1013f,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x1039f,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x1083f,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d12a, 0x1d1dd,
	0x1d300, 0x1d356,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a3,
	0x1d6a8, 0x1d7c9,
	0x1d7ce, 0x1d7ff,
	0x1fffe, 0x2a6d6,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_4_0 */

/* 'Age_4_1': Derived Age 4.1 */
static const OnigCodePoint CR_Age_4_1[] = {
	430,
	0x0000, 0x0241,
	0x0250, 0x036f,
	0x0374, 0x0375,
	0x037a, 0x037a,
	0x037e, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x0486,
	0x0488, 0x04ce,
	0x04d0, 0x04f9,
	0x0500, 0x050f,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05b9,
	0x05bb, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x060b, 0x0615,
	0x061b, 0x061b,
	0x061e, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x065e,
	0x0660, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x076d,
	0x0780, 0x07b1,
	0x0901, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x097d, 0x097d,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce1,
	0x0ce6, 0x0cef,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6a,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fcf, 0x0fd1,
	0x1000, 0x1021,
	0x1023, 0x1027,
	0x1029, 0x102a,
	0x102c, 0x1032,
	0x1036, 0x1039,
	0x1040, 0x1059,
	0x10a0, 0x10c5,
	0x10d0, 0x10fc,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1200, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135f, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1401, 0x1676,
	0x1680, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18a9,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19a9,
	0x19b0, 0x19c9,
	0x19d0, 0x19d9,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a1f,
	0x1d00, 0x1dc3,
	0x1e00, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2063,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x2094,
	0x20a0, 0x20b5,
	0x20d0, 0x20eb,
	0x2100, 0x214c,
	0x2153, 0x2183,
	0x2190, 0x23db,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x269c,
	0x26a0, 0x26b1,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x27c0, 0x27c6,
	0x27d0, 0x27eb,
	0x27f0, 0x2b13,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c80, 0x2cea,
	0x2cf9, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2e00, 0x2e17,
	0x2e1c, 0x2e1d,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x31c0, 0x31cf,
	0x31f0, 0x321e,
	0x3220, 0x3243,
	0x3250, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fbb,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa700, 0xa716,
	0xa800, 0xa82b,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6a,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe23,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x1083f,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d12a, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7c9,
	0x1d7ce, 0x1d7ff,
	0x1fffe, 0x2a6d6,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_4_1 */

/* 'Age_5_0': Derived Age 5.0 */
static const OnigCodePoint CR_Age_5_0[] = {
	440,
	0x0000, 0x036f,
	0x0374, 0x0375,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x03ce,
	0x03d0, 0x0486,
	0x0488, 0x0513,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x060b, 0x0615,
	0x061b, 0x061b,
	0x061e, 0x061f,
	0x0621, 0x063a,
	0x0640, 0x065e,
	0x0660, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x076d,
	0x0780, 0x07b1,
	0x07c0, 0x07fa,
	0x0901, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0970,
	0x097b, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a74,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b43,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b61,
	0x0b66, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3e, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c60, 0x0c61,
	0x0c66, 0x0c6f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3e, 0x0d43,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d61,
	0x0d66, 0x0d6f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6a,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fcf, 0x0fd1,
	0x1000, 0x1021,
	0x1023, 0x1027,
	0x1029, 0x102a,
	0x102c, 0x1032,
	0x1036, 0x1039,
	0x1040, 0x1059,
	0x10a0, 0x10c5,
	0x10d0, 0x10fc,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1200, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135f, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1401, 0x1676,
	0x1680, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18a9,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19a9,
	0x19b0, 0x19c9,
	0x19d0, 0x19d9,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a1f,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1d00, 0x1dca,
	0x1dfe, 0x1e9b,
	0x1ea0, 0x1ef9,
	0x1f00, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2063,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x2094,
	0x20a0, 0x20b5,
	0x20d0, 0x20ef,
	0x2100, 0x214e,
	0x2153, 0x2184,
	0x2190, 0x23e7,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x269c,
	0x26a0, 0x26b2,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x27c0, 0x27ca,
	0x27d0, 0x27eb,
	0x27f0, 0x2b1a,
	0x2b20, 0x2b23,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2c6c,
	0x2c74, 0x2c77,
	0x2c80, 0x2cea,
	0x2cf9, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2e00, 0x2e17,
	0x2e1c, 0x2e1d,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312c,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x31c0, 0x31cf,
	0x31f0, 0x321e,
	0x3220, 0x3243,
	0x3250, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fbb,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa700, 0xa71a,
	0xa720, 0xa721,
	0xa800, 0xa82b,
	0xa840, 0xa877,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6a,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe23,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x1083f,
	0x10900, 0x10919,
	0x1091f, 0x1091f,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d12a, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1fffe, 0x2a6d6,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_5_0 */

/* 'Age_5_1': Derived Age 5.1 */
static const OnigCodePoint CR_Age_5_1[] = {
	455,
	0x0000, 0x0377,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x0523,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x0606, 0x061b,
	0x061e, 0x061f,
	0x0621, 0x065e,
	0x0660, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0901, 0x0939,
	0x093c, 0x094d,
	0x0950, 0x0954,
	0x0958, 0x0972,
	0x097b, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fa,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fd4,
	0x1000, 0x1099,
	0x109e, 0x10c5,
	0x10d0, 0x10fc,
	0x1100, 0x1159,
	0x115f, 0x11a2,
	0x11a8, 0x11f9,
	0x1200, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135f, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1401, 0x1676,
	0x1680, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19a9,
	0x19b0, 0x19c9,
	0x19d0, 0x19d9,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a1f,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1baa,
	0x1bae, 0x1bb9,
	0x1c00, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1d00, 0x1de6,
	0x1dfe, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2064,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x2094,
	0x20a0, 0x20b5,
	0x20d0, 0x20f0,
	0x2100, 0x214f,
	0x2153, 0x2188,
	0x2190, 0x23e7,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x269d,
	0x26a0, 0x26bc,
	0x26c0, 0x26c3,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x2756,
	0x2758, 0x275e,
	0x2761, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x27c0, 0x27ca,
	0x27cc, 0x27cc,
	0x27d0, 0x2b4c,
	0x2b50, 0x2b54,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2c6f,
	0x2c71, 0x2c7d,
	0x2c80, 0x2cea,
	0x2cf9, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e30,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x3243,
	0x3250, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fc3,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa500, 0xa62b,
	0xa640, 0xa65f,
	0xa662, 0xa673,
	0xa67c, 0xa697,
	0xa700, 0xa78c,
	0xa7fb, 0xa82b,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa900, 0xa953,
	0xa95f, 0xa95f,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa5f,
	0xac00, 0xd7a3,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6a,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe26,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10190, 0x1019b,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x1083f,
	0x10900, 0x10919,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1fffe, 0x2a6d6,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_5_1 */

/* 'Age_5_2': Derived Age 5.2 */
static const OnigCodePoint CR_Age_5_2[] = {
	495,
	0x0000, 0x0377,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x0525,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x0606, 0x061b,
	0x061e, 0x061f,
	0x0621, 0x065e,
	0x0660, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0800, 0x082d,
	0x0830, 0x083e,
	0x0900, 0x0939,
	0x093c, 0x094e,
	0x0950, 0x0955,
	0x0958, 0x0972,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b71,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d28,
	0x0d2a, 0x0d39,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4d,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f8b,
	0x0f90, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fd8,
	0x1000, 0x10c5,
	0x10d0, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135f, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1baa,
	0x1bae, 0x1bb9,
	0x1c00, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cd0, 0x1cf2,
	0x1d00, 0x1de6,
	0x1dfd, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2064,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x2094,
	0x20a0, 0x20b8,
	0x20d0, 0x20f0,
	0x2100, 0x2189,
	0x2190, 0x23e8,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x26cd,
	0x26cf, 0x26e1,
	0x26e3, 0x26e3,
	0x26e8, 0x26ff,
	0x2701, 0x2704,
	0x2706, 0x2709,
	0x270c, 0x2727,
	0x2729, 0x274b,
	0x274d, 0x274d,
	0x274f, 0x2752,
	0x2756, 0x275e,
	0x2761, 0x2794,
	0x2798, 0x27af,
	0x27b1, 0x27be,
	0x27c0, 0x27ca,
	0x27cc, 0x27cc,
	0x27d0, 0x2b4c,
	0x2b50, 0x2b59,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cf1,
	0x2cf9, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d6f,
	0x2d80, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e31,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31b7,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcb,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa65f,
	0xa662, 0xa673,
	0xa67c, 0xa697,
	0xa6a0, 0xa6f7,
	0xa700, 0xa78c,
	0xa7fb, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa8e0, 0xa8fb,
	0xa900, 0xa953,
	0xa95f, 0xa97c,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9df,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa7b,
	0xaa80, 0xaac2,
	0xaadb, 0xaadf,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbb1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe26,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10190, 0x1019b,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1085f,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a7f,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b7f,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11080, 0x110c1,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x13000, 0x1342e,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f100, 0x1f10a,
	0x1f110, 0x1f12e,
	0x1f131, 0x1f131,
	0x1f13d, 0x1f13d,
	0x1f13f, 0x1f13f,
	0x1f142, 0x1f142,
	0x1f146, 0x1f146,
	0x1f14a, 0x1f14e,
	0x1f157, 0x1f157,
	0x1f15f, 0x1f15f,
	0x1f179, 0x1f179,
	0x1f17b, 0x1f17c,
	0x1f17f, 0x1f17f,
	0x1f18a, 0x1f18d,
	0x1f190, 0x1f190,
	0x1f200, 0x1f200,
	0x1f210, 0x1f231,
	0x1f240, 0x1f248,
	0x1fffe, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_5_2 */

/* 'Age_6_0': Derived Age 6.0 */
static const OnigCodePoint CR_Age_6_0[] = {
	511,
	0x0000, 0x0377,
	0x037a, 0x037e,
	0x0384, 0x038a,
	0x038c, 0x038c,
	0x038e, 0x03a1,
	0x03a3, 0x0527,
	0x0531, 0x0556,
	0x0559, 0x055f,
	0x0561, 0x0587,
	0x0589, 0x058a,
	0x0591, 0x05c7,
	0x05d0, 0x05ea,
	0x05f0, 0x05f4,
	0x0600, 0x0603,
	0x0606, 0x061b,
	0x061e, 0x070d,
	0x070f, 0x074a,
	0x074d, 0x07b1,
	0x07c0, 0x07fa,
	0x0800, 0x082d,
	0x0830, 0x083e,
	0x0840, 0x085b,
	0x085e, 0x085e,
	0x0900, 0x0977,
	0x0979, 0x097f,
	0x0981, 0x0983,
	0x0985, 0x098c,
	0x098f, 0x0990,
	0x0993, 0x09a8,
	0x09aa, 0x09b0,
	0x09b2, 0x09b2,
	0x09b6, 0x09b9,
	0x09bc, 0x09c4,
	0x09c7, 0x09c8,
	0x09cb, 0x09ce,
	0x09d7, 0x09d7,
	0x09dc, 0x09dd,
	0x09df, 0x09e3,
	0x09e6, 0x09fb,
	0x0a01, 0x0a03,
	0x0a05, 0x0a0a,
	0x0a0f, 0x0a10,
	0x0a13, 0x0a28,
	0x0a2a, 0x0a30,
	0x0a32, 0x0a33,
	0x0a35, 0x0a36,
	0x0a38, 0x0a39,
	0x0a3c, 0x0a3c,
	0x0a3e, 0x0a42,
	0x0a47, 0x0a48,
	0x0a4b, 0x0a4d,
	0x0a51, 0x0a51,
	0x0a59, 0x0a5c,
	0x0a5e, 0x0a5e,
	0x0a66, 0x0a75,
	0x0a81, 0x0a83,
	0x0a85, 0x0a8d,
	0x0a8f, 0x0a91,
	0x0a93, 0x0aa8,
	0x0aaa, 0x0ab0,
	0x0ab2, 0x0ab3,
	0x0ab5, 0x0ab9,
	0x0abc, 0x0ac5,
	0x0ac7, 0x0ac9,
	0x0acb, 0x0acd,
	0x0ad0, 0x0ad0,
	0x0ae0, 0x0ae3,
	0x0ae6, 0x0aef,
	0x0af1, 0x0af1,
	0x0b01, 0x0b03,
	0x0b05, 0x0b0c,
	0x0b0f, 0x0b10,
	0x0b13, 0x0b28,
	0x0b2a, 0x0b30,
	0x0b32, 0x0b33,
	0x0b35, 0x0b39,
	0x0b3c, 0x0b44,
	0x0b47, 0x0b48,
	0x0b4b, 0x0b4d,
	0x0b56, 0x0b57,
	0x0b5c, 0x0b5d,
	0x0b5f, 0x0b63,
	0x0b66, 0x0b77,
	0x0b82, 0x0b83,
	0x0b85, 0x0b8a,
	0x0b8e, 0x0b90,
	0x0b92, 0x0b95,
	0x0b99, 0x0b9a,
	0x0b9c, 0x0b9c,
	0x0b9e, 0x0b9f,
	0x0ba3, 0x0ba4,
	0x0ba8, 0x0baa,
	0x0bae, 0x0bb9,
	0x0bbe, 0x0bc2,
	0x0bc6, 0x0bc8,
	0x0bca, 0x0bcd,
	0x0bd0, 0x0bd0,
	0x0bd7, 0x0bd7,
	0x0be6, 0x0bfa,
	0x0c01, 0x0c03,
	0x0c05, 0x0c0c,
	0x0c0e, 0x0c10,
	0x0c12, 0x0c28,
	0x0c2a, 0x0c33,
	0x0c35, 0x0c39,
	0x0c3d, 0x0c44,
	0x0c46, 0x0c48,
	0x0c4a, 0x0c4d,
	0x0c55, 0x0c56,
	0x0c58, 0x0c59,
	0x0c60, 0x0c63,
	0x0c66, 0x0c6f,
	0x0c78, 0x0c7f,
	0x0c82, 0x0c83,
	0x0c85, 0x0c8c,
	0x0c8e, 0x0c90,
	0x0c92, 0x0ca8,
	0x0caa, 0x0cb3,
	0x0cb5, 0x0cb9,
	0x0cbc, 0x0cc4,
	0x0cc6, 0x0cc8,
	0x0cca, 0x0ccd,
	0x0cd5, 0x0cd6,
	0x0cde, 0x0cde,
	0x0ce0, 0x0ce3,
	0x0ce6, 0x0cef,
	0x0cf1, 0x0cf2,
	0x0d02, 0x0d03,
	0x0d05, 0x0d0c,
	0x0d0e, 0x0d10,
	0x0d12, 0x0d3a,
	0x0d3d, 0x0d44,
	0x0d46, 0x0d48,
	0x0d4a, 0x0d4e,
	0x0d57, 0x0d57,
	0x0d60, 0x0d63,
	0x0d66, 0x0d75,
	0x0d79, 0x0d7f,
	0x0d82, 0x0d83,
	0x0d85, 0x0d96,
	0x0d9a, 0x0db1,
	0x0db3, 0x0dbb,
	0x0dbd, 0x0dbd,
	0x0dc0, 0x0dc6,
	0x0dca, 0x0dca,
	0x0dcf, 0x0dd4,
	0x0dd6, 0x0dd6,
	0x0dd8, 0x0ddf,
	0x0df2, 0x0df4,
	0x0e01, 0x0e3a,
	0x0e3f, 0x0e5b,
	0x0e81, 0x0e82,
	0x0e84, 0x0e84,
	0x0e87, 0x0e88,
	0x0e8a, 0x0e8a,
	0x0e8d, 0x0e8d,
	0x0e94, 0x0e97,
	0x0e99, 0x0e9f,
	0x0ea1, 0x0ea3,
	0x0ea5, 0x0ea5,
	0x0ea7, 0x0ea7,
	0x0eaa, 0x0eab,
	0x0ead, 0x0eb9,
	0x0ebb, 0x0ebd,
	0x0ec0, 0x0ec4,
	0x0ec6, 0x0ec6,
	0x0ec8, 0x0ecd,
	0x0ed0, 0x0ed9,
	0x0edc, 0x0edd,
	0x0f00, 0x0f47,
	0x0f49, 0x0f6c,
	0x0f71, 0x0f97,
	0x0f99, 0x0fbc,
	0x0fbe, 0x0fcc,
	0x0fce, 0x0fda,
	0x1000, 0x10c5,
	0x10d0, 0x10fc,
	0x1100, 0x1248,
	0x124a, 0x124d,
	0x1250, 0x1256,
	0x1258, 0x1258,
	0x125a, 0x125d,
	0x1260, 0x1288,
	0x128a, 0x128d,
	0x1290, 0x12b0,
	0x12b2, 0x12b5,
	0x12b8, 0x12be,
	0x12c0, 0x12c0,
	0x12c2, 0x12c5,
	0x12c8, 0x12d6,
	0x12d8, 0x1310,
	0x1312, 0x1315,
	0x1318, 0x135a,
	0x135d, 0x137c,
	0x1380, 0x1399,
	0x13a0, 0x13f4,
	0x1400, 0x169c,
	0x16a0, 0x16f0,
	0x1700, 0x170c,
	0x170e, 0x1714,
	0x1720, 0x1736,
	0x1740, 0x1753,
	0x1760, 0x176c,
	0x176e, 0x1770,
	0x1772, 0x1773,
	0x1780, 0x17dd,
	0x17e0, 0x17e9,
	0x17f0, 0x17f9,
	0x1800, 0x180e,
	0x1810, 0x1819,
	0x1820, 0x1877,
	0x1880, 0x18aa,
	0x18b0, 0x18f5,
	0x1900, 0x191c,
	0x1920, 0x192b,
	0x1930, 0x193b,
	0x1940, 0x1940,
	0x1944, 0x196d,
	0x1970, 0x1974,
	0x1980, 0x19ab,
	0x19b0, 0x19c9,
	0x19d0, 0x19da,
	0x19de, 0x1a1b,
	0x1a1e, 0x1a5e,
	0x1a60, 0x1a7c,
	0x1a7f, 0x1a89,
	0x1a90, 0x1a99,
	0x1aa0, 0x1aad,
	0x1b00, 0x1b4b,
	0x1b50, 0x1b7c,
	0x1b80, 0x1baa,
	0x1bae, 0x1bb9,
	0x1bc0, 0x1bf3,
	0x1bfc, 0x1c37,
	0x1c3b, 0x1c49,
	0x1c4d, 0x1c7f,
	0x1cd0, 0x1cf2,
	0x1d00, 0x1de6,
	0x1dfc, 0x1f15,
	0x1f18, 0x1f1d,
	0x1f20, 0x1f45,
	0x1f48, 0x1f4d,
	0x1f50, 0x1f57,
	0x1f59, 0x1f59,
	0x1f5b, 0x1f5b,
	0x1f5d, 0x1f5d,
	0x1f5f, 0x1f7d,
	0x1f80, 0x1fb4,
	0x1fb6, 0x1fc4,
	0x1fc6, 0x1fd3,
	0x1fd6, 0x1fdb,
	0x1fdd, 0x1fef,
	0x1ff2, 0x1ff4,
	0x1ff6, 0x1ffe,
	0x2000, 0x2064,
	0x206a, 0x2071,
	0x2074, 0x208e,
	0x2090, 0x209c,
	0x20a0, 0x20b9,
	0x20d0, 0x20f0,
	0x2100, 0x2189,
	0x2190, 0x23f3,
	0x2400, 0x2426,
	0x2440, 0x244a,
	0x2460, 0x26ff,
	0x2701, 0x27ca,
	0x27cc, 0x27cc,
	0x27ce, 0x2b4c,
	0x2b50, 0x2b59,
	0x2c00, 0x2c2e,
	0x2c30, 0x2c5e,
	0x2c60, 0x2cf1,
	0x2cf9, 0x2d25,
	0x2d30, 0x2d65,
	0x2d6f, 0x2d70,
	0x2d7f, 0x2d96,
	0x2da0, 0x2da6,
	0x2da8, 0x2dae,
	0x2db0, 0x2db6,
	0x2db8, 0x2dbe,
	0x2dc0, 0x2dc6,
	0x2dc8, 0x2dce,
	0x2dd0, 0x2dd6,
	0x2dd8, 0x2dde,
	0x2de0, 0x2e31,
	0x2e80, 0x2e99,
	0x2e9b, 0x2ef3,
	0x2f00, 0x2fd5,
	0x2ff0, 0x2ffb,
	0x3000, 0x303f,
	0x3041, 0x3096,
	0x3099, 0x30ff,
	0x3105, 0x312d,
	0x3131, 0x318e,
	0x3190, 0x31ba,
	0x31c0, 0x31e3,
	0x31f0, 0x321e,
	0x3220, 0x32fe,
	0x3300, 0x4db5,
	0x4dc0, 0x9fcb,
	0xa000, 0xa48c,
	0xa490, 0xa4c6,
	0xa4d0, 0xa62b,
	0xa640, 0xa673,
	0xa67c, 0xa697,
	0xa6a0, 0xa6f7,
	0xa700, 0xa78e,
	0xa790, 0xa791,
	0xa7a0, 0xa7a9,
	0xa7fa, 0xa82b,
	0xa830, 0xa839,
	0xa840, 0xa877,
	0xa880, 0xa8c4,
	0xa8ce, 0xa8d9,
	0xa8e0, 0xa8fb,
	0xa900, 0xa953,
	0xa95f, 0xa97c,
	0xa980, 0xa9cd,
	0xa9cf, 0xa9d9,
	0xa9de, 0xa9df,
	0xaa00, 0xaa36,
	0xaa40, 0xaa4d,
	0xaa50, 0xaa59,
	0xaa5c, 0xaa7b,
	0xaa80, 0xaac2,
	0xaadb, 0xaadf,
	0xab01, 0xab06,
	0xab09, 0xab0e,
	0xab11, 0xab16,
	0xab20, 0xab26,
	0xab28, 0xab2e,
	0xabc0, 0xabed,
	0xabf0, 0xabf9,
	0xac00, 0xd7a3,
	0xd7b0, 0xd7c6,
	0xd7cb, 0xd7fb,
	0xd800, 0xfa2d,
	0xfa30, 0xfa6d,
	0xfa70, 0xfad9,
	0xfb00, 0xfb06,
	0xfb13, 0xfb17,
	0xfb1d, 0xfb36,
	0xfb38, 0xfb3c,
	0xfb3e, 0xfb3e,
	0xfb40, 0xfb41,
	0xfb43, 0xfb44,
	0xfb46, 0xfbc1,
	0xfbd3, 0xfd3f,
	0xfd50, 0xfd8f,
	0xfd92, 0xfdc7,
	0xfdd0, 0xfdfd,
	0xfe00, 0xfe19,
	0xfe20, 0xfe26,
	0xfe30, 0xfe52,
	0xfe54, 0xfe66,
	0xfe68, 0xfe6b,
	0xfe70, 0xfe74,
	0xfe76, 0xfefc,
	0xfeff, 0xfeff,
	0xff01, 0xffbe,
	0xffc2, 0xffc7,
	0xffca, 0xffcf,
	0xffd2, 0xffd7,
	0xffda, 0xffdc,
	0xffe0, 0xffe6,
	0xffe8, 0xffee,
	0xfff9, 0x1000b,
	0x1000d, 0x10026,
	0x10028, 0x1003a,
	0x1003c, 0x1003d,
	0x1003f, 0x1004d,
	0x10050, 0x1005d,
	0x10080, 0x100fa,
	0x10100, 0x10102,
	0x10107, 0x10133,
	0x10137, 0x1018a,
	0x10190, 0x1019b,
	0x101d0, 0x101fd,
	0x10280, 0x1029c,
	0x102a0, 0x102d0,
	0x10300, 0x1031e,
	0x10320, 0x10323,
	0x10330, 0x1034a,
	0x10380, 0x1039d,
	0x1039f, 0x103c3,
	0x103c8, 0x103d5,
	0x10400, 0x1049d,
	0x104a0, 0x104a9,
	0x10800, 0x10805,
	0x10808, 0x10808,
	0x1080a, 0x10835,
	0x10837, 0x10838,
	0x1083c, 0x1083c,
	0x1083f, 0x10855,
	0x10857, 0x1085f,
	0x10900, 0x1091b,
	0x1091f, 0x10939,
	0x1093f, 0x1093f,
	0x10a00, 0x10a03,
	0x10a05, 0x10a06,
	0x10a0c, 0x10a13,
	0x10a15, 0x10a17,
	0x10a19, 0x10a33,
	0x10a38, 0x10a3a,
	0x10a3f, 0x10a47,
	0x10a50, 0x10a58,
	0x10a60, 0x10a7f,
	0x10b00, 0x10b35,
	0x10b39, 0x10b55,
	0x10b58, 0x10b72,
	0x10b78, 0x10b7f,
	0x10c00, 0x10c48,
	0x10e60, 0x10e7e,
	0x11000, 0x1104d,
	0x11052, 0x1106f,
	0x11080, 0x110c1,
	0x12000, 0x1236e,
	0x12400, 0x12462,
	0x12470, 0x12473,
	0x13000, 0x1342e,
	0x16800, 0x16a38,
	0x1b000, 0x1b001,
	0x1d000, 0x1d0f5,
	0x1d100, 0x1d126,
	0x1d129, 0x1d1dd,
	0x1d200, 0x1d245,
	0x1d300, 0x1d356,
	0x1d360, 0x1d371,
	0x1d400, 0x1d454,
	0x1d456, 0x1d49c,
	0x1d49e, 0x1d49f,
	0x1d4a2, 0x1d4a2,
	0x1d4a5, 0x1d4a6,
	0x1d4a9, 0x1d4ac,
	0x1d4ae, 0x1d4b9,
	0x1d4bb, 0x1d4bb,
	0x1d4bd, 0x1d4c3,
	0x1d4c5, 0x1d505,
	0x1d507, 0x1d50a,
	0x1d50d, 0x1d514,
	0x1d516, 0x1d51c,
	0x1d51e, 0x1d539,
	0x1d53b, 0x1d53e,
	0x1d540, 0x1d544,
	0x1d546, 0x1d546,
	0x1d54a, 0x1d550,
	0x1d552, 0x1d6a5,
	0x1d6a8, 0x1d7cb,
	0x1d7ce, 0x1d7ff,
	0x1f000, 0x1f02b,
	0x1f030, 0x1f093,
	0x1f0a0, 0x1f0ae,
	0x1f0b1, 0x1f0be,
	0x1f0c1, 0x1f0cf,
	0x1f0d1, 0x1f0df,
	0x1f100, 0x1f10a,
	0x1f110, 0x1f12e,
	0x1f130, 0x1f169,
	0x1f170, 0x1f19a,
	0x1f1e6, 0x1f202,
	0x1f210, 0x1f23a,
	0x1f240, 0x1f248,
	0x1f250, 0x1f251,
	0x1f300, 0x1f320,
	0x1f330, 0x1f335,
	0x1f337, 0x1f37c,
	0x1f380, 0x1f393,
	0x1f3a0, 0x1f3c4,
	0x1f3c6, 0x1f3ca,
	0x1f3e0, 0x1f3f0,
	0x1f400, 0x1f43e,
	0x1f440, 0x1f440,
	0x1f442, 0x1f4f7,
	0x1f4f9, 0x1f4fc,
	0x1f500, 0x1f53d,
	0x1f550, 0x1f567,
	0x1f5fb, 0x1f5ff,
	0x1f601, 0x1f610,
	0x1f612, 0x1f614,
	0x1f616, 0x1f616,
	0x1f618, 0x1f618,
	0x1f61a, 0x1f61a,
	0x1f61c, 0x1f61e,
	0x1f620, 0x1f625,
	0x1f628, 0x1f62b,
	0x1f62d, 0x1f62d,
	0x1f630, 0x1f633,
	0x1f635, 0x1f640,
	0x1f645, 0x1f64f,
	0x1f680, 0x1f6c5,
	0x1f700, 0x1f773,
	0x1fffe, 0x2a6d6,
	0x2a700, 0x2b734,
	0x2b740, 0x2b81d,
	0x2f800, 0x2fa1d,
	0x2fffe, 0x2ffff,
	0x3fffe, 0x3ffff,
	0x4fffe, 0x4ffff,
	0x5fffe, 0x5ffff,
	0x6fffe, 0x6ffff,
	0x7fffe, 0x7ffff,
	0x8fffe, 0x8ffff,
	0x9fffe, 0x9ffff,
	0xafffe, 0xaffff,
	0xbfffe, 0xbffff,
	0xcfffe, 0xcffff,
	0xdfffe, 0xdffff,
	0xe0001, 0xe0001,
	0xe0020, 0xe007f,
	0xe0100, 0xe01ef,
	0xefffe, 0x10ffff,
}; /* CR_Age_6_0 */

/* 'In_Basic_Latin': Block */
#define CR_In_Basic_Latin CR_ASCII

/* 'In_Latin_1_Supplement': Block */
static const OnigCodePoint CR_In_Latin_1_Supplement[] = {
	1,
	0x0080, 0x00ff,
}; /* CR_In_Latin_1_Supplement */

/* 'In_Latin_Extended_A': Block */
static const OnigCodePoint CR_In_Latin_Extended_A[] = {
	1,
	0x0100, 0x017f,
}; /* CR_In_Latin_Extended_A */

/* 'In_Latin_Extended_B': Block */
static const OnigCodePoint CR_In_Latin_Extended_B[] = {
	1,
	0x0180, 0x024f,
}; /* CR_In_Latin_Extended_B */

/* 'In_IPA_Extensions': Block */
static const OnigCodePoint CR_In_IPA_Extensions[] = {
	1,
	0x0250, 0x02af,
}; /* CR_In_IPA_Extensions */

/* 'In_Spacing_Modifier_Letters': Block */
static const OnigCodePoint CR_In_Spacing_Modifier_Letters[] = {
	1,
	0x02b0, 0x02ff,
}; /* CR_In_Spacing_Modifier_Letters */

/* 'In_Combining_Diacritical_Marks': Block */
static const OnigCodePoint CR_In_Combining_Diacritical_Marks[] = {
	1,
	0x0300, 0x036f,
}; /* CR_In_Combining_Diacritical_Marks */

/* 'In_Greek_and_Coptic': Block */
static const OnigCodePoint CR_In_Greek_and_Coptic[] = {
	1,
	0x0370, 0x03ff,
}; /* CR_In_Greek_and_Coptic */

/* 'In_Cyrillic': Block */
static const OnigCodePoint CR_In_Cyrillic[] = {
	1,
	0x0400, 0x04ff,
}; /* CR_In_Cyrillic */

/* 'In_Cyrillic_Supplement': Block */
static const OnigCodePoint CR_In_Cyrillic_Supplement[] = {
	1,
	0x0500, 0x052f,
}; /* CR_In_Cyrillic_Supplement */

/* 'In_Armenian': Block */
static const OnigCodePoint CR_In_Armenian[] = {
	1,
	0x0530, 0x058f,
}; /* CR_In_Armenian */

/* 'In_Hebrew': Block */
static const OnigCodePoint CR_In_Hebrew[] = {
	1,
	0x0590, 0x05ff,
}; /* CR_In_Hebrew */

/* 'In_Arabic': Block */
static const OnigCodePoint CR_In_Arabic[] = {
	1,
	0x0600, 0x06ff,
}; /* CR_In_Arabic */

/* 'In_Syriac': Block */
static const OnigCodePoint CR_In_Syriac[] = {
	1,
	0x0700, 0x074f,
}; /* CR_In_Syriac */

/* 'In_Arabic_Supplement': Block */
static const OnigCodePoint CR_In_Arabic_Supplement[] = {
	1,
	0x0750, 0x077f,
}; /* CR_In_Arabic_Supplement */

/* 'In_Thaana': Block */
static const OnigCodePoint CR_In_Thaana[] = {
	1,
	0x0780, 0x07bf,
}; /* CR_In_Thaana */

/* 'In_NKo': Block */
static const OnigCodePoint CR_In_NKo[] = {
	1,
	0x07c0, 0x07ff,
}; /* CR_In_NKo */

/* 'In_Samaritan': Block */
static const OnigCodePoint CR_In_Samaritan[] = {
	1,
	0x0800, 0x083f,
}; /* CR_In_Samaritan */

/* 'In_Mandaic': Block */
static const OnigCodePoint CR_In_Mandaic[] = {
	1,
	0x0840, 0x085f,
}; /* CR_In_Mandaic */

/* 'In_Devanagari': Block */
static const OnigCodePoint CR_In_Devanagari[] = {
	1,
	0x0900, 0x097f,
}; /* CR_In_Devanagari */

/* 'In_Bengali': Block */
static const OnigCodePoint CR_In_Bengali[] = {
	1,
	0x0980, 0x09ff,
}; /* CR_In_Bengali */

/* 'In_Gurmukhi': Block */
static const OnigCodePoint CR_In_Gurmukhi[] = {
	1,
	0x0a00, 0x0a7f,
}; /* CR_In_Gurmukhi */

/* 'In_Gujarati': Block */
static const OnigCodePoint CR_In_Gujarati[] = {
	1,
	0x0a80, 0x0aff,
}; /* CR_In_Gujarati */

/* 'In_Oriya': Block */
static const OnigCodePoint CR_In_Oriya[] = {
	1,
	0x0b00, 0x0b7f,
}; /* CR_In_Oriya */

/* 'In_Tamil': Block */
static const OnigCodePoint CR_In_Tamil[] = {
	1,
	0x0b80, 0x0bff,
}; /* CR_In_Tamil */

/* 'In_Telugu': Block */
static const OnigCodePoint CR_In_Telugu[] = {
	1,
	0x0c00, 0x0c7f,
}; /* CR_In_Telugu */

/* 'In_Kannada': Block */
static const OnigCodePoint CR_In_Kannada[] = {
	1,
	0x0c80, 0x0cff,
}; /* CR_In_Kannada */

/* 'In_Malayalam': Block */
static const OnigCodePoint CR_In_Malayalam[] = {
	1,
	0x0d00, 0x0d7f,
}; /* CR_In_Malayalam */

/* 'In_Sinhala': Block */
static const OnigCodePoint CR_In_Sinhala[] = {
	1,
	0x0d80, 0x0dff,
}; /* CR_In_Sinhala */

/* 'In_Thai': Block */
static const OnigCodePoint CR_In_Thai[] = {
	1,
	0x0e00, 0x0e7f,
}; /* CR_In_Thai */

/* 'In_Lao': Block */
static const OnigCodePoint CR_In_Lao[] = {
	1,
	0x0e80, 0x0eff,
}; /* CR_In_Lao */

/* 'In_Tibetan': Block */
static const OnigCodePoint CR_In_Tibetan[] = {
	1,
	0x0f00, 0x0fff,
}; /* CR_In_Tibetan */

/* 'In_Myanmar': Block */
static const OnigCodePoint CR_In_Myanmar[] = {
	1,
	0x1000, 0x109f,
}; /* CR_In_Myanmar */

/* 'In_Georgian': Block */
static const OnigCodePoint CR_In_Georgian[] = {
	1,
	0x10a0, 0x10ff,
}; /* CR_In_Georgian */

/* 'In_Hangul_Jamo': Block */
static const OnigCodePoint CR_In_Hangul_Jamo[] = {
	1,
	0x1100, 0x11ff,
}; /* CR_In_Hangul_Jamo */

/* 'In_Ethiopic': Block */
static const OnigCodePoint CR_In_Ethiopic[] = {
	1,
	0x1200, 0x137f,
}; /* CR_In_Ethiopic */

/* 'In_Ethiopic_Supplement': Block */
static const OnigCodePoint CR_In_Ethiopic_Supplement[] = {
	1,
	0x1380, 0x139f,
}; /* CR_In_Ethiopic_Supplement */

/* 'In_Cherokee': Block */
static const OnigCodePoint CR_In_Cherokee[] = {
	1,
	0x13a0, 0x13ff,
}; /* CR_In_Cherokee */

/* 'In_Unified_Canadian_Aboriginal_Syllabics': Block */
static const OnigCodePoint CR_In_Unified_Canadian_Aboriginal_Syllabics[] = {
	1,
	0x1400, 0x167f,
}; /* CR_In_Unified_Canadian_Aboriginal_Syllabics */

/* 'In_Ogham': Block */
static const OnigCodePoint CR_In_Ogham[] = {
	1,
	0x1680, 0x169f,
}; /* CR_In_Ogham */

/* 'In_Runic': Block */
static const OnigCodePoint CR_In_Runic[] = {
	1,
	0x16a0, 0x16ff,
}; /* CR_In_Runic */

/* 'In_Tagalog': Block */
static const OnigCodePoint CR_In_Tagalog[] = {
	1,
	0x1700, 0x171f,
}; /* CR_In_Tagalog */

/* 'In_Hanunoo': Block */
static const OnigCodePoint CR_In_Hanunoo[] = {
	1,
	0x1720, 0x173f,
}; /* CR_In_Hanunoo */

/* 'In_Buhid': Block */
static const OnigCodePoint CR_In_Buhid[] = {
	1,
	0x1740, 0x175f,
}; /* CR_In_Buhid */

/* 'In_Tagbanwa': Block */
static const OnigCodePoint CR_In_Tagbanwa[] = {
	1,
	0x1760, 0x177f,
}; /* CR_In_Tagbanwa */

/* 'In_Khmer': Block */
static const OnigCodePoint CR_In_Khmer[] = {
	1,
	0x1780, 0x17ff,
}; /* CR_In_Khmer */

/* 'In_Mongolian': Block */
static const OnigCodePoint CR_In_Mongolian[] = {
	1,
	0x1800, 0x18af,
}; /* CR_In_Mongolian */

/* 'In_Unified_Canadian_Aboriginal_Syllabics_Extended': Block */
static const OnigCodePoint CR_In_Unified_Canadian_Aboriginal_Syllabics_Extended[] = {
	1,
	0x18b0, 0x18ff,
}; /* CR_In_Unified_Canadian_Aboriginal_Syllabics_Extended */

/* 'In_Limbu': Block */
static const OnigCodePoint CR_In_Limbu[] = {
	1,
	0x1900, 0x194f,
}; /* CR_In_Limbu */

/* 'In_Tai_Le': Block */
static const OnigCodePoint CR_In_Tai_Le[] = {
	1,
	0x1950, 0x197f,
}; /* CR_In_Tai_Le */

/* 'In_New_Tai_Lue': Block */
static const OnigCodePoint CR_In_New_Tai_Lue[] = {
	1,
	0x1980, 0x19df,
}; /* CR_In_New_Tai_Lue */

/* 'In_Khmer_Symbols': Block */
static const OnigCodePoint CR_In_Khmer_Symbols[] = {
	1,
	0x19e0, 0x19ff,
}; /* CR_In_Khmer_Symbols */

/* 'In_Buginese': Block */
static const OnigCodePoint CR_In_Buginese[] = {
	1,
	0x1a00, 0x1a1f,
}; /* CR_In_Buginese */

/* 'In_Tai_Tham': Block */
static const OnigCodePoint CR_In_Tai_Tham[] = {
	1,
	0x1a20, 0x1aaf,
}; /* CR_In_Tai_Tham */

/* 'In_Balinese': Block */
static const OnigCodePoint CR_In_Balinese[] = {
	1,
	0x1b00, 0x1b7f,
}; /* CR_In_Balinese */

/* 'In_Sundanese': Block */
static const OnigCodePoint CR_In_Sundanese[] = {
	1,
	0x1b80, 0x1bbf,
}; /* CR_In_Sundanese */

/* 'In_Batak': Block */
static const OnigCodePoint CR_In_Batak[] = {
	1,
	0x1bc0, 0x1bff,
}; /* CR_In_Batak */

/* 'In_Lepcha': Block */
static const OnigCodePoint CR_In_Lepcha[] = {
	1,
	0x1c00, 0x1c4f,
}; /* CR_In_Lepcha */

/* 'In_Ol_Chiki': Block */
#define CR_In_Ol_Chiki CR_Ol_Chiki

/* 'In_Vedic_Extensions': Block */
static const OnigCodePoint CR_In_Vedic_Extensions[] = {
	1,
	0x1cd0, 0x1cff,
}; /* CR_In_Vedic_Extensions */

/* 'In_Phonetic_Extensions': Block */
static const OnigCodePoint CR_In_Phonetic_Extensions[] = {
	1,
	0x1d00, 0x1d7f,
}; /* CR_In_Phonetic_Extensions */

/* 'In_Phonetic_Extensions_Supplement': Block */
static const OnigCodePoint CR_In_Phonetic_Extensions_Supplement[] = {
	1,
	0x1d80, 0x1dbf,
}; /* CR_In_Phonetic_Extensions_Supplement */

/* 'In_Combining_Diacritical_Marks_Supplement': Block */
static const OnigCodePoint CR_In_Combining_Diacritical_Marks_Supplement[] = {
	1,
	0x1dc0, 0x1dff,
}; /* CR_In_Combining_Diacritical_Marks_Supplement */

/* 'In_Latin_Extended_Additional': Block */
static const OnigCodePoint CR_In_Latin_Extended_Additional[] = {
	1,
	0x1e00, 0x1eff,
}; /* CR_In_Latin_Extended_Additional */

/* 'In_Greek_Extended': Block */
static const OnigCodePoint CR_In_Greek_Extended[] = {
	1,
	0x1f00, 0x1fff,
}; /* CR_In_Greek_Extended */

/* 'In_General_Punctuation': Block */
static const OnigCodePoint CR_In_General_Punctuation[] = {
	1,
	0x2000, 0x206f,
}; /* CR_In_General_Punctuation */

/* 'In_Superscripts_and_Subscripts': Block */
static const OnigCodePoint CR_In_Superscripts_and_Subscripts[] = {
	1,
	0x2070, 0x209f,
}; /* CR_In_Superscripts_and_Subscripts */

/* 'In_Currency_Symbols': Block */
static const OnigCodePoint CR_In_Currency_Symbols[] = {
	1,
	0x20a0, 0x20cf,
}; /* CR_In_Currency_Symbols */

/* 'In_Combining_Diacritical_Marks_for_Symbols': Block */
static const OnigCodePoint CR_In_Combining_Diacritical_Marks_for_Symbols[] = {
	1,
	0x20d0, 0x20ff,
}; /* CR_In_Combining_Diacritical_Marks_for_Symbols */

/* 'In_Letterlike_Symbols': Block */
static const OnigCodePoint CR_In_Letterlike_Symbols[] = {
	1,
	0x2100, 0x214f,
}; /* CR_In_Letterlike_Symbols */

/* 'In_Number_Forms': Block */
static const OnigCodePoint CR_In_Number_Forms[] = {
	1,
	0x2150, 0x218f,
}; /* CR_In_Number_Forms */

/* 'In_Arrows': Block */
static const OnigCodePoint CR_In_Arrows[] = {
	1,
	0x2190, 0x21ff,
}; /* CR_In_Arrows */

/* 'In_Mathematical_Operators': Block */
static const OnigCodePoint CR_In_Mathematical_Operators[] = {
	1,
	0x2200, 0x22ff,
}; /* CR_In_Mathematical_Operators */

/* 'In_Miscellaneous_Technical': Block */
static const OnigCodePoint CR_In_Miscellaneous_Technical[] = {
	1,
	0x2300, 0x23ff,
}; /* CR_In_Miscellaneous_Technical */

/* 'In_Control_Pictures': Block */
static const OnigCodePoint CR_In_Control_Pictures[] = {
	1,
	0x2400, 0x243f,
}; /* CR_In_Control_Pictures */

/* 'In_Optical_Character_Recognition': Block */
static const OnigCodePoint CR_In_Optical_Character_Recognition[] = {
	1,
	0x2440, 0x245f,
}; /* CR_In_Optical_Character_Recognition */

/* 'In_Enclosed_Alphanumerics': Block */
static const OnigCodePoint CR_In_Enclosed_Alphanumerics[] = {
	1,
	0x2460, 0x24ff,
}; /* CR_In_Enclosed_Alphanumerics */

/* 'In_Box_Drawing': Block */
static const OnigCodePoint CR_In_Box_Drawing[] = {
	1,
	0x2500, 0x257f,
}; /* CR_In_Box_Drawing */

/* 'In_Block_Elements': Block */
static const OnigCodePoint CR_In_Block_Elements[] = {
	1,
	0x2580, 0x259f,
}; /* CR_In_Block_Elements */

/* 'In_Geometric_Shapes': Block */
static const OnigCodePoint CR_In_Geometric_Shapes[] = {
	1,
	0x25a0, 0x25ff,
}; /* CR_In_Geometric_Shapes */

/* 'In_Miscellaneous_Symbols': Block */
static const OnigCodePoint CR_In_Miscellaneous_Symbols[] = {
	1,
	0x2600, 0x26ff,
}; /* CR_In_Miscellaneous_Symbols */

/* 'In_Dingbats': Block */
static const OnigCodePoint CR_In_Dingbats[] = {
	1,
	0x2700, 0x27bf,
}; /* CR_In_Dingbats */

/* 'In_Miscellaneous_Mathematical_Symbols_A': Block */
static const OnigCodePoint CR_In_Miscellaneous_Mathematical_Symbols_A[] = {
	1,
	0x27c0, 0x27ef,
}; /* CR_In_Miscellaneous_Mathematical_Symbols_A */

/* 'In_Supplemental_Arrows_A': Block */
static const OnigCodePoint CR_In_Supplemental_Arrows_A[] = {
	1,
	0x27f0, 0x27ff,
}; /* CR_In_Supplemental_Arrows_A */

/* 'In_Braille_Patterns': Block */
#define CR_In_Braille_Patterns CR_Braille

/* 'In_Supplemental_Arrows_B': Block */
static const OnigCodePoint CR_In_Supplemental_Arrows_B[] = {
	1,
	0x2900, 0x297f,
}; /* CR_In_Supplemental_Arrows_B */

/* 'In_Miscellaneous_Mathematical_Symbols_B': Block */
static const OnigCodePoint CR_In_Miscellaneous_Mathematical_Symbols_B[] = {
	1,
	0x2980, 0x29ff,
}; /* CR_In_Miscellaneous_Mathematical_Symbols_B */

/* 'In_Supplemental_Mathematical_Operators': Block */
static const OnigCodePoint CR_In_Supplemental_Mathematical_Operators[] = {
	1,
	0x2a00, 0x2aff,
}; /* CR_In_Supplemental_Mathematical_Operators */

/* 'In_Miscellaneous_Symbols_and_Arrows': Block */
static const OnigCodePoint CR_In_Miscellaneous_Symbols_and_Arrows[] = {
	1,
	0x2b00, 0x2bff,
}; /* CR_In_Miscellaneous_Symbols_and_Arrows */

/* 'In_Glagolitic': Block */
static const OnigCodePoint CR_In_Glagolitic[] = {
	1,
	0x2c00, 0x2c5f,
}; /* CR_In_Glagolitic */

/* 'In_Latin_Extended_C': Block */
static const OnigCodePoint CR_In_Latin_Extended_C[] = {
	1,
	0x2c60, 0x2c7f,
}; /* CR_In_Latin_Extended_C */

/* 'In_Coptic': Block */
static const OnigCodePoint CR_In_Coptic[] = {
	1,
	0x2c80, 0x2cff,
}; /* CR_In_Coptic */

/* 'In_Georgian_Supplement': Block */
static const OnigCodePoint CR_In_Georgian_Supplement[] = {
	1,
	0x2d00, 0x2d2f,
}; /* CR_In_Georgian_Supplement */

/* 'In_Tifinagh': Block */
static const OnigCodePoint CR_In_Tifinagh[] = {
	1,
	0x2d30, 0x2d7f,
}; /* CR_In_Tifinagh */

/* 'In_Ethiopic_Extended': Block */
static const OnigCodePoint CR_In_Ethiopic_Extended[] = {
	1,
	0x2d80, 0x2ddf,
}; /* CR_In_Ethiopic_Extended */

/* 'In_Cyrillic_Extended_A': Block */
static const OnigCodePoint CR_In_Cyrillic_Extended_A[] = {
	1,
	0x2de0, 0x2dff,
}; /* CR_In_Cyrillic_Extended_A */

/* 'In_Supplemental_Punctuation': Block */
static const OnigCodePoint CR_In_Supplemental_Punctuation[] = {
	1,
	0x2e00, 0x2e7f,
}; /* CR_In_Supplemental_Punctuation */

/* 'In_CJK_Radicals_Supplement': Block */
static const OnigCodePoint CR_In_CJK_Radicals_Supplement[] = {
	1,
	0x2e80, 0x2eff,
}; /* CR_In_CJK_Radicals_Supplement */

/* 'In_Kangxi_Radicals': Block */
static const OnigCodePoint CR_In_Kangxi_Radicals[] = {
	1,
	0x2f00, 0x2fdf,
}; /* CR_In_Kangxi_Radicals */

/* 'In_Ideographic_Description_Characters': Block */
static const OnigCodePoint CR_In_Ideographic_Description_Characters[] = {
	1,
	0x2ff0, 0x2fff,
}; /* CR_In_Ideographic_Description_Characters */

/* 'In_CJK_Symbols_and_Punctuation': Block */
static const OnigCodePoint CR_In_CJK_Symbols_and_Punctuation[] = {
	1,
	0x3000, 0x303f,
}; /* CR_In_CJK_Symbols_and_Punctuation */

/* 'In_Hiragana': Block */
static const OnigCodePoint CR_In_Hiragana[] = {
	1,
	0x3040, 0x309f,
}; /* CR_In_Hiragana */

/* 'In_Katakana': Block */
static const OnigCodePoint CR_In_Katakana[] = {
	1,
	0x30a0, 0x30ff,
}; /* CR_In_Katakana */

/* 'In_Bopomofo': Block */
static const OnigCodePoint CR_In_Bopomofo[] = {
	1,
	0x3100, 0x312f,
}; /* CR_In_Bopomofo */

/* 'In_Hangul_Compatibility_Jamo': Block */
static const OnigCodePoint CR_In_Hangul_Compatibility_Jamo[] = {
	1,
	0x3130, 0x318f,
}; /* CR_In_Hangul_Compatibility_Jamo */

/* 'In_Kanbun': Block */
static const OnigCodePoint CR_In_Kanbun[] = {
	1,
	0x3190, 0x319f,
}; /* CR_In_Kanbun */

/* 'In_Bopomofo_Extended': Block */
static const OnigCodePoint CR_In_Bopomofo_Extended[] = {
	1,
	0x31a0, 0x31bf,
}; /* CR_In_Bopomofo_Extended */

/* 'In_CJK_Strokes': Block */
static const OnigCodePoint CR_In_CJK_Strokes[] = {
	1,
	0x31c0, 0x31ef,
}; /* CR_In_CJK_Strokes */

/* 'In_Katakana_Phonetic_Extensions': Block */
static const OnigCodePoint CR_In_Katakana_Phonetic_Extensions[] = {
	1,
	0x31f0, 0x31ff,
}; /* CR_In_Katakana_Phonetic_Extensions */

/* 'In_Enclosed_CJK_Letters_and_Months': Block */
static const OnigCodePoint CR_In_Enclosed_CJK_Letters_and_Months[] = {
	1,
	0x3200, 0x32ff,
}; /* CR_In_Enclosed_CJK_Letters_and_Months */

/* 'In_CJK_Compatibility': Block */
static const OnigCodePoint CR_In_CJK_Compatibility[] = {
	1,
	0x3300, 0x33ff,
}; /* CR_In_CJK_Compatibility */

/* 'In_CJK_Unified_Ideographs_Extension_A': Block */
static const OnigCodePoint CR_In_CJK_Unified_Ideographs_Extension_A[] = {
	1,
	0x3400, 0x4dbf,
}; /* CR_In_CJK_Unified_Ideographs_Extension_A */

/* 'In_Yijing_Hexagram_Symbols': Block */
static const OnigCodePoint CR_In_Yijing_Hexagram_Symbols[] = {
	1,
	0x4dc0, 0x4dff,
}; /* CR_In_Yijing_Hexagram_Symbols */

/* 'In_CJK_Unified_Ideographs': Block */
static const OnigCodePoint CR_In_CJK_Unified_Ideographs[] = {
	1,
	0x4e00, 0x9fff,
}; /* CR_In_CJK_Unified_Ideographs */

/* 'In_Yi_Syllables': Block */
static const OnigCodePoint CR_In_Yi_Syllables[] = {
	1,
	0xa000, 0xa48f,
}; /* CR_In_Yi_Syllables */

/* 'In_Yi_Radicals': Block */
static const OnigCodePoint CR_In_Yi_Radicals[] = {
	1,
	0xa490, 0xa4cf,
}; /* CR_In_Yi_Radicals */

/* 'In_Lisu': Block */
#define CR_In_Lisu CR_Lisu

/* 'In_Vai': Block */
static const OnigCodePoint CR_In_Vai[] = {
	1,
	0xa500, 0xa63f,
}; /* CR_In_Vai */

/* 'In_Cyrillic_Extended_B': Block */
static const OnigCodePoint CR_In_Cyrillic_Extended_B[] = {
	1,
	0xa640, 0xa69f,
}; /* CR_In_Cyrillic_Extended_B */

/* 'In_Bamum': Block */
static const OnigCodePoint CR_In_Bamum[] = {
	1,
	0xa6a0, 0xa6ff,
}; /* CR_In_Bamum */

/* 'In_Modifier_Tone_Letters': Block */
static const OnigCodePoint CR_In_Modifier_Tone_Letters[] = {
	1,
	0xa700, 0xa71f,
}; /* CR_In_Modifier_Tone_Letters */

/* 'In_Latin_Extended_D': Block */
static const OnigCodePoint CR_In_Latin_Extended_D[] = {
	1,
	0xa720, 0xa7ff,
}; /* CR_In_Latin_Extended_D */

/* 'In_Syloti_Nagri': Block */
static const OnigCodePoint CR_In_Syloti_Nagri[] = {
	1,
	0xa800, 0xa82f,
}; /* CR_In_Syloti_Nagri */

/* 'In_Common_Indic_Number_Forms': Block */
static const OnigCodePoint CR_In_Common_Indic_Number_Forms[] = {
	1,
	0xa830, 0xa83f,
}; /* CR_In_Common_Indic_Number_Forms */

/* 'In_Phags_pa': Block */
static const OnigCodePoint CR_In_Phags_pa[] = {
	1,
	0xa840, 0xa87f,
}; /* CR_In_Phags_pa */

/* 'In_Saurashtra': Block */
static const OnigCodePoint CR_In_Saurashtra[] = {
	1,
	0xa880, 0xa8df,
}; /* CR_In_Saurashtra */

/* 'In_Devanagari_Extended': Block */
static const OnigCodePoint CR_In_Devanagari_Extended[] = {
	1,
	0xa8e0, 0xa8ff,
}; /* CR_In_Devanagari_Extended */

/* 'In_Kayah_Li': Block */
#define CR_In_Kayah_Li CR_Kayah_Li

/* 'In_Rejang': Block */
static const OnigCodePoint CR_In_Rejang[] = {
	1,
	0xa930, 0xa95f,
}; /* CR_In_Rejang */

/* 'In_Hangul_Jamo_Extended_A': Block */
static const OnigCodePoint CR_In_Hangul_Jamo_Extended_A[] = {
	1,
	0xa960, 0xa97f,
}; /* CR_In_Hangul_Jamo_Extended_A */

/* 'In_Javanese': Block */
static const OnigCodePoint CR_In_Javanese[] = {
	1,
	0xa980, 0xa9df,
}; /* CR_In_Javanese */

/* 'In_Cham': Block */
static const OnigCodePoint CR_In_Cham[] = {
	1,
	0xaa00, 0xaa5f,
}; /* CR_In_Cham */

/* 'In_Myanmar_Extended_A': Block */
static const OnigCodePoint CR_In_Myanmar_Extended_A[] = {
	1,
	0xaa60, 0xaa7f,
}; /* CR_In_Myanmar_Extended_A */

/* 'In_Tai_Viet': Block */
static const OnigCodePoint CR_In_Tai_Viet[] = {
	1,
	0xaa80, 0xaadf,
}; /* CR_In_Tai_Viet */

/* 'In_Ethiopic_Extended_A': Block */
static const OnigCodePoint CR_In_Ethiopic_Extended_A[] = {
	1,
	0xab00, 0xab2f,
}; /* CR_In_Ethiopic_Extended_A */

/* 'In_Meetei_Mayek': Block */
static const OnigCodePoint CR_In_Meetei_Mayek[] = {
	1,
	0xabc0, 0xabff,
}; /* CR_In_Meetei_Mayek */

/* 'In_Hangul_Syllables': Block */
static const OnigCodePoint CR_In_Hangul_Syllables[] = {
	1,
	0xac00, 0xd7af,
}; /* CR_In_Hangul_Syllables */

/* 'In_Hangul_Jamo_Extended_B': Block */
static const OnigCodePoint CR_In_Hangul_Jamo_Extended_B[] = {
	1,
	0xd7b0, 0xd7ff,
}; /* CR_In_Hangul_Jamo_Extended_B */

/* 'In_High_Surrogates': Block */
static const OnigCodePoint CR_In_High_Surrogates[] = {
	1,
	0xd800, 0xdb7f,
}; /* CR_In_High_Surrogates */

/* 'In_High_Private_Use_Surrogates': Block */
static const OnigCodePoint CR_In_High_Private_Use_Surrogates[] = {
	1,
	0xdb80, 0xdbff,
}; /* CR_In_High_Private_Use_Surrogates */

/* 'In_Low_Surrogates': Block */
static const OnigCodePoint CR_In_Low_Surrogates[] = {
	1,
	0xdc00, 0xdfff,
}; /* CR_In_Low_Surrogates */

/* 'In_Private_Use_Area': Block */
static const OnigCodePoint CR_In_Private_Use_Area[] = {
	1,
	0xe000, 0xf8ff,
}; /* CR_In_Private_Use_Area */

/* 'In_CJK_Compatibility_Ideographs': Block */
static const OnigCodePoint CR_In_CJK_Compatibility_Ideographs[] = {
	1,
	0xf900, 0xfaff,
}; /* CR_In_CJK_Compatibility_Ideographs */

/* 'In_Alphabetic_Presentation_Forms': Block */
static const OnigCodePoint CR_In_Alphabetic_Presentation_Forms[] = {
	1,
	0xfb00, 0xfb4f,
}; /* CR_In_Alphabetic_Presentation_Forms */

/* 'In_Arabic_Presentation_Forms_A': Block */
static const OnigCodePoint CR_In_Arabic_Presentation_Forms_A[] = {
	1,
	0xfb50, 0xfdff,
}; /* CR_In_Arabic_Presentation_Forms_A */

/* 'In_Variation_Selectors': Block */
static const OnigCodePoint CR_In_Variation_Selectors[] = {
	1,
	0xfe00, 0xfe0f,
}; /* CR_In_Variation_Selectors */

/* 'In_Vertical_Forms': Block */
static const OnigCodePoint CR_In_Vertical_Forms[] = {
	1,
	0xfe10, 0xfe1f,
}; /* CR_In_Vertical_Forms */

/* 'In_Combining_Half_Marks': Block */
static const OnigCodePoint CR_In_Combining_Half_Marks[] = {
	1,
	0xfe20, 0xfe2f,
}; /* CR_In_Combining_Half_Marks */

/* 'In_CJK_Compatibility_Forms': Block */
static const OnigCodePoint CR_In_CJK_Compatibility_Forms[] = {
	1,
	0xfe30, 0xfe4f,
}; /* CR_In_CJK_Compatibility_Forms */

/* 'In_Small_Form_Variants': Block */
static const OnigCodePoint CR_In_Small_Form_Variants[] = {
	1,
	0xfe50, 0xfe6f,
}; /* CR_In_Small_Form_Variants */

/* 'In_Arabic_Presentation_Forms_B': Block */
static const OnigCodePoint CR_In_Arabic_Presentation_Forms_B[] = {
	1,
	0xfe70, 0xfeff,
}; /* CR_In_Arabic_Presentation_Forms_B */

/* 'In_Halfwidth_and_Fullwidth_Forms': Block */
static const OnigCodePoint CR_In_Halfwidth_and_Fullwidth_Forms[] = {
	1,
	0xff00, 0xffef,
}; /* CR_In_Halfwidth_and_Fullwidth_Forms */

/* 'In_Specials': Block */
static const OnigCodePoint CR_In_Specials[] = {
	1,
	0xfff0, 0xffff,
}; /* CR_In_Specials */

/* 'In_Linear_B_Syllabary': Block */
static const OnigCodePoint CR_In_Linear_B_Syllabary[] = {
	1,
	0x10000, 0x1007f,
}; /* CR_In_Linear_B_Syllabary */

/* 'In_Linear_B_Ideograms': Block */
static const OnigCodePoint CR_In_Linear_B_Ideograms[] = {
	1,
	0x10080, 0x100ff,
}; /* CR_In_Linear_B_Ideograms */

/* 'In_Aegean_Numbers': Block */
static const OnigCodePoint CR_In_Aegean_Numbers[] = {
	1,
	0x10100, 0x1013f,
}; /* CR_In_Aegean_Numbers */

/* 'In_Ancient_Greek_Numbers': Block */
static const OnigCodePoint CR_In_Ancient_Greek_Numbers[] = {
	1,
	0x10140, 0x1018f,
}; /* CR_In_Ancient_Greek_Numbers */

/* 'In_Ancient_Symbols': Block */
static const OnigCodePoint CR_In_Ancient_Symbols[] = {
	1,
	0x10190, 0x101cf,
}; /* CR_In_Ancient_Symbols */

/* 'In_Phaistos_Disc': Block */
static const OnigCodePoint CR_In_Phaistos_Disc[] = {
	1,
	0x101d0, 0x101ff,
}; /* CR_In_Phaistos_Disc */

/* 'In_Lycian': Block */
static const OnigCodePoint CR_In_Lycian[] = {
	1,
	0x10280, 0x1029f,
}; /* CR_In_Lycian */

/* 'In_Carian': Block */
static const OnigCodePoint CR_In_Carian[] = {
	1,
	0x102a0, 0x102df,
}; /* CR_In_Carian */

/* 'In_Old_Italic': Block */
static const OnigCodePoint CR_In_Old_Italic[] = {
	1,
	0x10300, 0x1032f,
}; /* CR_In_Old_Italic */

/* 'In_Gothic': Block */
static const OnigCodePoint CR_In_Gothic[] = {
	1,
	0x10330, 0x1034f,
}; /* CR_In_Gothic */

/* 'In_Ugaritic': Block */
static const OnigCodePoint CR_In_Ugaritic[] = {
	1,
	0x10380, 0x1039f,
}; /* CR_In_Ugaritic */

/* 'In_Old_Persian': Block */
static const OnigCodePoint CR_In_Old_Persian[] = {
	1,
	0x103a0, 0x103df,
}; /* CR_In_Old_Persian */

/* 'In_Deseret': Block */
#define CR_In_Deseret CR_Deseret

/* 'In_Shavian': Block */
#define CR_In_Shavian CR_Shavian

/* 'In_Osmanya': Block */
static const OnigCodePoint CR_In_Osmanya[] = {
	1,
	0x10480, 0x104af,
}; /* CR_In_Osmanya */

/* 'In_Cypriot_Syllabary': Block */
static const OnigCodePoint CR_In_Cypriot_Syllabary[] = {
	1,
	0x10800, 0x1083f,
}; /* CR_In_Cypriot_Syllabary */

/* 'In_Imperial_Aramaic': Block */
static const OnigCodePoint CR_In_Imperial_Aramaic[] = {
	1,
	0x10840, 0x1085f,
}; /* CR_In_Imperial_Aramaic */

/* 'In_Phoenician': Block */
static const OnigCodePoint CR_In_Phoenician[] = {
	1,
	0x10900, 0x1091f,
}; /* CR_In_Phoenician */

/* 'In_Lydian': Block */
static const OnigCodePoint CR_In_Lydian[] = {
	1,
	0x10920, 0x1093f,
}; /* CR_In_Lydian */

/* 'In_Kharoshthi': Block */
static const OnigCodePoint CR_In_Kharoshthi[] = {
	1,
	0x10a00, 0x10a5f,
}; /* CR_In_Kharoshthi */

/* 'In_Old_South_Arabian': Block */
#define CR_In_Old_South_Arabian CR_Old_South_Arabian

/* 'In_Avestan': Block */
static const OnigCodePoint CR_In_Avestan[] = {
	1,
	0x10b00, 0x10b3f,
}; /* CR_In_Avestan */

/* 'In_Inscriptional_Parthian': Block */
static const OnigCodePoint CR_In_Inscriptional_Parthian[] = {
	1,
	0x10b40, 0x10b5f,
}; /* CR_In_Inscriptional_Parthian */

/* 'In_Inscriptional_Pahlavi': Block */
static const OnigCodePoint CR_In_Inscriptional_Pahlavi[] = {
	1,
	0x10b60, 0x10b7f,
}; /* CR_In_Inscriptional_Pahlavi */

/* 'In_Old_Turkic': Block */
static const OnigCodePoint CR_In_Old_Turkic[] = {
	1,
	0x10c00, 0x10c4f,
}; /* CR_In_Old_Turkic */

/* 'In_Rumi_Numeral_Symbols': Block */
static const OnigCodePoint CR_In_Rumi_Numeral_Symbols[] = {
	1,
	0x10e60, 0x10e7f,
}; /* CR_In_Rumi_Numeral_Symbols */

/* 'In_Brahmi': Block */
static const OnigCodePoint CR_In_Brahmi[] = {
	1,
	0x11000, 0x1107f,
}; /* CR_In_Brahmi */

/* 'In_Kaithi': Block */
static const OnigCodePoint CR_In_Kaithi[] = {
	1,
	0x11080, 0x110cf,
}; /* CR_In_Kaithi */

/* 'In_Cuneiform': Block */
static const OnigCodePoint CR_In_Cuneiform[] = {
	1,
	0x12000, 0x123ff,
}; /* CR_In_Cuneiform */

/* 'In_Cuneiform_Numbers_and_Punctuation': Block */
static const OnigCodePoint CR_In_Cuneiform_Numbers_and_Punctuation[] = {
	1,
	0x12400, 0x1247f,
}; /* CR_In_Cuneiform_Numbers_and_Punctuation */

/* 'In_Egyptian_Hieroglyphs': Block */
static const OnigCodePoint CR_In_Egyptian_Hieroglyphs[] = {
	1,
	0x13000, 0x1342f,
}; /* CR_In_Egyptian_Hieroglyphs */

/* 'In_Bamum_Supplement': Block */
static const OnigCodePoint CR_In_Bamum_Supplement[] = {
	1,
	0x16800, 0x16a3f,
}; /* CR_In_Bamum_Supplement */

/* 'In_Kana_Supplement': Block */
static const OnigCodePoint CR_In_Kana_Supplement[] = {
	1,
	0x1b000, 0x1b0ff,
}; /* CR_In_Kana_Supplement */

/* 'In_Byzantine_Musical_Symbols': Block */
static const OnigCodePoint CR_In_Byzantine_Musical_Symbols[] = {
	1,
	0x1d000, 0x1d0ff,
}; /* CR_In_Byzantine_Musical_Symbols */

/* 'In_Musical_Symbols': Block */
static const OnigCodePoint CR_In_Musical_Symbols[] = {
	1,
	0x1d100, 0x1d1ff,
}; /* CR_In_Musical_Symbols */

/* 'In_Ancient_Greek_Musical_Notation': Block */
static const OnigCodePoint CR_In_Ancient_Greek_Musical_Notation[] = {
	1,
	0x1d200, 0x1d24f,
}; /* CR_In_Ancient_Greek_Musical_Notation */

/* 'In_Tai_Xuan_Jing_Symbols': Block */
static const OnigCodePoint CR_In_Tai_Xuan_Jing_Symbols[] = {
	1,
	0x1d300, 0x1d35f,
}; /* CR_In_Tai_Xuan_Jing_Symbols */

/* 'In_Counting_Rod_Numerals': Block */
static const OnigCodePoint CR_In_Counting_Rod_Numerals[] = {
	1,
	0x1d360, 0x1d37f,
}; /* CR_In_Counting_Rod_Numerals */

/* 'In_Mathematical_Alphanumeric_Symbols': Block */
static const OnigCodePoint CR_In_Mathematical_Alphanumeric_Symbols[] = {
	1,
	0x1d400, 0x1d7ff,
}; /* CR_In_Mathematical_Alphanumeric_Symbols */

/* 'In_Mahjong_Tiles': Block */
static const OnigCodePoint CR_In_Mahjong_Tiles[] = {
	1,
	0x1f000, 0x1f02f,
}; /* CR_In_Mahjong_Tiles */

/* 'In_Domino_Tiles': Block */
static const OnigCodePoint CR_In_Domino_Tiles[] = {
	1,
	0x1f030, 0x1f09f,
}; /* CR_In_Domino_Tiles */

/* 'In_Playing_Cards': Block */
static const OnigCodePoint CR_In_Playing_Cards[] = {
	1,
	0x1f0a0, 0x1f0ff,
}; /* CR_In_Playing_Cards */

/* 'In_Enclosed_Alphanumeric_Supplement': Block */
static const OnigCodePoint CR_In_Enclosed_Alphanumeric_Supplement[] = {
	1,
	0x1f100, 0x1f1ff,
}; /* CR_In_Enclosed_Alphanumeric_Supplement */

/* 'In_Enclosed_Ideographic_Supplement': Block */
static const OnigCodePoint CR_In_Enclosed_Ideographic_Supplement[] = {
	1,
	0x1f200, 0x1f2ff,
}; /* CR_In_Enclosed_Ideographic_Supplement */

/* 'In_Miscellaneous_Symbols_And_Pictographs': Block */
static const OnigCodePoint CR_In_Miscellaneous_Symbols_And_Pictographs[] = {
	1,
	0x1f300, 0x1f5ff,
}; /* CR_In_Miscellaneous_Symbols_And_Pictographs */

/* 'In_Emoticons': Block */
static const OnigCodePoint CR_In_Emoticons[] = {
	1,
	0x1f600, 0x1f64f,
}; /* CR_In_Emoticons */

/* 'In_Transport_And_Map_Symbols': Block */
static const OnigCodePoint CR_In_Transport_And_Map_Symbols[] = {
	1,
	0x1f680, 0x1f6ff,
}; /* CR_In_Transport_And_Map_Symbols */

/* 'In_Alchemical_Symbols': Block */
static const OnigCodePoint CR_In_Alchemical_Symbols[] = {
	1,
	0x1f700, 0x1f77f,
}; /* CR_In_Alchemical_Symbols */

/* 'In_CJK_Unified_Ideographs_Extension_B': Block */
static const OnigCodePoint CR_In_CJK_Unified_Ideographs_Extension_B[] = {
	1,
	0x20000, 0x2a6df,
}; /* CR_In_CJK_Unified_Ideographs_Extension_B */

/* 'In_CJK_Unified_Ideographs_Extension_C': Block */
static const OnigCodePoint CR_In_CJK_Unified_Ideographs_Extension_C[] = {
	1,
	0x2a700, 0x2b73f,
}; /* CR_In_CJK_Unified_Ideographs_Extension_C */

/* 'In_CJK_Unified_Ideographs_Extension_D': Block */
static const OnigCodePoint CR_In_CJK_Unified_Ideographs_Extension_D[] = {
	1,
	0x2b740, 0x2b81f,
}; /* CR_In_CJK_Unified_Ideographs_Extension_D */

/* 'In_CJK_Compatibility_Ideographs_Supplement': Block */
static const OnigCodePoint CR_In_CJK_Compatibility_Ideographs_Supplement[] = {
	1,
	0x2f800, 0x2fa1f,
}; /* CR_In_CJK_Compatibility_Ideographs_Supplement */

/* 'In_Tags': Block */
static const OnigCodePoint CR_In_Tags[] = {
	1,
	0xe0000, 0xe007f,
}; /* CR_In_Tags */

/* 'In_Variation_Selectors_Supplement': Block */
static const OnigCodePoint CR_In_Variation_Selectors_Supplement[] = {
	1,
	0xe0100, 0xe01ef,
}; /* CR_In_Variation_Selectors_Supplement */

/* 'In_Supplementary_Private_Use_Area_A': Block */
static const OnigCodePoint CR_In_Supplementary_Private_Use_Area_A[] = {
	1,
	0xf0000, 0xfffff,
}; /* CR_In_Supplementary_Private_Use_Area_A */

/* 'In_Supplementary_Private_Use_Area_B': Block */
static const OnigCodePoint CR_In_Supplementary_Private_Use_Area_B[] = {
	1,
	0x100000, 0x10ffff,
}; /* CR_In_Supplementary_Private_Use_Area_B */

/* 'In_No_Block': Block */
static const OnigCodePoint CR_In_No_Block[] = {
	33,
	0x0860, 0x08ff,
	0x1ab0, 0x1aff,
	0x1c80, 0x1ccf,
	0x2fe0, 0x2fef,
	0xa9e0, 0xa9ff,
	0xaae0, 0xaaff,
	0xab30, 0xabbf,
	0x10200, 0x1027f,
	0x102e0, 0x102ff,
	0x10350, 0x1037f,
	0x103e0, 0x103ff,
	0x104b0, 0x107ff,
	0x10860, 0x108ff,
	0x10940, 0x109ff,
	0x10a80, 0x10aff,
	0x10b80, 0x10bff,
	0x10c50, 0x10e5f,
	0x10e80, 0x10fff,
	0x110d0, 0x11fff,
	0x12480, 0x12fff,
	0x13430, 0x167ff,
	0x16a40, 0x1afff,
	0x1b100, 0x1cfff,
	0x1d250, 0x1d2ff,
	0x1d380, 0x1d3ff,
	0x1d800, 0x1efff,
	0x1f650, 0x1f67f,
	0x1f780, 0x1ffff,
	0x2a6e0, 0x2a6ff,
	0x2b820, 0x2f7ff,
	0x2fa20, 0xdffff,
	0xe0080, 0xe00ff,
	0xe01f0, 0xeffff,
}; /* CR_In_No_Block */
#endif /* USE_UNICODE_PROPERTIES */

static const OnigCodePoint* const CodeRanges[] = {
  CR_NEWLINE,
  CR_Alpha,
  CR_Blank,
  CR_Cntrl,
  CR_Digit,
  CR_Graph,
  CR_Lower,
  CR_Print,
  CR_Punct,
  CR_Space,
  CR_Upper,
  CR_XDigit,
  CR_Word,
  CR_Alnum,
  CR_ASCII,
#ifdef USE_UNICODE_PROPERTIES
  CR_Any,
  CR_Assigned,
  CR_C,
  CR_Cc,
  CR_Cf,
  CR_Cn,
  CR_Co,
  CR_Cs,
  CR_L,
  CR_LC,
  CR_Ll,
  CR_Lm,
  CR_Lo,
  CR_Lt,
  CR_Lu,
  CR_M,
  CR_Mc,
  CR_Me,
  CR_Mn,
  CR_N,
  CR_Nd,
  CR_Nl,
  CR_No,
  CR_P,
  CR_Pc,
  CR_Pd,
  CR_Pe,
  CR_Pf,
  CR_Pi,
  CR_Po,
  CR_Ps,
  CR_S,
  CR_Sc,
  CR_Sk,
  CR_Sm,
  CR_So,
  CR_Z,
  CR_Zl,
  CR_Zp,
  CR_Zs,
  CR_Math,
  CR_Alphabetic,
  CR_Lowercase,
  CR_Uppercase,
  CR_Cased,
  CR_Case_Ignorable,
  CR_Changes_When_Lowercased,
  CR_Changes_When_Uppercased,
  CR_Changes_When_Titlecased,
  CR_Changes_When_Casefolded,
  CR_Changes_When_Casemapped,
  CR_ID_Start,
  CR_ID_Continue,
  CR_XID_Start,
  CR_XID_Continue,
  CR_Default_Ignorable_Code_Point,
  CR_Grapheme_Extend,
  CR_Grapheme_Base,
  CR_Grapheme_Link,
  CR_Common,
  CR_Latin,
  CR_Greek,
  CR_Cyrillic,
  CR_Armenian,
  CR_Hebrew,
  CR_Arabic,
  CR_Syriac,
  CR_Thaana,
  CR_Devanagari,
  CR_Bengali,
  CR_Gurmukhi,
  CR_Gujarati,
  CR_Oriya,
  CR_Tamil,
  CR_Telugu,
  CR_Kannada,
  CR_Malayalam,
  CR_Sinhala,
  CR_Thai,
  CR_Lao,
  CR_Tibetan,
  CR_Myanmar,
  CR_Georgian,
  CR_Hangul,
  CR_Ethiopic,
  CR_Cherokee,
  CR_Canadian_Aboriginal,
  CR_Ogham,
  CR_Runic,
  CR_Khmer,
  CR_Mongolian,
  CR_Hiragana,
  CR_Katakana,
  CR_Bopomofo,
  CR_Han,
  CR_Yi,
  CR_Old_Italic,
  CR_Gothic,
  CR_Deseret,
  CR_Inherited,
  CR_Tagalog,
  CR_Hanunoo,
  CR_Buhid,
  CR_Tagbanwa,
  CR_Limbu,
  CR_Tai_Le,
  CR_Linear_B,
  CR_Ugaritic,
  CR_Shavian,
  CR_Osmanya,
  CR_Cypriot,
  CR_Braille,
  CR_Buginese,
  CR_Coptic,
  CR_New_Tai_Lue,
  CR_Glagolitic,
  CR_Tifinagh,
  CR_Syloti_Nagri,
  CR_Old_Persian,
  CR_Kharoshthi,
  CR_Balinese,
  CR_Cuneiform,
  CR_Phoenician,
  CR_Phags_Pa,
  CR_Nko,
  CR_Sundanese,
  CR_Lepcha,
  CR_Ol_Chiki,
  CR_Vai,
  CR_Saurashtra,
  CR_Kayah_Li,
  CR_Rejang,
  CR_Lycian,
  CR_Carian,
  CR_Lydian,
  CR_Cham,
  CR_Tai_Tham,
  CR_Tai_Viet,
  CR_Avestan,
  CR_Egyptian_Hieroglyphs,
  CR_Samaritan,
  CR_Lisu,
  CR_Bamum,
  CR_Javanese,
  CR_Meetei_Mayek,
  CR_Imperial_Aramaic,
  CR_Old_South_Arabian,
  CR_Inscriptional_Parthian,
  CR_Inscriptional_Pahlavi,
  CR_Old_Turkic,
  CR_Kaithi,
  CR_Batak,
  CR_Brahmi,
  CR_Mandaic,
  CR_White_Space,
  CR_Bidi_Control,
  CR_Join_Control,
  CR_Dash,
  CR_Hyphen,
  CR_Quotation_Mark,
  CR_Terminal_Punctuation,
  CR_Other_Math,
  CR_Hex_Digit,
  CR_ASCII_Hex_Digit,
  CR_Other_Alphabetic,
  CR_Ideographic,
  CR_Diacritic,
  CR_Extender,
  CR_Other_Lowercase,
  CR_Other_Uppercase,
  CR_Noncharacter_Code_Point,
  CR_Other_Grapheme_Extend,
  CR_IDS_Binary_Operator,
  CR_IDS_Trinary_Operator,
  CR_Radical,
  CR_Unified_Ideograph,
  CR_Other_Default_Ignorable_Code_Point,
  CR_Deprecated,
  CR_Soft_Dotted,
  CR_Logical_Order_Exception,
  CR_Other_ID_Start,
  CR_Other_ID_Continue,
  CR_STerm,
  CR_Variation_Selector,
  CR_Pattern_White_Space,
  CR_Pattern_Syntax,
  CR_Unknown,
  CR_Age_1_1,
  CR_Age_2_0,
  CR_Age_2_1,
  CR_Age_3_0,
  CR_Age_3_1,
  CR_Age_3_2,
  CR_Age_4_0,
  CR_Age_4_1,
  CR_Age_5_0,
  CR_Age_5_1,
  CR_Age_5_2,
  CR_Age_6_0,
  CR_In_Basic_Latin,
  CR_In_Latin_1_Supplement,
  CR_In_Latin_Extended_A,
  CR_In_Latin_Extended_B,
  CR_In_IPA_Extensions,
  CR_In_Spacing_Modifier_Letters,
  CR_In_Combining_Diacritical_Marks,
  CR_In_Greek_and_Coptic,
  CR_In_Cyrillic,
  CR_In_Cyrillic_Supplement,
  CR_In_Armenian,
  CR_In_Hebrew,
  CR_In_Arabic,
  CR_In_Syriac,
  CR_In_Arabic_Supplement,
  CR_In_Thaana,
  CR_In_NKo,
  CR_In_Samaritan,
  CR_In_Mandaic,
  CR_In_Devanagari,
  CR_In_Bengali,
  CR_In_Gurmukhi,
  CR_In_Gujarati,
  CR_In_Oriya,
  CR_In_Tamil,
  CR_In_Telugu,
  CR_In_Kannada,
  CR_In_Malayalam,
  CR_In_Sinhala,
  CR_In_Thai,
  CR_In_Lao,
  CR_In_Tibetan,
  CR_In_Myanmar,
  CR_In_Georgian,
  CR_In_Hangul_Jamo,
  CR_In_Ethiopic,
  CR_In_Ethiopic_Supplement,
  CR_In_Cherokee,
  CR_In_Unified_Canadian_Aboriginal_Syllabics,
  CR_In_Ogham,
  CR_In_Runic,
  CR_In_Tagalog,
  CR_In_Hanunoo,
  CR_In_Buhid,
  CR_In_Tagbanwa,
  CR_In_Khmer,
  CR_In_Mongolian,
  CR_In_Unified_Canadian_Aboriginal_Syllabics_Extended,
  CR_In_Limbu,
  CR_In_Tai_Le,
  CR_In_New_Tai_Lue,
  CR_In_Khmer_Symbols,
  CR_In_Buginese,
  CR_In_Tai_Tham,
  CR_In_Balinese,
  CR_In_Sundanese,
  CR_In_Batak,
  CR_In_Lepcha,
  CR_In_Ol_Chiki,
  CR_In_Vedic_Extensions,
  CR_In_Phonetic_Extensions,
  CR_In_Phonetic_Extensions_Supplement,
  CR_In_Combining_Diacritical_Marks_Supplement,
  CR_In_Latin_Extended_Additional,
  CR_In_Greek_Extended,
  CR_In_General_Punctuation,
  CR_In_Superscripts_and_Subscripts,
  CR_In_Currency_Symbols,
  CR_In_Combining_Diacritical_Marks_for_Symbols,
  CR_In_Letterlike_Symbols,
  CR_In_Number_Forms,
  CR_In_Arrows,
  CR_In_Mathematical_Operators,
  CR_In_Miscellaneous_Technical,
  CR_In_Control_Pictures,
  CR_In_Optical_Character_Recognition,
  CR_In_Enclosed_Alphanumerics,
  CR_In_Box_Drawing,
  CR_In_Block_Elements,
  CR_In_Geometric_Shapes,
  CR_In_Miscellaneous_Symbols,
  CR_In_Dingbats,
  CR_In_Miscellaneous_Mathematical_Symbols_A,
  CR_In_Supplemental_Arrows_A,
  CR_In_Braille_Patterns,
  CR_In_Supplemental_Arrows_B,
  CR_In_Miscellaneous_Mathematical_Symbols_B,
  CR_In_Supplemental_Mathematical_Operators,
  CR_In_Miscellaneous_Symbols_and_Arrows,
  CR_In_Glagolitic,
  CR_In_Latin_Extended_C,
  CR_In_Coptic,
  CR_In_Georgian_Supplement,
  CR_In_Tifinagh,
  CR_In_Ethiopic_Extended,
  CR_In_Cyrillic_Extended_A,
  CR_In_Supplemental_Punctuation,
  CR_In_CJK_Radicals_Supplement,
  CR_In_Kangxi_Radicals,
  CR_In_Ideographic_Description_Characters,
  CR_In_CJK_Symbols_and_Punctuation,
  CR_In_Hiragana,
  CR_In_Katakana,
  CR_In_Bopomofo,
  CR_In_Hangul_Compatibility_Jamo,
  CR_In_Kanbun,
  CR_In_Bopomofo_Extended,
  CR_In_CJK_Strokes,
  CR_In_Katakana_Phonetic_Extensions,
  CR_In_Enclosed_CJK_Letters_and_Months,
  CR_In_CJK_Compatibility,
  CR_In_CJK_Unified_Ideographs_Extension_A,
  CR_In_Yijing_Hexagram_Symbols,
  CR_In_CJK_Unified_Ideographs,
  CR_In_Yi_Syllables,
  CR_In_Yi_Radicals,
  CR_In_Lisu,
  CR_In_Vai,
  CR_In_Cyrillic_Extended_B,
  CR_In_Bamum,
  CR_In_Modifier_Tone_Letters,
  CR_In_Latin_Extended_D,
  CR_In_Syloti_Nagri,
  CR_In_Common_Indic_Number_Forms,
  CR_In_Phags_pa,
  CR_In_Saurashtra,
  CR_In_Devanagari_Extended,
  CR_In_Kayah_Li,
  CR_In_Rejang,
  CR_In_Hangul_Jamo_Extended_A,
  CR_In_Javanese,
  CR_In_Cham,
  CR_In_Myanmar_Extended_A,
  CR_In_Tai_Viet,
  CR_In_Ethiopic_Extended_A,
  CR_In_Meetei_Mayek,
  CR_In_Hangul_Syllables,
  CR_In_Hangul_Jamo_Extended_B,
  CR_In_High_Surrogates,
  CR_In_High_Private_Use_Surrogates,
  CR_In_Low_Surrogates,
  CR_In_Private_Use_Area,
  CR_In_CJK_Compatibility_Ideographs,
  CR_In_Alphabetic_Presentation_Forms,
  CR_In_Arabic_Presentation_Forms_A,
  CR_In_Variation_Selectors,
  CR_In_Vertical_Forms,
  CR_In_Combining_Half_Marks,
  CR_In_CJK_Compatibility_Forms,
  CR_In_Small_Form_Variants,
  CR_In_Arabic_Presentation_Forms_B,
  CR_In_Halfwidth_and_Fullwidth_Forms,
  CR_In_Specials,
  CR_In_Linear_B_Syllabary,
  CR_In_Linear_B_Ideograms,
  CR_In_Aegean_Numbers,
  CR_In_Ancient_Greek_Numbers,
  CR_In_Ancient_Symbols,
  CR_In_Phaistos_Disc,
  CR_In_Lycian,
  CR_In_Carian,
  CR_In_Old_Italic,
  CR_In_Gothic,
  CR_In_Ugaritic,
  CR_In_Old_Persian,
  CR_In_Deseret,
  CR_In_Shavian,
  CR_In_Osmanya,
  CR_In_Cypriot_Syllabary,
  CR_In_Imperial_Aramaic,
  CR_In_Phoenician,
  CR_In_Lydian,
  CR_In_Kharoshthi,
  CR_In_Old_South_Arabian,
  CR_In_Avestan,
  CR_In_Inscriptional_Parthian,
  CR_In_Inscriptional_Pahlavi,
  CR_In_Old_Turkic,
  CR_In_Rumi_Numeral_Symbols,
  CR_In_Brahmi,
  CR_In_Kaithi,
  CR_In_Cuneiform,
  CR_In_Cuneiform_Numbers_and_Punctuation,
  CR_In_Egyptian_Hieroglyphs,
  CR_In_Bamum_Supplement,
  CR_In_Kana_Supplement,
  CR_In_Byzantine_Musical_Symbols,
  CR_In_Musical_Symbols,
  CR_In_Ancient_Greek_Musical_Notation,
  CR_In_Tai_Xuan_Jing_Symbols,
  CR_In_Counting_Rod_Numerals,
  CR_In_Mathematical_Alphanumeric_Symbols,
  CR_In_Mahjong_Tiles,
  CR_In_Domino_Tiles,
  CR_In_Playing_Cards,
  CR_In_Enclosed_Alphanumeric_Supplement,
  CR_In_Enclosed_Ideographic_Supplement,
  CR_In_Miscellaneous_Symbols_And_Pictographs,
  CR_In_Emoticons,
  CR_In_Transport_And_Map_Symbols,
  CR_In_Alchemical_Symbols,
  CR_In_CJK_Unified_Ideographs_Extension_B,
  CR_In_CJK_Unified_Ideographs_Extension_C,
  CR_In_CJK_Unified_Ideographs_Extension_D,
  CR_In_CJK_Compatibility_Ideographs_Supplement,
  CR_In_Tags,
  CR_In_Variation_Selectors_Supplement,
  CR_In_Supplementary_Private_Use_Area_A,
  CR_In_Supplementary_Private_Use_Area_B,
  CR_In_No_Block,
#endif /* USE_UNICODE_PROPERTIES */
};
struct uniname2ctype_struct {
  int name, ctype;
};

static const struct uniname2ctype_struct *uniname2ctype_p(const char *, unsigned int);

#ifndef USE_UNICODE_PROPERTIES
#define TOTAL_KEYWORDS 14
#define MIN_WORD_LENGTH 4
#define MAX_WORD_LENGTH 6
#define MIN_HASH_VALUE 6
#define MAX_HASH_VALUE 19
/* maximum key range = 14, duplicates = 0 */
#else /* USE_UNICODE_PROPERTIES */
#define TOTAL_KEYWORDS 598
#define MIN_WORD_LENGTH 1
#define MAX_WORD_LENGTH 44
#define MIN_HASH_VALUE 3
#define MAX_HASH_VALUE 4175
/* maximum key range = 4173, duplicates = 0 */
#endif /* USE_UNICODE_PROPERTIES */

#ifdef __GNUC__
__inline
#else
#ifdef __cplusplus
inline
#endif
#endif
static unsigned int
uniname2ctype_hash (str, len)
     register const char *str;
     register unsigned int len;
{
#ifndef USE_UNICODE_PROPERTIES
  static const unsigned char asso_values[] =
#else /* USE_UNICODE_PROPERTIES */
  static const unsigned short asso_values[] =
#endif /* USE_UNICODE_PROPERTIES */
    {
#ifndef USE_UNICODE_PROPERTIES
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
      20, 20, 20, 20, 20, 20, 20,  3, 11,  5,
       4, 20, 20,  9, 20,  1, 20, 20, 10, 20,
       2, 20,  1, 20,  1,  7,  4,  6, 20,  1,
       4, 20, 20, 20, 20, 20, 20, 20
#else /* USE_UNICODE_PROPERTIES */
      4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176,
      4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176,
      4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176,
      4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176,
      4176, 4176, 4176, 4176, 4176, 4176,    1, 4176,   13,    1,
         2,   17,   12,    9,    4, 4176, 4176, 4176, 4176, 4176,
      4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176,
      4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176,
      4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176, 4176,
      4176, 4176, 4176, 4176, 4176, 4176, 4176,    8,  912,   13,
       666,   93,  126,  512,  235,    4,  193, 1233,   42,   25,
         1,  119,  336,    1,  186,    2,   53,  683,  357,   21,
        57, 1388,    7, 4176, 4176, 4176, 4176, 4176
#endif /* USE_UNICODE_PROPERTIES */
    };
#ifndef USE_UNICODE_PROPERTIES
  return len + asso_values[(unsigned char)str[2]] + asso_values[(unsigned char)str[0]];
#else /* USE_UNICODE_PROPERTIES */
  register int hval = len;

  switch (hval)
    {
      default:
        hval += asso_values[(unsigned char)str[15]];
      /*FALLTHROUGH*/
      case 15:
      case 14:
      case 13:
      case 12:
        hval += asso_values[(unsigned char)str[11]];
      /*FALLTHROUGH*/
      case 11:
      case 10:
      case 9:
      case 8:
      case 7:
      case 6:
        hval += asso_values[(unsigned char)str[5]];
      /*FALLTHROUGH*/
      case 5:
        hval += asso_values[(unsigned char)str[4]];
      /*FALLTHROUGH*/
      case 4:
      case 3:
        hval += asso_values[(unsigned char)str[2]];
      /*FALLTHROUGH*/
      case 2:
        hval += asso_values[(unsigned char)str[1]];
      /*FALLTHROUGH*/
      case 1:
        hval += asso_values[(unsigned char)str[0]];
        break;
    }
  return hval + asso_values[(unsigned char)str[len - 1]];
#endif /* USE_UNICODE_PROPERTIES */
}

struct uniname2ctype_pool_t
  {
#ifndef USE_UNICODE_PROPERTIES
    char uniname2ctype_pool_str6[sizeof("word")];
    char uniname2ctype_pool_str7[sizeof("print")];
    char uniname2ctype_pool_str8[sizeof("punct")];
    char uniname2ctype_pool_str9[sizeof("alpha")];
    char uniname2ctype_pool_str10[sizeof("alnum")];
    char uniname2ctype_pool_str11[sizeof("xdigit")];
    char uniname2ctype_pool_str12[sizeof("upper")];
    char uniname2ctype_pool_str13[sizeof("ascii")];
    char uniname2ctype_pool_str14[sizeof("cntrl")];
    char uniname2ctype_pool_str15[sizeof("space")];
    char uniname2ctype_pool_str16[sizeof("lower")];
    char uniname2ctype_pool_str17[sizeof("graph")];
    char uniname2ctype_pool_str18[sizeof("digit")];
    char uniname2ctype_pool_str19[sizeof("blank")];
#else /* USE_UNICODE_PROPERTIES */
    char uniname2ctype_pool_str3[sizeof("n")];
    char uniname2ctype_pool_str5[sizeof("s")];
    char uniname2ctype_pool_str13[sizeof("zs")];
    char uniname2ctype_pool_str15[sizeof("z")];
    char uniname2ctype_pool_str17[sizeof("cn")];
    char uniname2ctype_pool_str19[sizeof("cs")];
    char uniname2ctype_pool_str23[sizeof("ci")];
    char uniname2ctype_pool_str25[sizeof("qaai")];
    char uniname2ctype_pool_str27[sizeof("c")];
    char uniname2ctype_pool_str28[sizeof("cans")];
    char uniname2ctype_pool_str29[sizeof("mn")];
    char uniname2ctype_pool_str30[sizeof("sc")];
    char uniname2ctype_pool_str32[sizeof("zzzz")];
    char uniname2ctype_pool_str34[sizeof("qaac")];
    char uniname2ctype_pool_str36[sizeof("ascii")];
    char uniname2ctype_pool_str41[sizeof("cc")];
    char uniname2ctype_pool_str51[sizeof("m")];
    char uniname2ctype_pool_str52[sizeof("insamaritan")];
    char uniname2ctype_pool_str53[sizeof("mc")];
    char uniname2ctype_pool_str54[sizeof("sm")];
    char uniname2ctype_pool_str63[sizeof("lana")];
    char uniname2ctype_pool_str66[sizeof("mandaic")];
    char uniname2ctype_pool_str70[sizeof("lc")];
    char uniname2ctype_pool_str72[sizeof("sinhala")];
    char uniname2ctype_pool_str73[sizeof("inlycian")];
    char uniname2ctype_pool_str75[sizeof("inancientsymbols")];
    char uniname2ctype_pool_str76[sizeof("cwcm")];
    char uniname2ctype_pool_str80[sizeof("inthai")];
    char uniname2ctype_pool_str81[sizeof("inmusicalsymbols")];
    char uniname2ctype_pool_str82[sizeof("incham")];
    char uniname2ctype_pool_str85[sizeof("l")];
    char uniname2ctype_pool_str87[sizeof("nl")];
    char uniname2ctype_pool_str90[sizeof("inthaana")];
    char uniname2ctype_pool_str93[sizeof("zl")];
    char uniname2ctype_pool_str94[sizeof("lm")];
    char uniname2ctype_pool_str95[sizeof("inlowsurrogates")];
    char uniname2ctype_pool_str97[sizeof("initialpunctuation")];
    char uniname2ctype_pool_str106[sizeof("alnum")];
    char uniname2ctype_pool_str108[sizeof("latn")];
    char uniname2ctype_pool_str109[sizeof("intransportandmapsymbols")];
    char uniname2ctype_pool_str110[sizeof("latin")];
    char uniname2ctype_pool_str111[sizeof("ital")];
    char uniname2ctype_pool_str116[sizeof("inmalayalam")];
    char uniname2ctype_pool_str118[sizeof("inavestan")];
    char uniname2ctype_pool_str121[sizeof("cwl")];
    char uniname2ctype_pool_str123[sizeof("incommonindicnumberforms")];
    char uniname2ctype_pool_str125[sizeof("inspecials")];
    char uniname2ctype_pool_str128[sizeof("ll")];
    char uniname2ctype_pool_str131[sizeof("inipaextensions")];
    char uniname2ctype_pool_str132[sizeof("taml")];
    char uniname2ctype_pool_str136[sizeof("intamil")];
    char uniname2ctype_pool_str137[sizeof("inlatinextendeda")];
    char uniname2ctype_pool_str142[sizeof("inarmenian")];
    char uniname2ctype_pool_str143[sizeof("cwt")];
    char uniname2ctype_pool_str147[sizeof("inlatinextendedc")];
    char uniname2ctype_pool_str148[sizeof("incuneiform")];
    char uniname2ctype_pool_str149[sizeof("intaitham")];
    char uniname2ctype_pool_str150[sizeof("lt")];
    char uniname2ctype_pool_str156[sizeof("cntrl")];
    char uniname2ctype_pool_str158[sizeof("osma")];
    char uniname2ctype_pool_str164[sizeof("inmiscellaneoussymbols")];
    char uniname2ctype_pool_str167[sizeof("intaixuanjingsymbols")];
    char uniname2ctype_pool_str173[sizeof("inmiscellaneoussymbolsandarrows")];
    char uniname2ctype_pool_str174[sizeof("inosmanya")];
    char uniname2ctype_pool_str175[sizeof("tamil")];
    char uniname2ctype_pool_str177[sizeof("cwcf")];
    char uniname2ctype_pool_str178[sizeof("inmiscellaneoussymbolsandpictographs")];
    char uniname2ctype_pool_str179[sizeof("mtei")];
    char uniname2ctype_pool_str180[sizeof("inlatinextendedadditional")];
    char uniname2ctype_pool_str184[sizeof("innewtailue")];
    char uniname2ctype_pool_str197[sizeof("incontrolpictures")];
    char uniname2ctype_pool_str200[sizeof("tale")];
    char uniname2ctype_pool_str203[sizeof("sterm")];
    char uniname2ctype_pool_str204[sizeof("intaile")];
    char uniname2ctype_pool_str206[sizeof("inmiscellaneousmathematicalsymbolsa")];
    char uniname2ctype_pool_str211[sizeof("inmyanmarextendeda")];
    char uniname2ctype_pool_str213[sizeof("me")];
    char uniname2ctype_pool_str215[sizeof("cari")];
    char uniname2ctype_pool_str216[sizeof("inrunic")];
    char uniname2ctype_pool_str217[sizeof("incarian")];
    char uniname2ctype_pool_str218[sizeof("insyriac")];
    char uniname2ctype_pool_str221[sizeof("inenclosedalphanumerics")];
    char uniname2ctype_pool_str222[sizeof("taiviet")];
    char uniname2ctype_pool_str223[sizeof("carian")];
    char uniname2ctype_pool_str224[sizeof("armn")];
    char uniname2ctype_pool_str225[sizeof("samr")];
    char uniname2ctype_pool_str227[sizeof("armi")];
    char uniname2ctype_pool_str229[sizeof("newtailue")];
    char uniname2ctype_pool_str231[sizeof("incyrillic")];
    char uniname2ctype_pool_str233[sizeof("armenian")];
    char uniname2ctype_pool_str234[sizeof("inmyanmar")];
    char uniname2ctype_pool_str235[sizeof("samaritan")];
    char uniname2ctype_pool_str238[sizeof("arabic")];
    char uniname2ctype_pool_str239[sizeof("incuneiformnumbersandpunctuation")];
    char uniname2ctype_pool_str241[sizeof("no")];
    char uniname2ctype_pool_str242[sizeof("so")];
    char uniname2ctype_pool_str246[sizeof("sinh")];
    char uniname2ctype_pool_str248[sizeof("han")];
    char uniname2ctype_pool_str249[sizeof("innko")];
    char uniname2ctype_pool_str251[sizeof("zinh")];
    char uniname2ctype_pool_str252[sizeof("hani")];
    char uniname2ctype_pool_str253[sizeof("co")];
    char uniname2ctype_pool_str256[sizeof("taile")];
    char uniname2ctype_pool_str257[sizeof("inmiscellaneoustechnical")];
    char uniname2ctype_pool_str259[sizeof("ext")];
    char uniname2ctype_pool_str260[sizeof("insinhala")];
    char uniname2ctype_pool_str262[sizeof("inlinearbideograms")];
    char uniname2ctype_pool_str263[sizeof("inideographicdescriptioncharacters")];
    char uniname2ctype_pool_str265[sizeof("shavian")];
    char uniname2ctype_pool_str267[sizeof("cf")];
    char uniname2ctype_pool_str269[sizeof("connectorpunctuation")];
    char uniname2ctype_pool_str270[sizeof("shaw")];
    char uniname2ctype_pool_str272[sizeof("inopticalcharacterrecognition")];
    char uniname2ctype_pool_str275[sizeof("inruminumeralsymbols")];
    char uniname2ctype_pool_str281[sizeof("inenclosedalphanumericsupplement")];
    char uniname2ctype_pool_str282[sizeof("lo")];
    char uniname2ctype_pool_str283[sizeof("inemoticons")];
    char uniname2ctype_pool_str284[sizeof("common")];
    char uniname2ctype_pool_str285[sizeof("cham")];
    char uniname2ctype_pool_str290[sizeof("inlao")];
    char uniname2ctype_pool_str291[sizeof("lao")];
    char uniname2ctype_pool_str292[sizeof("laoo")];
    char uniname2ctype_pool_str304[sizeof("thai")];
    char uniname2ctype_pool_str308[sizeof("thaa")];
    char uniname2ctype_pool_str316[sizeof("mongolian")];
    char uniname2ctype_pool_str319[sizeof("thaana")];
    char uniname2ctype_pool_str325[sizeof("math")];
    char uniname2ctype_pool_str328[sizeof("inarrows")];
    char uniname2ctype_pool_str330[sizeof("oriya")];
    char uniname2ctype_pool_str332[sizeof("asciihexdigit")];
    char uniname2ctype_pool_str340[sizeof("taitham")];
    char uniname2ctype_pool_str342[sizeof("ps")];
    char uniname2ctype_pool_str346[sizeof("pi")];
    char uniname2ctype_pool_str347[sizeof("joinc")];
    char uniname2ctype_pool_str350[sizeof("loe")];
    char uniname2ctype_pool_str360[sizeof("inethiopic")];
    char uniname2ctype_pool_str361[sizeof("term")];
    char uniname2ctype_pool_str363[sizeof("vs")];
    char uniname2ctype_pool_str364[sizeof("pc")];
    char uniname2ctype_pool_str367[sizeof("hano")];
    char uniname2ctype_pool_str371[sizeof("insylotinagri")];
    char uniname2ctype_pool_str375[sizeof("invai")];
    char uniname2ctype_pool_str376[sizeof("vai")];
    char uniname2ctype_pool_str377[sizeof("vaii")];
    char uniname2ctype_pool_str382[sizeof("inshavian")];
    char uniname2ctype_pool_str384[sizeof("inphaistosdisc")];
    char uniname2ctype_pool_str385[sizeof("inolchiki")];
    char uniname2ctype_pool_str389[sizeof("ethi")];
    char uniname2ctype_pool_str397[sizeof("ahex")];
    char uniname2ctype_pool_str399[sizeof("inogham")];
    char uniname2ctype_pool_str400[sizeof("incherokee")];
    char uniname2ctype_pool_str406[sizeof("patws")];
    char uniname2ctype_pool_str407[sizeof("alpha")];
    char uniname2ctype_pool_str408[sizeof("inmathematicalalphanumericsymbols")];
    char uniname2ctype_pool_str412[sizeof("inlepcha")];
    char uniname2ctype_pool_str413[sizeof("inscriptionalparthian")];
    char uniname2ctype_pool_str423[sizeof("terminalpunctuation")];
    char uniname2ctype_pool_str424[sizeof("avst")];
    char uniname2ctype_pool_str426[sizeof("oalpha")];
    char uniname2ctype_pool_str428[sizeof("incoptic")];
    char uniname2ctype_pool_str430[sizeof("inenclosedcjklettersandmonths")];
    char uniname2ctype_pool_str433[sizeof("intifinagh")];
    char uniname2ctype_pool_str435[sizeof("tifinagh")];
    char uniname2ctype_pool_str437[sizeof("hira")];
    char uniname2ctype_pool_str443[sizeof("insmallformvariants")];
    char uniname2ctype_pool_str445[sizeof("hex")];
    char uniname2ctype_pool_str452[sizeof("inhiragana")];
    char uniname2ctype_pool_str458[sizeof("whitespace")];
    char uniname2ctype_pool_str460[sizeof("lineseparator")];
    char uniname2ctype_pool_str464[sizeof("inscriptionalpahlavi")];
    char uniname2ctype_pool_str470[sizeof("titlecaseletter")];
    char uniname2ctype_pool_str475[sizeof("tavt")];
    char uniname2ctype_pool_str481[sizeof("intaiviet")];
    char uniname2ctype_pool_str483[sizeof("lowercase")];
    char uniname2ctype_pool_str487[sizeof("control")];
    char uniname2ctype_pool_str488[sizeof("lepc")];
    char uniname2ctype_pool_str490[sizeof("hanunoo")];
    char uniname2ctype_pool_str501[sizeof("joincontrol")];
    char uniname2ctype_pool_str503[sizeof("ininscriptionalparthian")];
    char uniname2ctype_pool_str504[sizeof("coptic")];
    char uniname2ctype_pool_str505[sizeof("ininscriptionalpahlavi")];
    char uniname2ctype_pool_str516[sizeof("inmahjongtiles")];
    char uniname2ctype_pool_str524[sizeof("pe")];
    char uniname2ctype_pool_str525[sizeof("copt")];
    char uniname2ctype_pool_str527[sizeof("avestan")];
    char uniname2ctype_pool_str531[sizeof("cher")];
    char uniname2ctype_pool_str535[sizeof("finalpunctuation")];
    char uniname2ctype_pool_str537[sizeof("space")];
    char uniname2ctype_pool_str542[sizeof("inphoneticextensions")];
    char uniname2ctype_pool_str551[sizeof("format")];
    char uniname2ctype_pool_str555[sizeof("inmongolian")];
    char uniname2ctype_pool_str559[sizeof("lower")];
    char uniname2ctype_pool_str564[sizeof("wspace")];
    char uniname2ctype_pool_str567[sizeof("inphoenician")];
    char uniname2ctype_pool_str570[sizeof("java")];
    char uniname2ctype_pool_str576[sizeof("po")];
    char uniname2ctype_pool_str580[sizeof("intags")];
    char uniname2ctype_pool_str583[sizeof("prti")];
    char uniname2ctype_pool_str589[sizeof("invariationselectors")];
    char uniname2ctype_pool_str590[sizeof("pf")];
    char uniname2ctype_pool_str592[sizeof("cprt")];
    char uniname2ctype_pool_str598[sizeof("tagbanwa")];
    char uniname2ctype_pool_str603[sizeof("inphoneticextensionssupplement")];
    char uniname2ctype_pool_str604[sizeof("inlatin1supplement")];
    char uniname2ctype_pool_str608[sizeof("imperialaramaic")];
    char uniname2ctype_pool_str609[sizeof("xpeo")];
    char uniname2ctype_pool_str621[sizeof("phli")];
    char uniname2ctype_pool_str623[sizeof("age=1.1")];
    char uniname2ctype_pool_str624[sizeof("age=2.1")];
    char uniname2ctype_pool_str626[sizeof("nchar")];
    char uniname2ctype_pool_str627[sizeof("omath")];
    char uniname2ctype_pool_str629[sizeof("closepunctuation")];
    char uniname2ctype_pool_str630[sizeof("inalphabeticpresentationforms")];
    char uniname2ctype_pool_str631[sizeof("age=5.1")];
    char uniname2ctype_pool_str632[sizeof("age=5.2")];
    char uniname2ctype_pool_str633[sizeof("phnx")];
    char uniname2ctype_pool_str634[sizeof("age=4.1")];
    char uniname2ctype_pool_str635[sizeof("lowercaseletter")];
    char uniname2ctype_pool_str636[sizeof("age=2.0")];
    char uniname2ctype_pool_str637[sizeof("print")];
    char uniname2ctype_pool_str638[sizeof("age=6.0")];
    char uniname2ctype_pool_str639[sizeof("age=3.1")];
    char uniname2ctype_pool_str640[sizeof("age=3.2")];
    char uniname2ctype_pool_str641[sizeof("ingeneralpunctuation")];
    char uniname2ctype_pool_str643[sizeof("age=5.0")];
    char uniname2ctype_pool_str646[sizeof("age=4.0")];
    char uniname2ctype_pool_str648[sizeof("othersymbol")];
    char uniname2ctype_pool_str650[sizeof("invariationselectorssupplement")];
    char uniname2ctype_pool_str651[sizeof("age=3.0")];
    char uniname2ctype_pool_str658[sizeof("inimperialaramaic")];
    char uniname2ctype_pool_str659[sizeof("letter")];
    char uniname2ctype_pool_str661[sizeof("mong")];
    char uniname2ctype_pool_str666[sizeof("injavanese")];
    char uniname2ctype_pool_str668[sizeof("ogam")];
    char uniname2ctype_pool_str673[sizeof("p")];
    char uniname2ctype_pool_str676[sizeof("di")];
    char uniname2ctype_pool_str677[sizeof("ids")];
    char uniname2ctype_pool_str681[sizeof("zp")];
    char uniname2ctype_pool_str687[sizeof("caseignorable")];
    char uniname2ctype_pool_str689[sizeof("dia")];
    char uniname2ctype_pool_str690[sizeof("privateuse")];
    char uniname2ctype_pool_str692[sizeof("inmathematicaloperators")];
    char uniname2ctype_pool_str694[sizeof("spaceseparator")];
    char uniname2ctype_pool_str696[sizeof("tfng")];
    char uniname2ctype_pool_str699[sizeof("idc")];
    char uniname2ctype_pool_str704[sizeof("mand")];
    char uniname2ctype_pool_str706[sizeof("phoenician")];
    char uniname2ctype_pool_str709[sizeof("otheridcontinue")];
    char uniname2ctype_pool_str715[sizeof("otheridstart")];
    char uniname2ctype_pool_str717[sizeof("noncharactercodepoint")];
    char uniname2ctype_pool_str719[sizeof("inmandaic")];
    char uniname2ctype_pool_str720[sizeof("gothic")];
    char uniname2ctype_pool_str721[sizeof("saurashtra")];
    char uniname2ctype_pool_str722[sizeof("otheralphabetic")];
    char uniname2ctype_pool_str726[sizeof("inlydian")];
    char uniname2ctype_pool_str728[sizeof("lepcha")];
    char uniname2ctype_pool_str729[sizeof("idst")];
    char uniname2ctype_pool_str732[sizeof("ingujarati")];
    char uniname2ctype_pool_str733[sizeof("xids")];
    char uniname2ctype_pool_str735[sizeof("lisu")];
    char uniname2ctype_pool_str737[sizeof("inverticalforms")];
    char uniname2ctype_pool_str742[sizeof("ingurmukhi")];
    char uniname2ctype_pool_str744[sizeof("xidc")];
    char uniname2ctype_pool_str746[sizeof("glagolitic")];
    char uniname2ctype_pool_str750[sizeof("otherlowercase")];
    char uniname2ctype_pool_str751[sizeof("olower")];
    char uniname2ctype_pool_str753[sizeof("javanese")];
    char uniname2ctype_pool_str754[sizeof("patternsyntax")];
    char uniname2ctype_pool_str760[sizeof("hang")];
    char uniname2ctype_pool_str775[sizeof("ingeometricshapes")];
    char uniname2ctype_pool_str777[sizeof("insupplementalmathematicaloperators")];
    char uniname2ctype_pool_str778[sizeof("insundanese")];
    char uniname2ctype_pool_str784[sizeof("other")];
    char uniname2ctype_pool_str790[sizeof("talu")];
    char uniname2ctype_pool_str791[sizeof("othernumber")];
    char uniname2ctype_pool_str795[sizeof("oids")];
    char uniname2ctype_pool_str796[sizeof("odi")];
    char uniname2ctype_pool_str797[sizeof("sundanese")];
    char uniname2ctype_pool_str802[sizeof("insuperscriptsandsubscripts")];
    char uniname2ctype_pool_str803[sizeof("xsux")];
    char uniname2ctype_pool_str806[sizeof("oidc")];
    char uniname2ctype_pool_str808[sizeof("indominotiles")];
    char uniname2ctype_pool_str813[sizeof("inspacingmodifierletters")];
    char uniname2ctype_pool_str818[sizeof("inolditalic")];
    char uniname2ctype_pool_str820[sizeof("separator")];
    char uniname2ctype_pool_str826[sizeof("ingothic")];
    char uniname2ctype_pool_str827[sizeof("inprivateusearea")];
    char uniname2ctype_pool_str828[sizeof("indeseret")];
    char uniname2ctype_pool_str829[sizeof("inancientgreeknumbers")];
    char uniname2ctype_pool_str832[sizeof("otherletter")];
    char uniname2ctype_pool_str833[sizeof("ingeorgian")];
    char uniname2ctype_pool_str836[sizeof("inancientgreekmusicalnotation")];
    char uniname2ctype_pool_str840[sizeof("idcontinue")];
    char uniname2ctype_pool_str843[sizeof("xdigit")];
    char uniname2ctype_pool_str849[sizeof("xidstart")];
    char uniname2ctype_pool_str851[sizeof("letternumber")];
    char uniname2ctype_pool_str857[sizeof("ethiopic")];
    char uniname2ctype_pool_str861[sizeof("cuneiform")];
    char uniname2ctype_pool_str862[sizeof("othermath")];
    char uniname2ctype_pool_str864[sizeof("ingreekandcoptic")];
    char uniname2ctype_pool_str865[sizeof("inunifiedcanadianaboriginalsyllabics")];
    char uniname2ctype_pool_str867[sizeof("inoldturkic")];
    char uniname2ctype_pool_str869[sizeof("incountingrodnumerals")];
    char uniname2ctype_pool_str875[sizeof("telu")];
    char uniname2ctype_pool_str878[sizeof("inphagspa")];
    char uniname2ctype_pool_str883[sizeof("saur")];
    char uniname2ctype_pool_str886[sizeof("ideo")];
    char uniname2ctype_pool_str890[sizeof("diacritic")];
    char uniname2ctype_pool_str892[sizeof("patternwhitespace")];
    char uniname2ctype_pool_str896[sizeof("rjng")];
    char uniname2ctype_pool_str901[sizeof("runic")];
    char uniname2ctype_pool_str902[sizeof("grext")];
    char uniname2ctype_pool_str904[sizeof("insaurashtra")];
    char uniname2ctype_pool_str905[sizeof("inugaritic")];
    char uniname2ctype_pool_str907[sizeof("inhangulsyllables")];
    char uniname2ctype_pool_str910[sizeof("olditalic")];
    char uniname2ctype_pool_str911[sizeof("dsrt")];
    char uniname2ctype_pool_str912[sizeof("inrejang")];
    char uniname2ctype_pool_str914[sizeof("geor")];
    char uniname2ctype_pool_str915[sizeof("dash")];
    char uniname2ctype_pool_str921[sizeof("ogham")];
    char uniname2ctype_pool_str923[sizeof("goth")];
    char uniname2ctype_pool_str926[sizeof("idstart")];
    char uniname2ctype_pool_str928[sizeof("casedletter")];
    char uniname2ctype_pool_str930[sizeof("radical")];
    char uniname2ctype_pool_str932[sizeof("phagspa")];
    char uniname2ctype_pool_str935[sizeof("inmodifiertoneletters")];
    char uniname2ctype_pool_str937[sizeof("inbasiclatin")];
    char uniname2ctype_pool_str939[sizeof("canadianaboriginal")];
    char uniname2ctype_pool_str947[sizeof("insupplementalarrowsa")];
    char uniname2ctype_pool_str951[sizeof("xidcontinue")];
    char uniname2ctype_pool_str954[sizeof("inarabic")];
    char uniname2ctype_pool_str955[sizeof("otherpunctuation")];
    char uniname2ctype_pool_str958[sizeof("incyrillicextendeda")];
    char uniname2ctype_pool_str961[sizeof("hiragana")];
    char uniname2ctype_pool_str962[sizeof("hexdigit")];
    char uniname2ctype_pool_str963[sizeof("linb")];
    char uniname2ctype_pool_str970[sizeof("bali")];
    char uniname2ctype_pool_str976[sizeof("variationselector")];
    char uniname2ctype_pool_str977[sizeof("inarabicpresentationformsa")];
    char uniname2ctype_pool_str983[sizeof("innumberforms")];
    char uniname2ctype_pool_str986[sizeof("ogrext")];
    char uniname2ctype_pool_str987[sizeof("limb")];
    char uniname2ctype_pool_str994[sizeof("inhanguljamoextendeda")];
    char uniname2ctype_pool_str995[sizeof("logicalorderexception")];
    char uniname2ctype_pool_str996[sizeof("word")];
    char uniname2ctype_pool_str997[sizeof("inbyzantinemusicalsymbols")];
    char uniname2ctype_pool_str1000[sizeof("bamum")];
    char uniname2ctype_pool_str1002[sizeof("inbraillepatterns")];
    char uniname2ctype_pool_str1003[sizeof("inhanguljamo")];
    char uniname2ctype_pool_str1004[sizeof("inoldsoutharabian")];
    char uniname2ctype_pool_str1017[sizeof("hangul")];
    char uniname2ctype_pool_str1026[sizeof("tibt")];
    char uniname2ctype_pool_str1038[sizeof("tibetan")];
    char uniname2ctype_pool_str1052[sizeof("inhanunoo")];
    char uniname2ctype_pool_str1053[sizeof("invedicextensions")];
    char uniname2ctype_pool_str1056[sizeof("indevanagari")];
    char uniname2ctype_pool_str1057[sizeof("incyrillicsupplement")];
    char uniname2ctype_pool_str1060[sizeof("runr")];
    char uniname2ctype_pool_str1064[sizeof("extender")];
    char uniname2ctype_pool_str1066[sizeof("inbalinese")];
    char uniname2ctype_pool_str1067[sizeof("bengali")];
    char uniname2ctype_pool_str1073[sizeof("intibetan")];
    char uniname2ctype_pool_str1075[sizeof("inglagolitic")];
    char uniname2ctype_pool_str1078[sizeof("glag")];
    char uniname2ctype_pool_str1087[sizeof("inethiopicextendeda")];
    char uniname2ctype_pool_str1089[sizeof("inenclosedideographicsupplement")];
    char uniname2ctype_pool_str1092[sizeof("idsbinaryoperator")];
    char uniname2ctype_pool_str1095[sizeof("phag")];
    char uniname2ctype_pool_str1097[sizeof("decimalnumber")];
    char uniname2ctype_pool_str1099[sizeof("intagalog")];
    char uniname2ctype_pool_str1100[sizeof("deseret")];
    char uniname2ctype_pool_str1105[sizeof("inherited")];
    char uniname2ctype_pool_str1106[sizeof("insupplementaryprivateuseareaa")];
    char uniname2ctype_pool_str1110[sizeof("inmiscellaneousmathematicalsymbolsb")];
    char uniname2ctype_pool_str1112[sizeof("sarb")];
    char uniname2ctype_pool_str1114[sizeof("brai")];
    char uniname2ctype_pool_str1117[sizeof("oldpersian")];
    char uniname2ctype_pool_str1118[sizeof("arab")];
    char uniname2ctype_pool_str1123[sizeof("tglg")];
    char uniname2ctype_pool_str1128[sizeof("deva")];
    char uniname2ctype_pool_str1129[sizeof("inhalfwidthandfullwidthforms")];
    char uniname2ctype_pool_str1131[sizeof("punct")];
    char uniname2ctype_pool_str1139[sizeof("devanagari")];
    char uniname2ctype_pool_str1140[sizeof("inoldpersian")];
    char uniname2ctype_pool_str1145[sizeof("brahmi")];
    char uniname2ctype_pool_str1157[sizeof("balinese")];
    char uniname2ctype_pool_str1159[sizeof("inblockelements")];
    char uniname2ctype_pool_str1160[sizeof("linearb")];
    char uniname2ctype_pool_str1161[sizeof("inhighprivateusesurrogates")];
    char uniname2ctype_pool_str1172[sizeof("inbrahmi")];
    char uniname2ctype_pool_str1179[sizeof("inletterlikesymbols")];
    char uniname2ctype_pool_str1180[sizeof("number")];
    char uniname2ctype_pool_str1181[sizeof("graph")];
    char uniname2ctype_pool_str1186[sizeof("inethiopicsupplement")];
    char uniname2ctype_pool_str1193[sizeof("modifierletter")];
    char uniname2ctype_pool_str1196[sizeof("indingbats")];
    char uniname2ctype_pool_str1199[sizeof("assigned")];
    char uniname2ctype_pool_str1232[sizeof("graphemebase")];
    char uniname2ctype_pool_str1236[sizeof("inalchemicalsymbols")];
    char uniname2ctype_pool_str1237[sizeof("incombininghalfmarks")];
    char uniname2ctype_pool_str1249[sizeof("georgian")];
    char uniname2ctype_pool_str1253[sizeof("tagalog")];
    char uniname2ctype_pool_str1254[sizeof("kana")];
    char uniname2ctype_pool_str1257[sizeof("inkannada")];
    char uniname2ctype_pool_str1269[sizeof("incjkstrokes")];
    char uniname2ctype_pool_str1281[sizeof("ugaritic")];
    char uniname2ctype_pool_str1290[sizeof("braille")];
    char uniname2ctype_pool_str1291[sizeof("kali")];
    char uniname2ctype_pool_str1293[sizeof("digit")];
    char uniname2ctype_pool_str1297[sizeof("incjkcompatibilityforms")];
    char uniname2ctype_pool_str1302[sizeof("incjkcompatibilityideographs")];
    char uniname2ctype_pool_str1307[sizeof("inkaithi")];
    char uniname2ctype_pool_str1317[sizeof("inkatakana")];
    char uniname2ctype_pool_str1329[sizeof("alphabetic")];
    char uniname2ctype_pool_str1335[sizeof("nd")];
    char uniname2ctype_pool_str1336[sizeof("sd")];
    char uniname2ctype_pool_str1345[sizeof("brah")];
    char uniname2ctype_pool_str1356[sizeof("sund")];
    char uniname2ctype_pool_str1360[sizeof("cased")];
    char uniname2ctype_pool_str1363[sizeof("incjkcompatibilityideographssupplement")];
    char uniname2ctype_pool_str1367[sizeof("inhebrew")];
    char uniname2ctype_pool_str1374[sizeof("unassigned")];
    char uniname2ctype_pool_str1381[sizeof("hebrew")];
    char uniname2ctype_pool_str1385[sizeof("ingreekextended")];
    char uniname2ctype_pool_str1391[sizeof("otheruppercase")];
    char uniname2ctype_pool_str1393[sizeof("ugar")];
    char uniname2ctype_pool_str1398[sizeof("yi")];
    char uniname2ctype_pool_str1403[sizeof("cwu")];
    char uniname2ctype_pool_str1404[sizeof("yiii")];
    char uniname2ctype_pool_str1410[sizeof("lu")];
    char uniname2ctype_pool_str1411[sizeof("olck")];
    char uniname2ctype_pool_str1421[sizeof("inlisu")];
    char uniname2ctype_pool_str1422[sizeof("olchiki")];
    char uniname2ctype_pool_str1430[sizeof("hebr")];
    char uniname2ctype_pool_str1433[sizeof("inarabicsupplement")];
    char uniname2ctype_pool_str1434[sizeof("dep")];
    char uniname2ctype_pool_str1441[sizeof("insupplementalpunctuation")];
    char uniname2ctype_pool_str1442[sizeof("limbu")];
    char uniname2ctype_pool_str1443[sizeof("inbengali")];
    char uniname2ctype_pool_str1451[sizeof("lyci")];
    char uniname2ctype_pool_str1452[sizeof("inkharoshthi")];
    char uniname2ctype_pool_str1453[sizeof("inlatinextendedd")];
    char uniname2ctype_pool_str1455[sizeof("idstrinaryoperator")];
    char uniname2ctype_pool_str1456[sizeof("mark")];
    char uniname2ctype_pool_str1459[sizeof("lycian")];
    char uniname2ctype_pool_str1462[sizeof("inkanasupplement")];
    char uniname2ctype_pool_str1474[sizeof("intelugu")];
    char uniname2ctype_pool_str1475[sizeof("nko")];
    char uniname2ctype_pool_str1476[sizeof("nkoo")];
    char uniname2ctype_pool_str1484[sizeof("mlym")];
    char uniname2ctype_pool_str1485[sizeof("ideographic")];
    char uniname2ctype_pool_str1489[sizeof("tagb")];
    char uniname2ctype_pool_str1490[sizeof("bopo")];
    char uniname2ctype_pool_str1491[sizeof("inkhmersymbols")];
    char uniname2ctype_pool_str1494[sizeof("kaithi")];
    char uniname2ctype_pool_str1500[sizeof("intagbanwa")];
    char uniname2ctype_pool_str1501[sizeof("inbopomofo")];
    char uniname2ctype_pool_str1503[sizeof("rejang")];
    char uniname2ctype_pool_str1504[sizeof("sylotinagri")];
    char uniname2ctype_pool_str1505[sizeof("malayalam")];
    char uniname2ctype_pool_str1514[sizeof("otherdefaultignorablecodepoint")];
    char uniname2ctype_pool_str1515[sizeof("inmeeteimayek")];
    char uniname2ctype_pool_str1519[sizeof("inhighsurrogates")];
    char uniname2ctype_pool_str1522[sizeof("beng")];
    char uniname2ctype_pool_str1528[sizeof("mathsymbol")];
    char uniname2ctype_pool_str1529[sizeof("kthi")];
    char uniname2ctype_pool_str1531[sizeof("inoriya")];
    char uniname2ctype_pool_str1536[sizeof("inbuginese")];
    char uniname2ctype_pool_str1537[sizeof("inunifiedcanadianaboriginalsyllabicsextended")];
    char uniname2ctype_pool_str1547[sizeof("inaegeannumbers")];
    char uniname2ctype_pool_str1549[sizeof("inkhmer")];
    char uniname2ctype_pool_str1550[sizeof("osmanya")];
    char uniname2ctype_pool_str1552[sizeof("meeteimayek")];
    char uniname2ctype_pool_str1555[sizeof("sylo")];
    char uniname2ctype_pool_str1578[sizeof("gujr")];
    char uniname2ctype_pool_str1586[sizeof("changeswhencasemapped")];
    char uniname2ctype_pool_str1588[sizeof("idsb")];
    char uniname2ctype_pool_str1593[sizeof("syrc")];
    char uniname2ctype_pool_str1594[sizeof("gujarati")];
    char uniname2ctype_pool_str1595[sizeof("spacingmark")];
    char uniname2ctype_pool_str1596[sizeof("uideo")];
    char uniname2ctype_pool_str1597[sizeof("inlinearbsyllabary")];
    char uniname2ctype_pool_str1603[sizeof("inyiradicals")];
    char uniname2ctype_pool_str1604[sizeof("surrogate")];
    char uniname2ctype_pool_str1609[sizeof("oupper")];
    char uniname2ctype_pool_str1611[sizeof("kharoshthi")];
    char uniname2ctype_pool_str1613[sizeof("bidic")];
    char uniname2ctype_pool_str1616[sizeof("syriac")];
    char uniname2ctype_pool_str1617[sizeof("inkatakanaphoneticextensions")];
    char uniname2ctype_pool_str1618[sizeof("incjksymbolsandpunctuation")];
    char uniname2ctype_pool_str1624[sizeof("symbol")];
    char uniname2ctype_pool_str1628[sizeof("mymr")];
    char uniname2ctype_pool_str1632[sizeof("bamu")];
    char uniname2ctype_pool_str1633[sizeof("cyrl")];
    char uniname2ctype_pool_str1636[sizeof("openpunctuation")];
    char uniname2ctype_pool_str1638[sizeof("bopomofo")];
    char uniname2ctype_pool_str1647[sizeof("myanmar")];
    char uniname2ctype_pool_str1648[sizeof("inyijinghexagramsymbols")];
    char uniname2ctype_pool_str1656[sizeof("uppercase")];
    char uniname2ctype_pool_str1657[sizeof("inbamum")];
    char uniname2ctype_pool_str1660[sizeof("enclosingmark")];
    char uniname2ctype_pool_str1666[sizeof("khar")];
    char uniname2ctype_pool_str1670[sizeof("pd")];
    char uniname2ctype_pool_str1671[sizeof("ingeorgiansupplement")];
    char uniname2ctype_pool_str1674[sizeof("inlimbu")];
    char uniname2ctype_pool_str1683[sizeof("khmr")];
    char uniname2ctype_pool_str1687[sizeof("changeswhencasefolded")];
    char uniname2ctype_pool_str1692[sizeof("cyrillic")];
    char uniname2ctype_pool_str1694[sizeof("changeswhentitlecased")];
    char uniname2ctype_pool_str1705[sizeof("orya")];
    char uniname2ctype_pool_str1708[sizeof("softdotted")];
    char uniname2ctype_pool_str1718[sizeof("oldturkic")];
    char uniname2ctype_pool_str1720[sizeof("nonspacingmark")];
    char uniname2ctype_pool_str1732[sizeof("upper")];
    char uniname2ctype_pool_str1738[sizeof("inbamumsupplement")];
    char uniname2ctype_pool_str1744[sizeof("inethiopicextended")];
    char uniname2ctype_pool_str1764[sizeof("dashpunctuation")];
    char uniname2ctype_pool_str1767[sizeof("bidicontrol")];
    char uniname2ctype_pool_str1768[sizeof("punctuation")];
    char uniname2ctype_pool_str1775[sizeof("inkangxiradicals")];
    char uniname2ctype_pool_str1776[sizeof("changeswhenlowercased")];
    char uniname2ctype_pool_str1777[sizeof("orkh")];
    char uniname2ctype_pool_str1783[sizeof("unifiedideograph")];
    char uniname2ctype_pool_str1793[sizeof("patsyn")];
    char uniname2ctype_pool_str1794[sizeof("cherokee")];
    char uniname2ctype_pool_str1804[sizeof("grbase")];
    char uniname2ctype_pool_str1807[sizeof("graphemeextend")];
    char uniname2ctype_pool_str1808[sizeof("uppercaseletter")];
    char uniname2ctype_pool_str1819[sizeof("indevanagariextended")];
    char uniname2ctype_pool_str1821[sizeof("paragraphseparator")];
    char uniname2ctype_pool_str1829[sizeof("inbuhid")];
    char uniname2ctype_pool_str1836[sizeof("incombiningdiacriticalmarks")];
    char uniname2ctype_pool_str1839[sizeof("incurrencysymbols")];
    char uniname2ctype_pool_str1846[sizeof("incombiningdiacriticalmarksforsymbols")];
    char uniname2ctype_pool_str1851[sizeof("insupplementalarrowsb")];
    char uniname2ctype_pool_str1862[sizeof("incyrillicextendedb")];
    char uniname2ctype_pool_str1868[sizeof("othergraphemeextend")];
    char uniname2ctype_pool_str1870[sizeof("khmer")];
    char uniname2ctype_pool_str1877[sizeof("deprecated")];
    char uniname2ctype_pool_str1881[sizeof("inarabicpresentationformsb")];
    char uniname2ctype_pool_str1891[sizeof("incjkradicalssupplement")];
    char uniname2ctype_pool_str1897[sizeof("incombiningdiacriticalmarkssupplement")];
    char uniname2ctype_pool_str1898[sizeof("inhanguljamoextendedb")];
    char uniname2ctype_pool_str1908[sizeof("modifiersymbol")];
    char uniname2ctype_pool_str1912[sizeof("knda")];
    char uniname2ctype_pool_str1920[sizeof("cypriot")];
    char uniname2ctype_pool_str1931[sizeof("kannada")];
    char uniname2ctype_pool_str1939[sizeof("inplayingcards")];
    char uniname2ctype_pool_str1944[sizeof("currencysymbol")];
    char uniname2ctype_pool_str1945[sizeof("inlatinextendedb")];
    char uniname2ctype_pool_str1967[sizeof("defaultignorablecodepoint")];
    char uniname2ctype_pool_str1996[sizeof("incypriotsyllabary")];
    char uniname2ctype_pool_str2010[sizeof("insupplementaryprivateuseareab")];
    char uniname2ctype_pool_str2028[sizeof("grek")];
    char uniname2ctype_pool_str2060[sizeof("hyphen")];
    char uniname2ctype_pool_str2065[sizeof("unknown")];
    char uniname2ctype_pool_str2068[sizeof("guru")];
    char uniname2ctype_pool_str2072[sizeof("telugu")];
    char uniname2ctype_pool_str2104[sizeof("lydi")];
    char uniname2ctype_pool_str2112[sizeof("lydian")];
    char uniname2ctype_pool_str2115[sizeof("bugi")];
    char uniname2ctype_pool_str2145[sizeof("inhangulcompatibilityjamo")];
    char uniname2ctype_pool_str2160[sizeof("inkanbun")];
    char uniname2ctype_pool_str2202[sizeof("innoblock")];
    char uniname2ctype_pool_str2210[sizeof("batk")];
    char uniname2ctype_pool_str2218[sizeof("inbatak")];
    char uniname2ctype_pool_str2296[sizeof("quotationmark")];
    char uniname2ctype_pool_str2302[sizeof("buginese")];
    char uniname2ctype_pool_str2333[sizeof("egyp")];
    char uniname2ctype_pool_str2361[sizeof("inegyptianhieroglyphs")];
    char uniname2ctype_pool_str2417[sizeof("changeswhenuppercased")];
    char uniname2ctype_pool_str2470[sizeof("sk")];
    char uniname2ctype_pool_str2500[sizeof("buhd")];
    char uniname2ctype_pool_str2505[sizeof("qmark")];
    char uniname2ctype_pool_str2551[sizeof("katakana")];
    char uniname2ctype_pool_str2557[sizeof("oldsoutharabian")];
    char uniname2ctype_pool_str2647[sizeof("inkayahli")];
    char uniname2ctype_pool_str2676[sizeof("inboxdrawing")];
    char uniname2ctype_pool_str2678[sizeof("incjkcompatibility")];
    char uniname2ctype_pool_str2743[sizeof("incjkunifiedideographs")];
    char uniname2ctype_pool_str2759[sizeof("incjkunifiedideographsextensiona")];
    char uniname2ctype_pool_str2764[sizeof("incjkunifiedideographsextensionc")];
    char uniname2ctype_pool_str2779[sizeof("inbopomofoextended")];
    char uniname2ctype_pool_str2788[sizeof("any")];
    char uniname2ctype_pool_str2891[sizeof("inyisyllables")];
    char uniname2ctype_pool_str2917[sizeof("kayahli")];
    char uniname2ctype_pool_str3167[sizeof("buhid")];
    char uniname2ctype_pool_str3213[sizeof("grlink")];
    char uniname2ctype_pool_str3262[sizeof("greek")];
    char uniname2ctype_pool_str3309[sizeof("gurmukhi")];
    char uniname2ctype_pool_str3417[sizeof("incjkunifiedideographsextensiond")];
    char uniname2ctype_pool_str3433[sizeof("blank")];
    char uniname2ctype_pool_str3444[sizeof("batak")];
    char uniname2ctype_pool_str3512[sizeof("graphemelink")];
    char uniname2ctype_pool_str3645[sizeof("egyptianhieroglyphs")];
    char uniname2ctype_pool_str3663[sizeof("incjkunifiedideographsextensionb")];
    char uniname2ctype_pool_str4175[sizeof("zyyy")];
#endif /* USE_UNICODE_PROPERTIES */
  };
static const struct uniname2ctype_pool_t uniname2ctype_pool_contents =
  {
#ifndef USE_UNICODE_PROPERTIES
    "word",
    "print",
    "punct",
    "alpha",
    "alnum",
    "xdigit",
    "upper",
#else /* USE_UNICODE_PROPERTIES */
    "n",
    "s",
    "zs",
    "z",
    "cn",
    "cs",
    "ci",
    "qaai",
    "c",
    "cans",
    "mn",
    "sc",
    "zzzz",
    "qaac",
#endif /* USE_UNICODE_PROPERTIES */
    "ascii",
#ifdef USE_UNICODE_PROPERTIES
    "cc",
    "m",
    "insamaritan",
    "mc",
    "sm",
    "lana",
    "mandaic",
    "lc",
    "sinhala",
    "inlycian",
    "inancientsymbols",
    "cwcm",
    "inthai",
    "inmusicalsymbols",
    "incham",
    "l",
    "nl",
    "inthaana",
    "zl",
    "lm",
    "inlowsurrogates",
    "initialpunctuation",
    "alnum",
    "latn",
    "intransportandmapsymbols",
    "latin",
    "ital",
    "inmalayalam",
    "inavestan",
    "cwl",
    "incommonindicnumberforms",
    "inspecials",
    "ll",
    "inipaextensions",
    "taml",
    "intamil",
    "inlatinextendeda",
    "inarmenian",
    "cwt",
    "inlatinextendedc",
    "incuneiform",
    "intaitham",
    "lt",
#endif /* USE_UNICODE_PROPERTIES */
    "cntrl",
#ifdef USE_UNICODE_PROPERTIES
    "osma",
    "inmiscellaneoussymbols",
    "intaixuanjingsymbols",
    "inmiscellaneoussymbolsandarrows",
    "inosmanya",
    "tamil",
    "cwcf",
    "inmiscellaneoussymbolsandpictographs",
    "mtei",
    "inlatinextendedadditional",
    "innewtailue",
    "incontrolpictures",
    "tale",
    "sterm",
    "intaile",
    "inmiscellaneousmathematicalsymbolsa",
    "inmyanmarextendeda",
    "me",
    "cari",
    "inrunic",
    "incarian",
    "insyriac",
    "inenclosedalphanumerics",
    "taiviet",
    "carian",
    "armn",
    "samr",
    "armi",
    "newtailue",
    "incyrillic",
    "armenian",
    "inmyanmar",
    "samaritan",
    "arabic",
    "incuneiformnumbersandpunctuation",
    "no",
    "so",
    "sinh",
    "han",
    "innko",
    "zinh",
    "hani",
    "co",
    "taile",
    "inmiscellaneoustechnical",
    "ext",
    "insinhala",
    "inlinearbideograms",
    "inideographicdescriptioncharacters",
    "shavian",
    "cf",
    "connectorpunctuation",
    "shaw",
    "inopticalcharacterrecognition",
    "inruminumeralsymbols",
    "inenclosedalphanumericsupplement",
    "lo",
    "inemoticons",
    "common",
    "cham",
    "inlao",
    "lao",
    "laoo",
    "thai",
    "thaa",
    "mongolian",
    "thaana",
    "math",
    "inarrows",
    "oriya",
    "asciihexdigit",
    "taitham",
    "ps",
    "pi",
    "joinc",
    "loe",
    "inethiopic",
    "term",
    "vs",
    "pc",
    "hano",
    "insylotinagri",
    "invai",
    "vai",
    "vaii",
    "inshavian",
    "inphaistosdisc",
    "inolchiki",
    "ethi",
    "ahex",
    "inogham",
    "incherokee",
    "patws",
    "alpha",
    "inmathematicalalphanumericsymbols",
    "inlepcha",
    "inscriptionalparthian",
    "terminalpunctuation",
    "avst",
    "oalpha",
    "incoptic",
    "inenclosedcjklettersandmonths",
    "intifinagh",
    "tifinagh",
    "hira",
    "insmallformvariants",
    "hex",
    "inhiragana",
    "whitespace",
    "lineseparator",
    "inscriptionalpahlavi",
    "titlecaseletter",
    "tavt",
    "intaiviet",
    "lowercase",
    "control",
    "lepc",
    "hanunoo",
    "joincontrol",
    "ininscriptionalparthian",
    "coptic",
    "ininscriptionalpahlavi",
    "inmahjongtiles",
    "pe",
    "copt",
    "avestan",
    "cher",
    "finalpunctuation",
#endif /* USE_UNICODE_PROPERTIES */
    "space",
#ifdef USE_UNICODE_PROPERTIES
    "inphoneticextensions",
    "format",
    "inmongolian",
#endif /* USE_UNICODE_PROPERTIES */
    "lower",
#ifdef USE_UNICODE_PROPERTIES
    "wspace",
    "inphoenician",
    "java",
    "po",
    "intags",
    "prti",
    "invariationselectors",
    "pf",
    "cprt",
    "tagbanwa",
    "inphoneticextensionssupplement",
    "inlatin1supplement",
    "imperialaramaic",
    "xpeo",
    "phli",
    "age=1.1",
    "age=2.1",
    "nchar",
    "omath",
    "closepunctuation",
    "inalphabeticpresentationforms",
    "age=5.1",
    "age=5.2",
    "phnx",
    "age=4.1",
    "lowercaseletter",
    "age=2.0",
    "print",
    "age=6.0",
    "age=3.1",
    "age=3.2",
    "ingeneralpunctuation",
    "age=5.0",
    "age=4.0",
    "othersymbol",
    "invariationselectorssupplement",
    "age=3.0",
    "inimperialaramaic",
    "letter",
    "mong",
    "injavanese",
    "ogam",
    "p",
    "di",
    "ids",
    "zp",
    "caseignorable",
    "dia",
    "privateuse",
    "inmathematicaloperators",
    "spaceseparator",
    "tfng",
    "idc",
    "mand",
    "phoenician",
    "otheridcontinue",
    "otheridstart",
    "noncharactercodepoint",
    "inmandaic",
    "gothic",
    "saurashtra",
    "otheralphabetic",
    "inlydian",
    "lepcha",
    "idst",
    "ingujarati",
    "xids",
    "lisu",
    "inverticalforms",
    "ingurmukhi",
    "xidc",
    "glagolitic",
    "otherlowercase",
    "olower",
    "javanese",
    "patternsyntax",
    "hang",
    "ingeometricshapes",
    "insupplementalmathematicaloperators",
    "insundanese",
    "other",
    "talu",
    "othernumber",
    "oids",
    "odi",
    "sundanese",
    "insuperscriptsandsubscripts",
    "xsux",
    "oidc",
    "indominotiles",
    "inspacingmodifierletters",
    "inolditalic",
    "separator",
    "ingothic",
    "inprivateusearea",
    "indeseret",
    "inancientgreeknumbers",
    "otherletter",
    "ingeorgian",
    "inancientgreekmusicalnotation",
    "idcontinue",
    "xdigit",
    "xidstart",
    "letternumber",
    "ethiopic",
    "cuneiform",
    "othermath",
    "ingreekandcoptic",
    "inunifiedcanadianaboriginalsyllabics",
    "inoldturkic",
    "incountingrodnumerals",
    "telu",
    "inphagspa",
    "saur",
    "ideo",
    "diacritic",
    "patternwhitespace",
    "rjng",
    "runic",
    "grext",
    "insaurashtra",
    "inugaritic",
    "inhangulsyllables",
    "olditalic",
    "dsrt",
    "inrejang",
    "geor",
    "dash",
    "ogham",
    "goth",
    "idstart",
    "casedletter",
    "radical",
    "phagspa",
    "inmodifiertoneletters",
    "inbasiclatin",
    "canadianaboriginal",
    "insupplementalarrowsa",
    "xidcontinue",
    "inarabic",
    "otherpunctuation",
    "incyrillicextendeda",
    "hiragana",
    "hexdigit",
    "linb",
    "bali",
    "variationselector",
    "inarabicpresentationformsa",
    "innumberforms",
    "ogrext",
    "limb",
    "inhanguljamoextendeda",
    "logicalorderexception",
    "word",
    "inbyzantinemusicalsymbols",
    "bamum",
    "inbraillepatterns",
    "inhanguljamo",
    "inoldsoutharabian",
    "hangul",
    "tibt",
    "tibetan",
    "inhanunoo",
    "invedicextensions",
    "indevanagari",
    "incyrillicsupplement",
    "runr",
    "extender",
    "inbalinese",
    "bengali",
    "intibetan",
    "inglagolitic",
    "glag",
    "inethiopicextendeda",
    "inenclosedideographicsupplement",
    "idsbinaryoperator",
    "phag",
    "decimalnumber",
    "intagalog",
    "deseret",
    "inherited",
    "insupplementaryprivateuseareaa",
    "inmiscellaneousmathematicalsymbolsb",
    "sarb",
    "brai",
    "oldpersian",
    "arab",
    "tglg",
    "deva",
    "inhalfwidthandfullwidthforms",
    "punct",
    "devanagari",
    "inoldpersian",
    "brahmi",
    "balinese",
    "inblockelements",
    "linearb",
    "inhighprivateusesurrogates",
    "inbrahmi",
    "inletterlikesymbols",
    "number",
#endif /* USE_UNICODE_PROPERTIES */
    "graph",
#ifdef USE_UNICODE_PROPERTIES
    "inethiopicsupplement",
    "modifierletter",
    "indingbats",
    "assigned",
    "graphemebase",
    "inalchemicalsymbols",
    "incombininghalfmarks",
    "georgian",
    "tagalog",
    "kana",
    "inkannada",
    "incjkstrokes",
    "ugaritic",
    "braille",
    "kali",
#endif /* USE_UNICODE_PROPERTIES */
    "digit",
#ifndef USE_UNICODE_PROPERTIES
    "blank"
#else /* USE_UNICODE_PROPERTIES */
    "incjkcompatibilityforms",
    "incjkcompatibilityideographs",
    "inkaithi",
    "inkatakana",
    "alphabetic",
    "nd",
    "sd",
    "brah",
    "sund",
    "cased",
    "incjkcompatibilityideographssupplement",
    "inhebrew",
    "unassigned",
    "hebrew",
    "ingreekextended",
    "otheruppercase",
    "ugar",
    "yi",
    "cwu",
    "yiii",
    "lu",
    "olck",
    "inlisu",
    "olchiki",
    "hebr",
    "inarabicsupplement",
    "dep",
    "insupplementalpunctuation",
    "limbu",
    "inbengali",
    "lyci",
    "inkharoshthi",
    "inlatinextendedd",
    "idstrinaryoperator",
    "mark",
    "lycian",
    "inkanasupplement",
    "intelugu",
    "nko",
    "nkoo",
    "mlym",
    "ideographic",
    "tagb",
    "bopo",
    "inkhmersymbols",
    "kaithi",
    "intagbanwa",
    "inbopomofo",
    "rejang",
    "sylotinagri",
    "malayalam",
    "otherdefaultignorablecodepoint",
    "inmeeteimayek",
    "inhighsurrogates",
    "beng",
    "mathsymbol",
    "kthi",
    "inoriya",
    "inbuginese",
    "inunifiedcanadianaboriginalsyllabicsextended",
    "inaegeannumbers",
    "inkhmer",
    "osmanya",
    "meeteimayek",
    "sylo",
    "gujr",
    "changeswhencasemapped",
    "idsb",
    "syrc",
    "gujarati",
    "spacingmark",
    "uideo",
    "inlinearbsyllabary",
    "inyiradicals",
    "surrogate",
    "oupper",
    "kharoshthi",
    "bidic",
    "syriac",
    "inkatakanaphoneticextensions",
    "incjksymbolsandpunctuation",
    "symbol",
    "mymr",
    "bamu",
    "cyrl",
    "openpunctuation",
    "bopomofo",
    "myanmar",
    "inyijinghexagramsymbols",
    "uppercase",
    "inbamum",
    "enclosingmark",
    "khar",
    "pd",
    "ingeorgiansupplement",
    "inlimbu",
    "khmr",
    "changeswhencasefolded",
    "cyrillic",
    "changeswhentitlecased",
    "orya",
    "softdotted",
    "oldturkic",
    "nonspacingmark",
    "upper",
    "inbamumsupplement",
    "inethiopicextended",
    "dashpunctuation",
    "bidicontrol",
    "punctuation",
    "inkangxiradicals",
    "changeswhenlowercased",
    "orkh",
    "unifiedideograph",
    "patsyn",
    "cherokee",
    "grbase",
    "graphemeextend",
    "uppercaseletter",
    "indevanagariextended",
    "paragraphseparator",
    "inbuhid",
    "incombiningdiacriticalmarks",
    "incurrencysymbols",
    "incombiningdiacriticalmarksforsymbols",
    "insupplementalarrowsb",
    "incyrillicextendedb",
    "othergraphemeextend",
    "khmer",
    "deprecated",
    "inarabicpresentationformsb",
    "incjkradicalssupplement",
    "incombiningdiacriticalmarkssupplement",
    "inhanguljamoextendedb",
    "modifiersymbol",
    "knda",
    "cypriot",
    "kannada",
    "inplayingcards",
    "currencysymbol",
    "inlatinextendedb",
    "defaultignorablecodepoint",
    "incypriotsyllabary",
    "insupplementaryprivateuseareab",
    "grek",
    "hyphen",
    "unknown",
    "guru",
    "telugu",
    "lydi",
    "lydian",
    "bugi",
    "inhangulcompatibilityjamo",
    "inkanbun",
    "innoblock",
    "batk",
    "inbatak",
    "quotationmark",
    "buginese",
    "egyp",
    "inegyptianhieroglyphs",
    "changeswhenuppercased",
    "sk",
    "buhd",
    "qmark",
    "katakana",
    "oldsoutharabian",
    "inkayahli",
    "inboxdrawing",
    "incjkcompatibility",
    "incjkunifiedideographs",
    "incjkunifiedideographsextensiona",
    "incjkunifiedideographsextensionc",
    "inbopomofoextended",
    "any",
    "inyisyllables",
    "kayahli",
    "buhid",
    "grlink",
    "greek",
    "gurmukhi",
    "incjkunifiedideographsextensiond",
    "blank",
    "batak",
    "graphemelink",
    "egyptianhieroglyphs",
    "incjkunifiedideographsextensionb",
    "zyyy"
#endif /* USE_UNICODE_PROPERTIES */
  };
#define uniname2ctype_pool ((const char *) &uniname2ctype_pool_contents)
#ifdef __GNUC__
__inline
#ifdef __GNUC_STDC_INLINE__
__attribute__ ((__gnu_inline__))
#endif
#endif
const struct uniname2ctype_struct *
uniname2ctype_p (str, len)
     register const char *str;
     register unsigned int len;
{
  static const struct uniname2ctype_struct wordlist[] =
    {
#ifdef USE_UNICODE_PROPERTIES
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3,                                        34},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str5,                                        46},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str13,                                       54},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str15,                                        51},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str17,                                       20},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str19,                                       22},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str23,                                       60},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str25,                                    114},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str27,                                        17},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str28,                                    101},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str29,                                       33},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str30,                                       47},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str32,                                    201},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str34,                                    128},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str36,                                    14},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str41,                                       18},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str51,                                        30},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str52,                             231},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str53,                                       31},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str54,                                       49},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str63,                                    151},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str66,                                 168},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str70,                                       24},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str72,                                  92},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str73,                                373},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str75,                        371},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str76,                                     65},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str80,                                  243},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str81,                        401},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str82,                                  345},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str85,                                        23},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str87,                                       36},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str90,                                229},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str93,                                       52},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str94,                                       26},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str95,                         354},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str97,                       43},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str106,                                    13},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str108,                                     75},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str109,                413},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str110,                                    75},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str111,                                    111},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str116,                             241},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str118,                               388},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str121,                                      61},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str123,                337},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str125,                              366},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str128,                                       25},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str131,                         218},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str132,                                     88},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str136,                                 238},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str137,                        216},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str142,                              224},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str143,                                      63},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str147,                        304},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str148,                             395},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str149,                               267},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str150,                                       28},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str156,                                     3},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str158,                                    124},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str164,                  294},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str167,                    403},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str173,         302},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str174,                               381},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str175,                                    88},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str177,                                     64},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str178,    411},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str179,                                    159},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str180,               277},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str184,                             264},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str197,                       288},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str200,                                    120},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str203,                                   197},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str204,                                 263},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str206,     296},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str211,                      346},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str213,                                       32},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str215,                                    148},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str216,                                 254},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str217,                                374},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str218,                                227},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str221,                 290},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str222,                                 152},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str223,                                  148},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str224,                                     78},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str225,                                    155},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str227,                                    160},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str229,                               129},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str231,                              222},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str233,                                 78},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str234,                               246},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str235,                               155},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str238,                                   80},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str239,        396},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str241,                                       37},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str242,                                       50},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str246,                                     92},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str248,                                     109},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str249,                                   230},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str251,                                    114},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str252,                                    109},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str253,                                       21},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str256,                                   120},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str257,                287},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str259,                                     182},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str260,                               242},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str262,                      368},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str263,      313},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str265,                                 123},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str267,                                       19},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str269,                     39},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str270,                                    123},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str272,           289},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str275,                    392},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str281,        409},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str282,                                       27},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str283,                             412},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str284,                                   74},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str285,                                    150},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str290,                                   244},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str291,                                      94},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str292,                                     94},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str304,                                     93},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str308,                                     82},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str316,                               105},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str319,                                   82},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str325,                                     55},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str328,                                285},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str330,                                    87},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str332,                           178},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str340,                                 151},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str342,                                       45},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str346,                                       43},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str347,                                   171},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str350,                                     194},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str360,                              249},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str361,                                    175},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str363,                                      198},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str364,                                       39},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str367,                                    116},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str371,                           336},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str375,                                   331},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str376,                                     143},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str377,                                    143},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str382,                               380},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str384,                          372},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str385,                               272},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str389,                                     99},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str397,                                    178},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str399,                                 253},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str400,                              251},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str406,                                   199},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str407,                                     1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str408,       405},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str412,                                271},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str413,                   162},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str423,                     175},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str424,                                    153},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str426,                                  179},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str428,                                305},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str430,           323},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str433,                              307},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str435,                                131},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str437,                                    106},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str443,                     363},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str445,                                     177},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str452,                              315},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str458,                              169},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str460,                            52},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str464,                    163},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str470,                          28},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str475,                                    152},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str481,                               347},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str483,                                57},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str487,                                  18},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str488,                                    141},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str490,                                 116},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str501,                             171},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str503,                 389},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str504,                                  128},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str505,                  390},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str516,                          406},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str524,                                       41},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str525,                                    128},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str527,                                 153},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str531,                                    100},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str535,                         42},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str537,                                     9},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str542,                    274},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str551,                                   19},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str555,                             260},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str559,                                     6},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str564,                                  169},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str567,                            384},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str570,                                    158},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str576,                                       44},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str580,                                  419},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str583,                                    162},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str589,                    359},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str590,                                       42},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str592,                                    125},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str598,                                118},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str603,          275},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str604,                      215},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str608,                         160},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str609,                                    133},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str621,                                    163},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str623,                                 202},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str624,                                 204},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str626,                                   185},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str627,                                   176},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str629,                         41},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str630,           357},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str631,                                 211},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str632,                                 212},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str633,                                    137},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str634,                                 209},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str635,                          25},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str636,                                 203},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str637,                                     7},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str638,                                 213},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str639,                                 206},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str640,                                 207},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str641,                    279},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str643,                                 210},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str646,                                 208},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str648,                              50},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str650,          420},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str651,                                 205},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str658,                       383},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str659,                                   23},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str661,                                    105},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str666,                              344},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str668,                                    102},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str673,                                        38},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str676,                                       70},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str677,                                      66},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str681,                                       53},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str687,                            60},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str689,                                     181},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str690,                               21},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str692,                 286},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str694,                           54},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str696,                                    131},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str699,                                      67},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str704,                                    168},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str706,                              137},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str709,                         196},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str715,                            195},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str717,                   185},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str719,                               232},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str720,                                  112},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str721,                              144},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str722,                         179},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str726,                                385},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str728,                                  141},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str729,                                    188},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str732,                              236},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str733,                                     68},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str735,                                    156},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str737,                         360},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str742,                              235},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str744,                                     69},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str746,                              130},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str750,                          183},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str751,                                  183},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str753,                                158},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str754,                           200},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str760,                                     98},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str775,                       293},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str777,     301},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str778,                             269},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str784,                                    17},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str790,                                    129},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str791,                              37},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str795,                                    195},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str796,                                     191},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str797,                               140},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str802,             280},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str803,                                    136},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str806,                                    196},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str808,                           407},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str813,                219},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str818,                             375},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str820,                                51},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str826,                                376},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str827,                        355},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str828,                               379},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str829,                   370},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str832,                              27},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str833,                              247},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str836,           402},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str840,                               67},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str843,                                   11},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str849,                                 68},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str851,                             36},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str857,                                 99},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str861,                               136},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str862,                               176},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str864,                        221},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str865,    252},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str867,                             391},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str869,                   404},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str875,                                     89},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str878,                               338},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str883,                                    144},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str886,                                    180},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str890,                               181},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str892,                       199},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str896,                                    146},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str901,                                   103},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str902,                                    71},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str904,                            339},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str905,                              377},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str907,                       350},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str910,                               111},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str911,                                    113},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str912,                                342},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str914,                                     97},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str915,                                    172},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str921,                                   102},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str923,                                    112},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str926,                                  66},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str928,                              24},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str930,                                 189},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str932,                                 138},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str935,                   334},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str937,                            214},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str939,                      101},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str947,                   297},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str951,                              69},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str954,                                226},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str955,                         44},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str958,                     309},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str961,                                106},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str962,                                177},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str963,                                    121},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str970,                                    135},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str976,                       198},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str977,              358},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str983,                           284},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str986,                                  186},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str987,                                    119},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str994,                   343},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str995,                   194},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str996,                                     12},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str997,               400},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1000,                                   157},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1002,                       298},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1003,                            248},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1004,                       387},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1017,                                   98},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1026,                                     95},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1038,                                  95},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1052,                               256},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1053,                       273},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1056,                            233},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1057,                    223},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1060,                                    103},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1064,                                182},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1066,                              268},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1067,                                  84},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1073,                               245},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1075,                            303},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1078,                                    130},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1087,                     348},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1089,         410},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1092,                       187},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1095,                                    138},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1097,                            35},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1099,                               255},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1100,                                 113},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1105,                               114},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1106,          421},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1110,     300},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1112,                                    161},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1114,                                    126},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1117,                              133},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1118,                                     80},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1123,                                    115},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1128,                                     83},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1129,            365},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1131,                                     8},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1139,                               83},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1140,                            378},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1145,                                  167},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1157,                                135},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1159,                         292},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1160,                                 121},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1161,              353},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1172,                                393},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1179,                     283},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1180,                                   34},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1181,                                     5},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1186,                    250},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1193,                           26},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1196,                              295},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1199,                                 16},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1232,                             72},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1236,                     414},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1237,                    361},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1249,                                 97},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1253,                                 115},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1254,                                    107},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1257,                               240},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1269,                            321},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1281,                                122},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1290,                                 126},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1291,                                    145},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1293,                                     4},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1297,                 362},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1302,            356},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1307,                                394},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1317,                              316},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1329,                               56},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1335,                                       35},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1336,                                      193},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1345,                                    167},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1356,                                    140},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1360,                                    59},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1363,  418},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1367,                                225},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1374,                               20},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1381,                                   79},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1385,                         278},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1391,                          184},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1393,                                    122},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1398,                                      110},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1403,                                      62},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1404,                                    110},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1410,                                       29},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1411,                                    142},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1421,                                  330},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1422,                                 142},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1430,                                     79},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1433,                      228},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1434,                                     192},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1441,               310},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1442,                                   119},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1443,                               234},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1451,                                    147},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1452,                            386},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1453,                        335},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1455,                      188},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1456,                                     30},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1459,                                  147},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1462,                        399},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1474,                                239},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1475,                                     139},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1476,                                    139},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1484,                                     91},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1485,                             180},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1489,                                    118},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1490,                                    108},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1491,                          265},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1494,                                  165},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1500,                              258},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1501,                              317},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1503,                                  146},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1504,                             132},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1505,                                91},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1514,          191},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1515,                           349},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1519,                        352},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1522,                                     84},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1528,                               49},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1529,                                    165},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1531,                                 237},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1536,                              266},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1537, 261},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1547,                         369},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1549,                                 259},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1550,                                 124},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1552,                             159},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1555,                                    132},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1578,                                     86},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1586,                    65},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1588,                                    187},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1593,                                     81},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1594,                                 86},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1595,                              31},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1596,                                   190},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1597,                      367},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1603,                            329},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1604,                                22},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1609,                                  184},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1611,                              134},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1613,                                   170},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1616,                                   81},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1617,            322},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1618,              314},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1624,                                   46},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1628,                                     96},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1632,                                    157},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1633,                                     77},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1636,                          45},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1638,                                108},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1647,                                  96},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1648,                 326},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1656,                                58},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1657,                                 333},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1660,                            32},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1666,                                    134},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1670,                                       40},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1671,                    306},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1674,                                 262},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1683,                                    104},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1687,                    64},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1692,                                 77},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1694,                    63},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1705,                                     87},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1708,                              193},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1718,                               164},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1720,                           33},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1732,                                    10},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1738,                       398},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1744,                      308},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1764,                          40},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1767,                             170},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1768,                              38},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1775,                        312},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1776,                    61},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1777,                                    164},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1783,                        190},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1793,                                  200},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1794,                                100},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1804,                                   72},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1807,                           71},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1808,                          29},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1819,                    340},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1821,                       53},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1829,                                 257},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1836,             220},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1839,                       281},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1846,   282},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1851,                   299},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1862,                     332},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1868,                     186},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1870,                                   104},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1877,                              192},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1881,              364},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1891,                 311},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1897,   276},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1898,                   351},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1908,                           48},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1912,                                     90},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1920,                                 125},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1931,                                  90},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1939,                          408},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1944,                           47},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1945,                        217},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1967,                70},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str1996,                      382},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2010,          422},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2028,                                     76},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2060,                                  173},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2065,                                 201},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2068,                                     85},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2072,                                   89},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2104,                                    149},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2112,                                  149},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2115,                                    127},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2145,               318},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2160,                                319},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2202,                               423},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2210,                                    166},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2218,                                 270},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2296,                           174},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2302,                                127},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2333,                                    154},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2361,                   397},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2417,                    62},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2470,                                       48},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2500,                                    117},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2505,                                   174},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2551,                                107},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2557,                         161},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2647,                               341},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2676,                            291},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2678,                      324},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2743,                  327},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2759,        325},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2764,        416},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2779,                      320},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2788,                                      15},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2891,                           328},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str2917,                                 145},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3167,                                   117},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3213,                                   73},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3262,                                    76},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3309,                                 85},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3417,        417},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3433,                                     2},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3444,                                   166},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3512,                             73},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
#endif /* USE_UNICODE_PROPERTIES */
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
#ifndef USE_UNICODE_PROPERTIES
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str6,                                     12},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str7,                                     7},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str8,                                     8},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str9,                                     1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str10,                                    13},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str11,                                   11},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str12,                                    10},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str13,                                    14},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str14,                                     3},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str15,                                     9},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str16,                                     6},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str17,                                     5},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str18,                                     4},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str19,                                     2}
#else /* USE_UNICODE_PROPERTIES */
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3645,                     154},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str3663,        415},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {-1}, {-1}, {-1}, {-1}, {-1}, {-1}, {-1},
      {(int)(long)&((struct uniname2ctype_pool_t *)0)->uniname2ctype_pool_str4175,                                     74}
#endif /* USE_UNICODE_PROPERTIES */
    };

  if (len <= MAX_WORD_LENGTH && len >= MIN_WORD_LENGTH)
    {
      register int key = uniname2ctype_hash (str, len);

      if (key <= MAX_HASH_VALUE && key >= 0)
        {
          register int o = wordlist[key].name;
          if (o >= 0)
            {
              register const char *s = o + uniname2ctype_pool;

              if (*str == *s && !strncmp (str + 1, s + 1, len - 1) && s[len] == '\0')
                return &wordlist[key];
            }
        }
    }
  return 0;
}

static int
uniname2ctype(const UChar *name, unsigned int len)
{
  const struct uniname2ctype_struct *p = uniname2ctype_p((const char *)name, len);
  if (p) return p->ctype;
  return -1;
}
